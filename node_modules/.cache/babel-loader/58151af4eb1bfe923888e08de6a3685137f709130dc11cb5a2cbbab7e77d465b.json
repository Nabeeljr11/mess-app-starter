{"ast":null,"code":"var _jsxFileName = \"C:\\\\Users\\\\mohdn\\\\OneDrive\\\\Desktop\\\\mess-app-starter\\\\src\\\\AdminPage.js\",\n  _s = $RefreshSig$();\n// AdminPage.js\nimport React, { useEffect, useState } from \"react\";\nimport { db } from \"./firebase\";\nimport { collection, getDocs, doc, getDoc, setDoc } from \"firebase/firestore\";\nimport \"./AdminPage.css\";\nimport { jsxDEV as _jsxDEV, Fragment as _Fragment } from \"react/jsx-dev-runtime\";\nfunction AdminPage({\n  onLogout,\n  goToPointSystem\n}) {\n  _s();\n  const [mealCounts, setMealCounts] = useState({});\n  const [userPoints, setUserPoints] = useState({});\n  const [loading, setLoading] = useState(true);\n  const [fromDate, setFromDate] = useState(\"\");\n  const [toDate, setToDate] = useState(\"\");\n  const [generated, setGenerated] = useState(false);\n\n  // default rules (used only if settings/points not present)\n  const defaultSystem = {\n    X: 1,\n    \"0\": 0,\n    B: 0.25,\n    L: 0.35,\n    S: 0.45,\n    \"B/L\": 0.65,\n    \"B/S\": 0.75,\n    \"L/S\": 0.85\n  };\n  const [pointSystem, setPointSystem] = useState(defaultSystem);\n  const [allUsers, setAllUsers] = useState([]);\n  useEffect(() => {\n    const fetchAll = async () => {\n      try {\n        // load point system\n        const settingsRef = doc(db, \"settings\", \"points\");\n        const settingsSnap = await getDoc(settingsRef);\n        if (settingsSnap.exists()) {\n          setPointSystem(settingsSnap.data());\n        } else {\n          await setDoc(settingsRef, defaultSystem);\n        }\n\n        // load users\n        const usersRef = collection(db, \"users\");\n        const querySnapshot = await getDocs(usersRef);\n        const all = [];\n        const counts = {};\n        const today = new Date();\n\n        // next 7 days for meal counts\n        const next7Days = [];\n        for (let i = 0; i < 8; i++) {\n          const d = new Date(today);\n          d.setDate(today.getDate() + i);\n          const dateStr = d.toISOString().split(\"T\")[0];\n          next7Days.push(dateStr);\n          counts[dateStr] = {\n            breakfast: 0,\n            lunch: 0,\n            supper: 0\n          };\n        }\n        querySnapshot.forEach(docSnap => {\n          const data = docSnap.data();\n          all.push(data);\n          const userMeals = data.meals || {};\n          next7Days.forEach(day => {\n            const meals = userMeals[day];\n            if (meals) {\n              [\"breakfast\", \"lunch\", \"supper\"].forEach(meal => {\n                if (meals[meal]) counts[day][meal] += 1;\n              });\n            }\n          });\n        });\n        setAllUsers(all);\n        setMealCounts(counts);\n      } catch (err) {\n        console.error(\"Admin data error:\", err);\n      }\n      setLoading(false);\n    };\n    fetchAll();\n  }, []);\n\n  // calculate points for a date range\n  const generateReport = () => {\n    if (!fromDate || !toDate) {\n      alert(\"⚠️ Please select both From and To dates!\");\n      return;\n    }\n    const points = {};\n    allUsers.forEach(user => {\n      const email = user.email || \"Unknown\";\n      const userMeals = user.meals || {};\n      let totalPoints = 0;\n      Object.entries(userMeals).forEach(([day, meals]) => {\n        if (day >= fromDate && day <= toDate) {\n          const marked = {\n            B: !!meals.breakfast,\n            L: !!meals.lunch,\n            S: !!meals.supper\n          };\n          const unmarked = Object.keys(marked).filter(m => !marked[m]);\n          let key = \"0\";\n          if (unmarked.length === 3) key = \"X\";else if (unmarked.length === 0) key = \"0\";else key = unmarked.join(\"/\");\n          totalPoints += pointSystem[key] || 0;\n        }\n      });\n      points[email] = totalPoints.toFixed(2);\n    });\n    setUserPoints(points);\n    setGenerated(true);\n  };\n\n  // export CSV\n  const exportCSV = () => {\n    const rows = [[\"Email\", \"Points\"]];\n    Object.entries(userPoints).forEach(([email, pts]) => {\n      rows.push([email, pts]);\n    });\n    let csvContent = rows.map(r => r.join(\",\")).join(\"\\n\");\n    const blob = new Blob([csvContent], {\n      type: \"text/csv;charset=utf-8;\"\n    });\n    const url = URL.createObjectURL(blob);\n    const a = document.createElement(\"a\");\n    a.href = url;\n    a.setAttribute(\"download\", `points_${fromDate}_to_${toDate}.csv`);\n    document.body.appendChild(a);\n    a.click();\n    document.body.removeChild(a);\n  };\n  if (loading) return /*#__PURE__*/_jsxDEV(\"h2\", {\n    className: \"loading\",\n    children: \"Loading data...\"\n  }, void 0, false, {\n    fileName: _jsxFileName,\n    lineNumber: 138,\n    columnNumber: 23\n  }, this);\n  return /*#__PURE__*/_jsxDEV(\"div\", {\n    className: \"admin-container\",\n    children: [/*#__PURE__*/_jsxDEV(\"h2\", {\n      className: \"title\",\n      children: \"\\uD83D\\uDCCA Admin Dashboard\"\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 142,\n      columnNumber: 7\n    }, this), /*#__PURE__*/_jsxDEV(\"h3\", {\n      children: \"\\uD83E\\uDD58 Meal Counts (Next 8 Days)\"\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 144,\n      columnNumber: 7\n    }, this), /*#__PURE__*/_jsxDEV(\"table\", {\n      className: \"meal-table\",\n      children: [/*#__PURE__*/_jsxDEV(\"thead\", {\n        children: /*#__PURE__*/_jsxDEV(\"tr\", {\n          children: [/*#__PURE__*/_jsxDEV(\"th\", {\n            className: \"date-col\",\n            children: \"Date\"\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 148,\n            columnNumber: 13\n          }, this), /*#__PURE__*/_jsxDEV(\"th\", {\n            children: \"\\uD83C\\uDF73 Breakfast\"\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 149,\n            columnNumber: 13\n          }, this), /*#__PURE__*/_jsxDEV(\"th\", {\n            children: \"\\uD83E\\uDD57 Lunch\"\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 150,\n            columnNumber: 13\n          }, this), /*#__PURE__*/_jsxDEV(\"th\", {\n            children: \"\\uD83C\\uDF5B Supper\"\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 151,\n            columnNumber: 13\n          }, this)]\n        }, void 0, true, {\n          fileName: _jsxFileName,\n          lineNumber: 147,\n          columnNumber: 11\n        }, this)\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 146,\n        columnNumber: 9\n      }, this), /*#__PURE__*/_jsxDEV(\"tbody\", {\n        children: Object.entries(mealCounts).map(([day, meals]) => /*#__PURE__*/_jsxDEV(\"tr\", {\n          children: [/*#__PURE__*/_jsxDEV(\"td\", {\n            className: \"date-col\",\n            children: day\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 157,\n            columnNumber: 15\n          }, this), /*#__PURE__*/_jsxDEV(\"td\", {\n            children: meals.breakfast\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 158,\n            columnNumber: 15\n          }, this), /*#__PURE__*/_jsxDEV(\"td\", {\n            children: meals.lunch\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 159,\n            columnNumber: 15\n          }, this), /*#__PURE__*/_jsxDEV(\"td\", {\n            children: meals.supper\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 160,\n            columnNumber: 15\n          }, this)]\n        }, day, true, {\n          fileName: _jsxFileName,\n          lineNumber: 156,\n          columnNumber: 13\n        }, this))\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 154,\n        columnNumber: 9\n      }, this)]\n    }, void 0, true, {\n      fileName: _jsxFileName,\n      lineNumber: 145,\n      columnNumber: 7\n    }, this), /*#__PURE__*/_jsxDEV(\"h3\", {\n      children: \"\\uD83C\\uDFC6Generate Points Report\"\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 166,\n      columnNumber: 7\n    }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n      className: \"report-filters\",\n      children: [/*#__PURE__*/_jsxDEV(\"label\", {\n        children: [\"From:\", \" \", /*#__PURE__*/_jsxDEV(\"input\", {\n          type: \"date\",\n          value: fromDate,\n          onChange: e => setFromDate(e.target.value)\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 170,\n          columnNumber: 11\n        }, this)]\n      }, void 0, true, {\n        fileName: _jsxFileName,\n        lineNumber: 168,\n        columnNumber: 9\n      }, this), /*#__PURE__*/_jsxDEV(\"label\", {\n        children: [\"To:\", \" \", /*#__PURE__*/_jsxDEV(\"input\", {\n          type: \"date\",\n          value: toDate,\n          onChange: e => setToDate(e.target.value)\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 174,\n          columnNumber: 11\n        }, this)]\n      }, void 0, true, {\n        fileName: _jsxFileName,\n        lineNumber: 172,\n        columnNumber: 9\n      }, this), /*#__PURE__*/_jsxDEV(\"button\", {\n        className: \"btn generate-btn\",\n        onClick: generateReport,\n        children: \"Generate\"\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 176,\n        columnNumber: 9\n      }, this)]\n    }, void 0, true, {\n      fileName: _jsxFileName,\n      lineNumber: 167,\n      columnNumber: 7\n    }, this), generated && /*#__PURE__*/_jsxDEV(_Fragment, {\n      children: [/*#__PURE__*/_jsxDEV(\"table\", {\n        className: \"meal-table\",\n        children: [/*#__PURE__*/_jsxDEV(\"thead\", {\n          children: /*#__PURE__*/_jsxDEV(\"tr\", {\n            children: [/*#__PURE__*/_jsxDEV(\"th\", {\n              children: \"Email\"\n            }, void 0, false, {\n              fileName: _jsxFileName,\n              lineNumber: 186,\n              columnNumber: 17\n            }, this), /*#__PURE__*/_jsxDEV(\"th\", {\n              children: \"Total Points\"\n            }, void 0, false, {\n              fileName: _jsxFileName,\n              lineNumber: 187,\n              columnNumber: 17\n            }, this)]\n          }, void 0, true, {\n            fileName: _jsxFileName,\n            lineNumber: 185,\n            columnNumber: 15\n          }, this)\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 184,\n          columnNumber: 13\n        }, this), /*#__PURE__*/_jsxDEV(\"tbody\", {\n          children: Object.entries(userPoints).map(([email, points]) => /*#__PURE__*/_jsxDEV(\"tr\", {\n            children: [/*#__PURE__*/_jsxDEV(\"td\", {\n              children: email\n            }, void 0, false, {\n              fileName: _jsxFileName,\n              lineNumber: 193,\n              columnNumber: 19\n            }, this), /*#__PURE__*/_jsxDEV(\"td\", {\n              children: points\n            }, void 0, false, {\n              fileName: _jsxFileName,\n              lineNumber: 194,\n              columnNumber: 19\n            }, this)]\n          }, email, true, {\n            fileName: _jsxFileName,\n            lineNumber: 192,\n            columnNumber: 17\n          }, this))\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 190,\n          columnNumber: 13\n        }, this)]\n      }, void 0, true, {\n        fileName: _jsxFileName,\n        lineNumber: 183,\n        columnNumber: 11\n      }, this), /*#__PURE__*/_jsxDEV(\"button\", {\n        className: \"btn export-btn\",\n        onClick: exportCSV,\n        children: \"\\u2B07\\uFE0F Download CSV\"\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 200,\n        columnNumber: 11\n      }, this)]\n    }, void 0, true), /*#__PURE__*/_jsxDEV(\"div\", {\n      className: \"admin-actions\",\n      children: [/*#__PURE__*/_jsxDEV(\"button\", {\n        className: \"btn points-btn\",\n        onClick: goToPointSystem,\n        children: \"\\u2699\\uFE0F Point System\"\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 207,\n        columnNumber: 9\n      }, this), /*#__PURE__*/_jsxDEV(\"button\", {\n        className: \"logout-btn\",\n        onClick: onLogout,\n        children: \"Logout\"\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 210,\n        columnNumber: 9\n      }, this)]\n    }, void 0, true, {\n      fileName: _jsxFileName,\n      lineNumber: 206,\n      columnNumber: 7\n    }, this)]\n  }, void 0, true, {\n    fileName: _jsxFileName,\n    lineNumber: 141,\n    columnNumber: 5\n  }, this);\n}\n_s(AdminPage, \"ifKAwhT4kP1s0sllJ0tJUpMsmSU=\");\n_c = AdminPage;\nexport default AdminPage;\nvar _c;\n$RefreshReg$(_c, \"AdminPage\");","map":{"version":3,"names":["React","useEffect","useState","db","collection","getDocs","doc","getDoc","setDoc","jsxDEV","_jsxDEV","Fragment","_Fragment","AdminPage","onLogout","goToPointSystem","_s","mealCounts","setMealCounts","userPoints","setUserPoints","loading","setLoading","fromDate","setFromDate","toDate","setToDate","generated","setGenerated","defaultSystem","X","B","L","S","pointSystem","setPointSystem","allUsers","setAllUsers","fetchAll","settingsRef","settingsSnap","exists","data","usersRef","querySnapshot","all","counts","today","Date","next7Days","i","d","setDate","getDate","dateStr","toISOString","split","push","breakfast","lunch","supper","forEach","docSnap","userMeals","meals","day","meal","err","console","error","generateReport","alert","points","user","email","totalPoints","Object","entries","marked","unmarked","keys","filter","m","key","length","join","toFixed","exportCSV","rows","pts","csvContent","map","r","blob","Blob","type","url","URL","createObjectURL","a","document","createElement","href","setAttribute","body","appendChild","click","removeChild","className","children","fileName","_jsxFileName","lineNumber","columnNumber","value","onChange","e","target","onClick","_c","$RefreshReg$"],"sources":["C:/Users/mohdn/OneDrive/Desktop/mess-app-starter/src/AdminPage.js"],"sourcesContent":["// AdminPage.js\r\nimport React, { useEffect, useState } from \"react\";\r\nimport { db } from \"./firebase\";\r\nimport { collection, getDocs, doc, getDoc, setDoc } from \"firebase/firestore\";\r\nimport \"./AdminPage.css\";\r\n\r\nfunction AdminPage({ onLogout, goToPointSystem }) {\r\n  const [mealCounts, setMealCounts] = useState({});\r\n  const [userPoints, setUserPoints] = useState({});\r\n  const [loading, setLoading] = useState(true);\r\n\r\n  const [fromDate, setFromDate] = useState(\"\");\r\n  const [toDate, setToDate] = useState(\"\");\r\n  const [generated, setGenerated] = useState(false);\r\n\r\n  // default rules (used only if settings/points not present)\r\n  const defaultSystem = {\r\n    X: 1,\r\n    \"0\": 0,\r\n    B: 0.25,\r\n    L: 0.35,\r\n    S: 0.45,\r\n    \"B/L\": 0.65,\r\n    \"B/S\": 0.75,\r\n    \"L/S\": 0.85,\r\n  };\r\n\r\n  const [pointSystem, setPointSystem] = useState(defaultSystem);\r\n  const [allUsers, setAllUsers] = useState([]);\r\n\r\n  useEffect(() => {\r\n    const fetchAll = async () => {\r\n      try {\r\n        // load point system\r\n        const settingsRef = doc(db, \"settings\", \"points\");\r\n        const settingsSnap = await getDoc(settingsRef);\r\n        if (settingsSnap.exists()) {\r\n          setPointSystem(settingsSnap.data());\r\n        } else {\r\n          await setDoc(settingsRef, defaultSystem);\r\n        }\r\n\r\n        // load users\r\n        const usersRef = collection(db, \"users\");\r\n        const querySnapshot = await getDocs(usersRef);\r\n\r\n        const all = [];\r\n        const counts = {};\r\n        const today = new Date();\r\n\r\n        // next 7 days for meal counts\r\n        const next7Days = [];\r\n        for (let i = 0; i < 8; i++) {\r\n          const d = new Date(today);\r\n          d.setDate(today.getDate() + i);\r\n          const dateStr = d.toISOString().split(\"T\")[0];\r\n          next7Days.push(dateStr);\r\n          counts[dateStr] = { breakfast: 0, lunch: 0, supper: 0 };\r\n        }\r\n\r\n        querySnapshot.forEach((docSnap) => {\r\n          const data = docSnap.data();\r\n          all.push(data);\r\n\r\n          const userMeals = data.meals || {};\r\n          next7Days.forEach((day) => {\r\n            const meals = userMeals[day];\r\n            if (meals) {\r\n              [\"breakfast\", \"lunch\", \"supper\"].forEach((meal) => {\r\n                if (meals[meal]) counts[day][meal] += 1;\r\n              });\r\n            }\r\n          });\r\n        });\r\n\r\n        setAllUsers(all);\r\n        setMealCounts(counts);\r\n      } catch (err) {\r\n        console.error(\"Admin data error:\", err);\r\n      }\r\n      setLoading(false);\r\n    };\r\n\r\n    fetchAll();\r\n  }, []);\r\n\r\n  // calculate points for a date range\r\n  const generateReport = () => {\r\n    if (!fromDate || !toDate) {\r\n      alert(\"⚠️ Please select both From and To dates!\");\r\n      return;\r\n    }\r\n\r\n    const points = {};\r\n    allUsers.forEach((user) => {\r\n      const email = user.email || \"Unknown\";\r\n      const userMeals = user.meals || {};\r\n      let totalPoints = 0;\r\n\r\n      Object.entries(userMeals).forEach(([day, meals]) => {\r\n        if (day >= fromDate && day <= toDate) {\r\n          const marked = { B: !!meals.breakfast, L: !!meals.lunch, S: !!meals.supper };\r\n          const unmarked = Object.keys(marked).filter((m) => !marked[m]);\r\n          let key = \"0\";\r\n          if (unmarked.length === 3) key = \"X\";\r\n          else if (unmarked.length === 0) key = \"0\";\r\n          else key = unmarked.join(\"/\");\r\n          totalPoints += pointSystem[key] || 0;\r\n        }\r\n      });\r\n\r\n      points[email] = totalPoints.toFixed(2);\r\n    });\r\n\r\n    setUserPoints(points);\r\n    setGenerated(true);\r\n  };\r\n\r\n  // export CSV\r\n  const exportCSV = () => {\r\n    const rows = [[\"Email\", \"Points\"]];\r\n    Object.entries(userPoints).forEach(([email, pts]) => {\r\n      rows.push([email, pts]);\r\n    });\r\n\r\n    let csvContent = rows.map((r) => r.join(\",\")).join(\"\\n\");\r\n    const blob = new Blob([csvContent], { type: \"text/csv;charset=utf-8;\" });\r\n\r\n    const url = URL.createObjectURL(blob);\r\n    const a = document.createElement(\"a\");\r\n    a.href = url;\r\n    a.setAttribute(\"download\", `points_${fromDate}_to_${toDate}.csv`);\r\n    document.body.appendChild(a);\r\n    a.click();\r\n    document.body.removeChild(a);\r\n  };\r\n\r\n  if (loading) return <h2 className=\"loading\">Loading data...</h2>;\r\n\r\n  return (\r\n    <div className=\"admin-container\">\r\n      <h2 className=\"title\">📊 Admin Dashboard</h2>\r\n\r\n      <h3>🥘 Meal Counts (Next 8 Days)</h3>\r\n      <table className=\"meal-table\">\r\n        <thead>\r\n          <tr>\r\n            <th className=\"date-col\">Date</th>\r\n            <th>🍳 Breakfast</th>\r\n            <th>🥗 Lunch</th>\r\n            <th>🍛 Supper</th>\r\n          </tr>\r\n        </thead>\r\n        <tbody>\r\n          {Object.entries(mealCounts).map(([day, meals]) => (\r\n            <tr key={day}>\r\n              <td className=\"date-col\">{day}</td>\r\n              <td>{meals.breakfast}</td>\r\n              <td>{meals.lunch}</td>\r\n              <td>{meals.supper}</td>\r\n            </tr>\r\n          ))}\r\n        </tbody>\r\n      </table>\r\n\r\n      <h3>🏆Generate Points Report</h3>\r\n      <div className=\"report-filters\">\r\n        <label>\r\n          From:{\" \"}\r\n          <input type=\"date\" value={fromDate} onChange={(e) => setFromDate(e.target.value)} />\r\n        </label>\r\n        <label>\r\n          To:{\" \"}\r\n          <input type=\"date\" value={toDate} onChange={(e) => setToDate(e.target.value)} />\r\n        </label>\r\n        <button className=\"btn generate-btn\" onClick={generateReport}>\r\n          Generate\r\n        </button>\r\n      </div>\r\n\r\n      {generated && (\r\n        <>\r\n          <table className=\"meal-table\">\r\n            <thead>\r\n              <tr>\r\n                <th>Email</th>\r\n                <th>Total Points</th>\r\n              </tr>\r\n            </thead>\r\n            <tbody>\r\n              {Object.entries(userPoints).map(([email, points]) => (\r\n                <tr key={email}>\r\n                  <td>{email}</td>\r\n                  <td>{points}</td>\r\n                </tr>\r\n              ))}\r\n            </tbody>\r\n          </table>\r\n\r\n          <button className=\"btn export-btn\" onClick={exportCSV}>\r\n            ⬇️ Download CSV\r\n          </button>\r\n        </>\r\n      )}\r\n\r\n      <div className=\"admin-actions\">\r\n        <button className=\"btn points-btn\" onClick={goToPointSystem}>\r\n          ⚙️ Point System\r\n        </button>\r\n        <button className=\"logout-btn\" onClick={onLogout}>\r\n          Logout\r\n        </button>\r\n      </div>\r\n    </div>\r\n  );\r\n}\r\n\r\nexport default AdminPage;\r\n"],"mappings":"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","ignoreList":[]},"metadata":{},"sourceType":"module","externalDependencies":[]}