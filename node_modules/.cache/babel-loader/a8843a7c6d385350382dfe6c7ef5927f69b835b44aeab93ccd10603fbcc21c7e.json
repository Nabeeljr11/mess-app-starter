{"ast":null,"code":"var _jsxFileName = \"C:\\\\Users\\\\mohdn\\\\OneDrive\\\\Desktop\\\\mess-app-starter\\\\src\\\\AdminPage.js\",\n  _s = $RefreshSig$();\nimport React, { useEffect, useState } from \"react\";\nimport { db } from \"./firebase\";\nimport { collection, getDocs, doc, getDoc, setDoc } from \"firebase/firestore\";\nimport \"./AdminPage.css\";\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\nfunction AdminPage({\n  onLogout,\n  goToPointSystem\n}) {\n  _s();\n  const [mealCounts, setMealCounts] = useState({});\n  const [userPoints, setUserPoints] = useState({});\n  const [loading, setLoading] = useState(true);\n\n  // default rules (used only if settings/points not present)\n  const defaultSystem = {\n    X: 1,\n    \"0\": 0,\n    B: 0.25,\n    L: 0.35,\n    S: 0.45,\n    \"B/L\": 0.65,\n    \"B/S\": 0.75,\n    \"L/S\": 0.85\n  };\n  const [pointSystem, setPointSystem] = useState(defaultSystem);\n  useEffect(() => {\n    const fetchAll = async () => {\n      setLoading(true);\n      try {\n        // --- load point system (from settings/points or set default)\n        const settingsRef = doc(db, \"settings\", \"points\");\n        const settingsSnap = await getDoc(settingsRef);\n        let loadedPoints = defaultSystem;\n        if (settingsSnap.exists()) {\n          loadedPoints = settingsSnap.data();\n        } else {\n          await setDoc(settingsRef, defaultSystem);\n        }\n\n        // --- load users\n        const usersRef = collection(db, \"users\");\n        const querySnapshot = await getDocs(usersRef);\n        const counts = {};\n        const points = {};\n        const today = new Date();\n        const todayStr = today.toISOString().split(\"T\")[0];\n        const currentMonth = today.getMonth();\n        const currentYear = today.getFullYear();\n\n        // next 8 days (today + 7 more)\n        const nextDays = [];\n        for (let i = 0; i < 8; i++) {\n          const d = new Date(today);\n          d.setDate(today.getDate() + i);\n          const dateStr = d.toISOString().split(\"T\")[0];\n          nextDays.push(dateStr);\n          counts[dateStr] = {\n            breakfast: 0,\n            lunch: 0,\n            supper: 0\n          };\n        }\n\n        // iterate users\n        querySnapshot.forEach(docSnap => {\n          const data = docSnap.data();\n          const email = data.email || \"Unknown\";\n          const userMeals = data.meals || {};\n\n          // --- points calculation (monthly, up to TODAY inclusive)\n          let totalPoints = 0;\n          Object.entries(userMeals).forEach(([day, meals]) => {\n            // ensure day is a date string\n            if (!day) return;\n            const dateObj = new Date(day);\n            const dateStr = day;\n            if (dateObj.getMonth() === currentMonth && dateObj.getFullYear() === currentYear && dateStr <= todayStr) {\n              var _loadedPoints$key;\n              // Use canonical order B, L, S for keys so we match stored mapping\n              const markedMap = {\n                B: !!meals.breakfast,\n                L: !!meals.lunch,\n                S: !!meals.supper\n              };\n              const order = [\"B\", \"L\", \"S\"];\n              const unmarkedOrdered = order.filter(k => !markedMap[k]);\n              let key;\n              if (unmarkedOrdered.length === 3) key = \"X\";else if (unmarkedOrdered.length === 0) key = \"0\";else key = unmarkedOrdered.join(\"/\");\n              totalPoints += (_loadedPoints$key = loadedPoints[key]) !== null && _loadedPoints$key !== void 0 ? _loadedPoints$key : 0;\n            }\n          });\n\n          // round to 2 decimals\n          points[email] = Number(totalPoints.toFixed(2));\n\n          // --- counts for the next 8 days\n          nextDays.forEach(day => {\n            const meals = userMeals[day]; // may be undefined\n            [\"breakfast\", \"lunch\", \"supper\"].forEach(meal => {\n              if (meals === undefined) {\n                // If the user has no record for this day:\n                // - FUTURE days => default marked (count them)\n                // - TODAY/Past => don't count (they didn't mark)\n                if (day > todayStr) {\n                  counts[day][meal] += 1;\n                }\n              } else {\n                // If there is a record for this day, count if marked true\n                if (meals[meal]) counts[day][meal] += 1;\n              }\n            });\n          });\n        });\n        setMealCounts(counts);\n        setUserPoints(points);\n        setPointSystem(loadedPoints);\n      } catch (err) {\n        console.error(\"Admin data error:\", err);\n      }\n      setLoading(false);\n    };\n    fetchAll();\n  }, []);\n  if (loading) return /*#__PURE__*/_jsxDEV(\"h2\", {\n    className: \"loading\",\n    children: \"Loading data...\"\n  }, void 0, false, {\n    fileName: _jsxFileName,\n    lineNumber: 133,\n    columnNumber: 23\n  }, this);\n  return /*#__PURE__*/_jsxDEV(\"div\", {\n    className: \"admin-container\",\n    children: [/*#__PURE__*/_jsxDEV(\"h2\", {\n      className: \"title\",\n      children: \"\\uD83D\\uDCCA Admin Dashboard\"\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 137,\n      columnNumber: 7\n    }, this), /*#__PURE__*/_jsxDEV(\"h3\", {\n      children: \"\\uD83E\\uDD58 Meal Counts (Next 8 Days)\"\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 139,\n      columnNumber: 7\n    }, this), /*#__PURE__*/_jsxDEV(\"table\", {\n      className: \"meal-table\",\n      children: [/*#__PURE__*/_jsxDEV(\"thead\", {\n        children: /*#__PURE__*/_jsxDEV(\"tr\", {\n          children: [/*#__PURE__*/_jsxDEV(\"th\", {\n            className: \"date-col\",\n            children: \"Date\"\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 143,\n            columnNumber: 13\n          }, this), /*#__PURE__*/_jsxDEV(\"th\", {\n            children: \"\\uD83C\\uDF73 Breakfast\"\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 144,\n            columnNumber: 13\n          }, this), /*#__PURE__*/_jsxDEV(\"th\", {\n            children: \"\\uD83E\\uDD57 Lunch\"\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 145,\n            columnNumber: 13\n          }, this), /*#__PURE__*/_jsxDEV(\"th\", {\n            children: \"\\uD83C\\uDF5B Supper\"\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 146,\n            columnNumber: 13\n          }, this)]\n        }, void 0, true, {\n          fileName: _jsxFileName,\n          lineNumber: 142,\n          columnNumber: 11\n        }, this)\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 141,\n        columnNumber: 9\n      }, this), /*#__PURE__*/_jsxDEV(\"tbody\", {\n        children: Object.entries(mealCounts).map(([day, meals]) => /*#__PURE__*/_jsxDEV(\"tr\", {\n          children: [/*#__PURE__*/_jsxDEV(\"td\", {\n            className: \"date-col\",\n            children: day\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 152,\n            columnNumber: 15\n          }, this), /*#__PURE__*/_jsxDEV(\"td\", {\n            children: meals.breakfast\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 153,\n            columnNumber: 15\n          }, this), /*#__PURE__*/_jsxDEV(\"td\", {\n            children: meals.lunch\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 154,\n            columnNumber: 15\n          }, this), /*#__PURE__*/_jsxDEV(\"td\", {\n            children: meals.supper\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 155,\n            columnNumber: 15\n          }, this)]\n        }, day, true, {\n          fileName: _jsxFileName,\n          lineNumber: 151,\n          columnNumber: 13\n        }, this))\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 149,\n        columnNumber: 9\n      }, this)]\n    }, void 0, true, {\n      fileName: _jsxFileName,\n      lineNumber: 140,\n      columnNumber: 7\n    }, this), /*#__PURE__*/_jsxDEV(\"h3\", {\n      children: \"\\uD83C\\uDFC6 Monthly Points\"\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 161,\n      columnNumber: 7\n    }, this), /*#__PURE__*/_jsxDEV(\"table\", {\n      className: \"meal-table\",\n      children: [/*#__PURE__*/_jsxDEV(\"thead\", {\n        children: /*#__PURE__*/_jsxDEV(\"tr\", {\n          children: [/*#__PURE__*/_jsxDEV(\"th\", {\n            children: \"Student\"\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 165,\n            columnNumber: 13\n          }, this), /*#__PURE__*/_jsxDEV(\"th\", {\n            children: \"Total Points\"\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 166,\n            columnNumber: 13\n          }, this)]\n        }, void 0, true, {\n          fileName: _jsxFileName,\n          lineNumber: 164,\n          columnNumber: 11\n        }, this)\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 163,\n        columnNumber: 9\n      }, this), /*#__PURE__*/_jsxDEV(\"tbody\", {\n        children: Object.entries(userPoints).map(([email, points]) => /*#__PURE__*/_jsxDEV(\"tr\", {\n          children: [/*#__PURE__*/_jsxDEV(\"td\", {\n            children: email\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 172,\n            columnNumber: 15\n          }, this), /*#__PURE__*/_jsxDEV(\"td\", {\n            children: points\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 173,\n            columnNumber: 15\n          }, this)]\n        }, email, true, {\n          fileName: _jsxFileName,\n          lineNumber: 171,\n          columnNumber: 13\n        }, this))\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 169,\n        columnNumber: 9\n      }, this)]\n    }, void 0, true, {\n      fileName: _jsxFileName,\n      lineNumber: 162,\n      columnNumber: 7\n    }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n      className: \"admin-actions\",\n      children: [/*#__PURE__*/_jsxDEV(\"button\", {\n        className: \"btn points-btn\",\n        onClick: goToPointSystem,\n        children: \"\\u2699\\uFE0F Point System\"\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 180,\n        columnNumber: 9\n      }, this), /*#__PURE__*/_jsxDEV(\"button\", {\n        className: \"logout-btn\",\n        onClick: onLogout,\n        children: \"Logout\"\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 183,\n        columnNumber: 9\n      }, this)]\n    }, void 0, true, {\n      fileName: _jsxFileName,\n      lineNumber: 179,\n      columnNumber: 7\n    }, this)]\n  }, void 0, true, {\n    fileName: _jsxFileName,\n    lineNumber: 136,\n    columnNumber: 5\n  }, this);\n}\n_s(AdminPage, \"jUgSKfgQCfaURefzkyQXIBrgN7Y=\");\n_c = AdminPage;\nexport default AdminPage;\nvar _c;\n$RefreshReg$(_c, \"AdminPage\");","map":{"version":3,"names":["React","useEffect","useState","db","collection","getDocs","doc","getDoc","setDoc","jsxDEV","_jsxDEV","AdminPage","onLogout","goToPointSystem","_s","mealCounts","setMealCounts","userPoints","setUserPoints","loading","setLoading","defaultSystem","X","B","L","S","pointSystem","setPointSystem","fetchAll","settingsRef","settingsSnap","loadedPoints","exists","data","usersRef","querySnapshot","counts","points","today","Date","todayStr","toISOString","split","currentMonth","getMonth","currentYear","getFullYear","nextDays","i","d","setDate","getDate","dateStr","push","breakfast","lunch","supper","forEach","docSnap","email","userMeals","meals","totalPoints","Object","entries","day","dateObj","_loadedPoints$key","markedMap","order","unmarkedOrdered","filter","k","key","length","join","Number","toFixed","meal","undefined","err","console","error","className","children","fileName","_jsxFileName","lineNumber","columnNumber","map","onClick","_c","$RefreshReg$"],"sources":["C:/Users/mohdn/OneDrive/Desktop/mess-app-starter/src/AdminPage.js"],"sourcesContent":["import React, { useEffect, useState } from \"react\";\r\nimport { db } from \"./firebase\";\r\nimport { collection, getDocs, doc, getDoc, setDoc } from \"firebase/firestore\";\r\nimport \"./AdminPage.css\";\r\n\r\nfunction AdminPage({ onLogout, goToPointSystem }) {\r\n  const [mealCounts, setMealCounts] = useState({});\r\n  const [userPoints, setUserPoints] = useState({});\r\n  const [loading, setLoading] = useState(true);\r\n\r\n  // default rules (used only if settings/points not present)\r\n  const defaultSystem = {\r\n    X: 1,\r\n    \"0\": 0,\r\n    B: 0.25,\r\n    L: 0.35,\r\n    S: 0.45,\r\n    \"B/L\": 0.65,\r\n    \"B/S\": 0.75,\r\n    \"L/S\": 0.85,\r\n  };\r\n\r\n  const [pointSystem, setPointSystem] = useState(defaultSystem);\r\n\r\n  useEffect(() => {\r\n    const fetchAll = async () => {\r\n      setLoading(true);\r\n      try {\r\n        // --- load point system (from settings/points or set default)\r\n        const settingsRef = doc(db, \"settings\", \"points\");\r\n        const settingsSnap = await getDoc(settingsRef);\r\n        let loadedPoints = defaultSystem;\r\n        if (settingsSnap.exists()) {\r\n          loadedPoints = settingsSnap.data();\r\n        } else {\r\n          await setDoc(settingsRef, defaultSystem);\r\n        }\r\n\r\n        // --- load users\r\n        const usersRef = collection(db, \"users\");\r\n        const querySnapshot = await getDocs(usersRef);\r\n\r\n        const counts = {};\r\n        const points = {};\r\n\r\n        const today = new Date();\r\n        const todayStr = today.toISOString().split(\"T\")[0];\r\n        const currentMonth = today.getMonth();\r\n        const currentYear = today.getFullYear();\r\n\r\n        // next 8 days (today + 7 more)\r\n        const nextDays = [];\r\n        for (let i = 0; i < 8; i++) {\r\n          const d = new Date(today);\r\n          d.setDate(today.getDate() + i);\r\n          const dateStr = d.toISOString().split(\"T\")[0];\r\n          nextDays.push(dateStr);\r\n          counts[dateStr] = { breakfast: 0, lunch: 0, supper: 0 };\r\n        }\r\n\r\n        // iterate users\r\n        querySnapshot.forEach((docSnap) => {\r\n          const data = docSnap.data();\r\n          const email = data.email || \"Unknown\";\r\n          const userMeals = data.meals || {};\r\n\r\n          // --- points calculation (monthly, up to TODAY inclusive)\r\n          let totalPoints = 0;\r\n          Object.entries(userMeals).forEach(([day, meals]) => {\r\n            // ensure day is a date string\r\n            if (!day) return;\r\n            const dateObj = new Date(day);\r\n            const dateStr = day;\r\n\r\n            if (\r\n              dateObj.getMonth() === currentMonth &&\r\n              dateObj.getFullYear() === currentYear &&\r\n              dateStr <= todayStr\r\n            ) {\r\n              // Use canonical order B, L, S for keys so we match stored mapping\r\n              const markedMap = {\r\n                B: !!meals.breakfast,\r\n                L: !!meals.lunch,\r\n                S: !!meals.supper,\r\n              };\r\n\r\n              const order = [\"B\", \"L\", \"S\"];\r\n              const unmarkedOrdered = order.filter((k) => !markedMap[k]);\r\n\r\n              let key;\r\n              if (unmarkedOrdered.length === 3) key = \"X\";\r\n              else if (unmarkedOrdered.length === 0) key = \"0\";\r\n              else key = unmarkedOrdered.join(\"/\");\r\n\r\n              totalPoints += (loadedPoints[key] ?? 0);\r\n            }\r\n          });\r\n\r\n          // round to 2 decimals\r\n          points[email] = Number(totalPoints.toFixed(2));\r\n\r\n          // --- counts for the next 8 days\r\n          nextDays.forEach((day) => {\r\n            const meals = userMeals[day]; // may be undefined\r\n            [\"breakfast\", \"lunch\", \"supper\"].forEach((meal) => {\r\n              if (meals === undefined) {\r\n                // If the user has no record for this day:\r\n                // - FUTURE days => default marked (count them)\r\n                // - TODAY/Past => don't count (they didn't mark)\r\n                if (day > todayStr) {\r\n                  counts[day][meal] += 1;\r\n                }\r\n              } else {\r\n                // If there is a record for this day, count if marked true\r\n                if (meals[meal]) counts[day][meal] += 1;\r\n              }\r\n            });\r\n          });\r\n        });\r\n\r\n        setMealCounts(counts);\r\n        setUserPoints(points);\r\n        setPointSystem(loadedPoints);\r\n      } catch (err) {\r\n        console.error(\"Admin data error:\", err);\r\n      }\r\n      setLoading(false);\r\n    };\r\n\r\n    fetchAll();\r\n  }, []);\r\n\r\n  if (loading) return <h2 className=\"loading\">Loading data...</h2>;\r\n\r\n  return (\r\n    <div className=\"admin-container\">\r\n      <h2 className=\"title\">📊 Admin Dashboard</h2>\r\n\r\n      <h3>🥘 Meal Counts (Next 8 Days)</h3>\r\n      <table className=\"meal-table\">\r\n        <thead>\r\n          <tr>\r\n            <th className=\"date-col\">Date</th>\r\n            <th>🍳 Breakfast</th>\r\n            <th>🥗 Lunch</th>\r\n            <th>🍛 Supper</th>\r\n          </tr>\r\n        </thead>\r\n        <tbody>\r\n          {Object.entries(mealCounts).map(([day, meals]) => (\r\n            <tr key={day}>\r\n              <td className=\"date-col\">{day}</td>\r\n              <td>{meals.breakfast}</td>\r\n              <td>{meals.lunch}</td>\r\n              <td>{meals.supper}</td>\r\n            </tr>\r\n          ))}\r\n        </tbody>\r\n      </table>\r\n\r\n      <h3>🏆 Monthly Points</h3>\r\n      <table className=\"meal-table\">\r\n        <thead>\r\n          <tr>\r\n            <th>Student</th>\r\n            <th>Total Points</th>\r\n          </tr>\r\n        </thead>\r\n        <tbody>\r\n          {Object.entries(userPoints).map(([email, points]) => (\r\n            <tr key={email}>\r\n              <td>{email}</td>\r\n              <td>{points}</td>\r\n            </tr>\r\n          ))}\r\n        </tbody>\r\n      </table>\r\n\r\n      <div className=\"admin-actions\">\r\n        <button className=\"btn points-btn\" onClick={goToPointSystem}>\r\n          ⚙️ Point System\r\n        </button>\r\n        <button className=\"logout-btn\" onClick={onLogout}>\r\n          Logout\r\n        </button>\r\n      </div>\r\n    </div>\r\n  );\r\n}\r\n\r\nexport default AdminPage;\r\n"],"mappings":";;AAAA,OAAOA,KAAK,IAAIC,SAAS,EAAEC,QAAQ,QAAQ,OAAO;AAClD,SAASC,EAAE,QAAQ,YAAY;AAC/B,SAASC,UAAU,EAAEC,OAAO,EAAEC,GAAG,EAAEC,MAAM,EAAEC,MAAM,QAAQ,oBAAoB;AAC7E,OAAO,iBAAiB;AAAC,SAAAC,MAAA,IAAAC,OAAA;AAEzB,SAASC,SAASA,CAAC;EAAEC,QAAQ;EAAEC;AAAgB,CAAC,EAAE;EAAAC,EAAA;EAChD,MAAM,CAACC,UAAU,EAAEC,aAAa,CAAC,GAAGd,QAAQ,CAAC,CAAC,CAAC,CAAC;EAChD,MAAM,CAACe,UAAU,EAAEC,aAAa,CAAC,GAAGhB,QAAQ,CAAC,CAAC,CAAC,CAAC;EAChD,MAAM,CAACiB,OAAO,EAAEC,UAAU,CAAC,GAAGlB,QAAQ,CAAC,IAAI,CAAC;;EAE5C;EACA,MAAMmB,aAAa,GAAG;IACpBC,CAAC,EAAE,CAAC;IACJ,GAAG,EAAE,CAAC;IACNC,CAAC,EAAE,IAAI;IACPC,CAAC,EAAE,IAAI;IACPC,CAAC,EAAE,IAAI;IACP,KAAK,EAAE,IAAI;IACX,KAAK,EAAE,IAAI;IACX,KAAK,EAAE;EACT,CAAC;EAED,MAAM,CAACC,WAAW,EAAEC,cAAc,CAAC,GAAGzB,QAAQ,CAACmB,aAAa,CAAC;EAE7DpB,SAAS,CAAC,MAAM;IACd,MAAM2B,QAAQ,GAAG,MAAAA,CAAA,KAAY;MAC3BR,UAAU,CAAC,IAAI,CAAC;MAChB,IAAI;QACF;QACA,MAAMS,WAAW,GAAGvB,GAAG,CAACH,EAAE,EAAE,UAAU,EAAE,QAAQ,CAAC;QACjD,MAAM2B,YAAY,GAAG,MAAMvB,MAAM,CAACsB,WAAW,CAAC;QAC9C,IAAIE,YAAY,GAAGV,aAAa;QAChC,IAAIS,YAAY,CAACE,MAAM,CAAC,CAAC,EAAE;UACzBD,YAAY,GAAGD,YAAY,CAACG,IAAI,CAAC,CAAC;QACpC,CAAC,MAAM;UACL,MAAMzB,MAAM,CAACqB,WAAW,EAAER,aAAa,CAAC;QAC1C;;QAEA;QACA,MAAMa,QAAQ,GAAG9B,UAAU,CAACD,EAAE,EAAE,OAAO,CAAC;QACxC,MAAMgC,aAAa,GAAG,MAAM9B,OAAO,CAAC6B,QAAQ,CAAC;QAE7C,MAAME,MAAM,GAAG,CAAC,CAAC;QACjB,MAAMC,MAAM,GAAG,CAAC,CAAC;QAEjB,MAAMC,KAAK,GAAG,IAAIC,IAAI,CAAC,CAAC;QACxB,MAAMC,QAAQ,GAAGF,KAAK,CAACG,WAAW,CAAC,CAAC,CAACC,KAAK,CAAC,GAAG,CAAC,CAAC,CAAC,CAAC;QAClD,MAAMC,YAAY,GAAGL,KAAK,CAACM,QAAQ,CAAC,CAAC;QACrC,MAAMC,WAAW,GAAGP,KAAK,CAACQ,WAAW,CAAC,CAAC;;QAEvC;QACA,MAAMC,QAAQ,GAAG,EAAE;QACnB,KAAK,IAAIC,CAAC,GAAG,CAAC,EAAEA,CAAC,GAAG,CAAC,EAAEA,CAAC,EAAE,EAAE;UAC1B,MAAMC,CAAC,GAAG,IAAIV,IAAI,CAACD,KAAK,CAAC;UACzBW,CAAC,CAACC,OAAO,CAACZ,KAAK,CAACa,OAAO,CAAC,CAAC,GAAGH,CAAC,CAAC;UAC9B,MAAMI,OAAO,GAAGH,CAAC,CAACR,WAAW,CAAC,CAAC,CAACC,KAAK,CAAC,GAAG,CAAC,CAAC,CAAC,CAAC;UAC7CK,QAAQ,CAACM,IAAI,CAACD,OAAO,CAAC;UACtBhB,MAAM,CAACgB,OAAO,CAAC,GAAG;YAAEE,SAAS,EAAE,CAAC;YAAEC,KAAK,EAAE,CAAC;YAAEC,MAAM,EAAE;UAAE,CAAC;QACzD;;QAEA;QACArB,aAAa,CAACsB,OAAO,CAAEC,OAAO,IAAK;UACjC,MAAMzB,IAAI,GAAGyB,OAAO,CAACzB,IAAI,CAAC,CAAC;UAC3B,MAAM0B,KAAK,GAAG1B,IAAI,CAAC0B,KAAK,IAAI,SAAS;UACrC,MAAMC,SAAS,GAAG3B,IAAI,CAAC4B,KAAK,IAAI,CAAC,CAAC;;UAElC;UACA,IAAIC,WAAW,GAAG,CAAC;UACnBC,MAAM,CAACC,OAAO,CAACJ,SAAS,CAAC,CAACH,OAAO,CAAC,CAAC,CAACQ,GAAG,EAAEJ,KAAK,CAAC,KAAK;YAClD;YACA,IAAI,CAACI,GAAG,EAAE;YACV,MAAMC,OAAO,GAAG,IAAI3B,IAAI,CAAC0B,GAAG,CAAC;YAC7B,MAAMb,OAAO,GAAGa,GAAG;YAEnB,IACEC,OAAO,CAACtB,QAAQ,CAAC,CAAC,KAAKD,YAAY,IACnCuB,OAAO,CAACpB,WAAW,CAAC,CAAC,KAAKD,WAAW,IACrCO,OAAO,IAAIZ,QAAQ,EACnB;cAAA,IAAA2B,iBAAA;cACA;cACA,MAAMC,SAAS,GAAG;gBAChB7C,CAAC,EAAE,CAAC,CAACsC,KAAK,CAACP,SAAS;gBACpB9B,CAAC,EAAE,CAAC,CAACqC,KAAK,CAACN,KAAK;gBAChB9B,CAAC,EAAE,CAAC,CAACoC,KAAK,CAACL;cACb,CAAC;cAED,MAAMa,KAAK,GAAG,CAAC,GAAG,EAAE,GAAG,EAAE,GAAG,CAAC;cAC7B,MAAMC,eAAe,GAAGD,KAAK,CAACE,MAAM,CAAEC,CAAC,IAAK,CAACJ,SAAS,CAACI,CAAC,CAAC,CAAC;cAE1D,IAAIC,GAAG;cACP,IAAIH,eAAe,CAACI,MAAM,KAAK,CAAC,EAAED,GAAG,GAAG,GAAG,CAAC,KACvC,IAAIH,eAAe,CAACI,MAAM,KAAK,CAAC,EAAED,GAAG,GAAG,GAAG,CAAC,KAC5CA,GAAG,GAAGH,eAAe,CAACK,IAAI,CAAC,GAAG,CAAC;cAEpCb,WAAW,KAAAK,iBAAA,GAAKpC,YAAY,CAAC0C,GAAG,CAAC,cAAAN,iBAAA,cAAAA,iBAAA,GAAI,CAAE;YACzC;UACF,CAAC,CAAC;;UAEF;UACA9B,MAAM,CAACsB,KAAK,CAAC,GAAGiB,MAAM,CAACd,WAAW,CAACe,OAAO,CAAC,CAAC,CAAC,CAAC;;UAE9C;UACA9B,QAAQ,CAACU,OAAO,CAAEQ,GAAG,IAAK;YACxB,MAAMJ,KAAK,GAAGD,SAAS,CAACK,GAAG,CAAC,CAAC,CAAC;YAC9B,CAAC,WAAW,EAAE,OAAO,EAAE,QAAQ,CAAC,CAACR,OAAO,CAAEqB,IAAI,IAAK;cACjD,IAAIjB,KAAK,KAAKkB,SAAS,EAAE;gBACvB;gBACA;gBACA;gBACA,IAAId,GAAG,GAAGzB,QAAQ,EAAE;kBAClBJ,MAAM,CAAC6B,GAAG,CAAC,CAACa,IAAI,CAAC,IAAI,CAAC;gBACxB;cACF,CAAC,MAAM;gBACL;gBACA,IAAIjB,KAAK,CAACiB,IAAI,CAAC,EAAE1C,MAAM,CAAC6B,GAAG,CAAC,CAACa,IAAI,CAAC,IAAI,CAAC;cACzC;YACF,CAAC,CAAC;UACJ,CAAC,CAAC;QACJ,CAAC,CAAC;QAEF9D,aAAa,CAACoB,MAAM,CAAC;QACrBlB,aAAa,CAACmB,MAAM,CAAC;QACrBV,cAAc,CAACI,YAAY,CAAC;MAC9B,CAAC,CAAC,OAAOiD,GAAG,EAAE;QACZC,OAAO,CAACC,KAAK,CAAC,mBAAmB,EAAEF,GAAG,CAAC;MACzC;MACA5D,UAAU,CAAC,KAAK,CAAC;IACnB,CAAC;IAEDQ,QAAQ,CAAC,CAAC;EACZ,CAAC,EAAE,EAAE,CAAC;EAEN,IAAIT,OAAO,EAAE,oBAAOT,OAAA;IAAIyE,SAAS,EAAC,SAAS;IAAAC,QAAA,EAAC;EAAe;IAAAC,QAAA,EAAAC,YAAA;IAAAC,UAAA;IAAAC,YAAA;EAAA,OAAI,CAAC;EAEhE,oBACE9E,OAAA;IAAKyE,SAAS,EAAC,iBAAiB;IAAAC,QAAA,gBAC9B1E,OAAA;MAAIyE,SAAS,EAAC,OAAO;MAAAC,QAAA,EAAC;IAAkB;MAAAC,QAAA,EAAAC,YAAA;MAAAC,UAAA;MAAAC,YAAA;IAAA,OAAI,CAAC,eAE7C9E,OAAA;MAAA0E,QAAA,EAAI;IAA4B;MAAAC,QAAA,EAAAC,YAAA;MAAAC,UAAA;MAAAC,YAAA;IAAA,OAAI,CAAC,eACrC9E,OAAA;MAAOyE,SAAS,EAAC,YAAY;MAAAC,QAAA,gBAC3B1E,OAAA;QAAA0E,QAAA,eACE1E,OAAA;UAAA0E,QAAA,gBACE1E,OAAA;YAAIyE,SAAS,EAAC,UAAU;YAAAC,QAAA,EAAC;UAAI;YAAAC,QAAA,EAAAC,YAAA;YAAAC,UAAA;YAAAC,YAAA;UAAA,OAAI,CAAC,eAClC9E,OAAA;YAAA0E,QAAA,EAAI;UAAY;YAAAC,QAAA,EAAAC,YAAA;YAAAC,UAAA;YAAAC,YAAA;UAAA,OAAI,CAAC,eACrB9E,OAAA;YAAA0E,QAAA,EAAI;UAAQ;YAAAC,QAAA,EAAAC,YAAA;YAAAC,UAAA;YAAAC,YAAA;UAAA,OAAI,CAAC,eACjB9E,OAAA;YAAA0E,QAAA,EAAI;UAAS;YAAAC,QAAA,EAAAC,YAAA;YAAAC,UAAA;YAAAC,YAAA;UAAA,OAAI,CAAC;QAAA;UAAAH,QAAA,EAAAC,YAAA;UAAAC,UAAA;UAAAC,YAAA;QAAA,OAChB;MAAC;QAAAH,QAAA,EAAAC,YAAA;QAAAC,UAAA;QAAAC,YAAA;MAAA,OACA,CAAC,eACR9E,OAAA;QAAA0E,QAAA,EACGrB,MAAM,CAACC,OAAO,CAACjD,UAAU,CAAC,CAAC0E,GAAG,CAAC,CAAC,CAACxB,GAAG,EAAEJ,KAAK,CAAC,kBAC3CnD,OAAA;UAAA0E,QAAA,gBACE1E,OAAA;YAAIyE,SAAS,EAAC,UAAU;YAAAC,QAAA,EAAEnB;UAAG;YAAAoB,QAAA,EAAAC,YAAA;YAAAC,UAAA;YAAAC,YAAA;UAAA,OAAK,CAAC,eACnC9E,OAAA;YAAA0E,QAAA,EAAKvB,KAAK,CAACP;UAAS;YAAA+B,QAAA,EAAAC,YAAA;YAAAC,UAAA;YAAAC,YAAA;UAAA,OAAK,CAAC,eAC1B9E,OAAA;YAAA0E,QAAA,EAAKvB,KAAK,CAACN;UAAK;YAAA8B,QAAA,EAAAC,YAAA;YAAAC,UAAA;YAAAC,YAAA;UAAA,OAAK,CAAC,eACtB9E,OAAA;YAAA0E,QAAA,EAAKvB,KAAK,CAACL;UAAM;YAAA6B,QAAA,EAAAC,YAAA;YAAAC,UAAA;YAAAC,YAAA;UAAA,OAAK,CAAC;QAAA,GAJhBvB,GAAG;UAAAoB,QAAA,EAAAC,YAAA;UAAAC,UAAA;UAAAC,YAAA;QAAA,OAKR,CACL;MAAC;QAAAH,QAAA,EAAAC,YAAA;QAAAC,UAAA;QAAAC,YAAA;MAAA,OACG,CAAC;IAAA;MAAAH,QAAA,EAAAC,YAAA;MAAAC,UAAA;MAAAC,YAAA;IAAA,OACH,CAAC,eAER9E,OAAA;MAAA0E,QAAA,EAAI;IAAiB;MAAAC,QAAA,EAAAC,YAAA;MAAAC,UAAA;MAAAC,YAAA;IAAA,OAAI,CAAC,eAC1B9E,OAAA;MAAOyE,SAAS,EAAC,YAAY;MAAAC,QAAA,gBAC3B1E,OAAA;QAAA0E,QAAA,eACE1E,OAAA;UAAA0E,QAAA,gBACE1E,OAAA;YAAA0E,QAAA,EAAI;UAAO;YAAAC,QAAA,EAAAC,YAAA;YAAAC,UAAA;YAAAC,YAAA;UAAA,OAAI,CAAC,eAChB9E,OAAA;YAAA0E,QAAA,EAAI;UAAY;YAAAC,QAAA,EAAAC,YAAA;YAAAC,UAAA;YAAAC,YAAA;UAAA,OAAI,CAAC;QAAA;UAAAH,QAAA,EAAAC,YAAA;UAAAC,UAAA;UAAAC,YAAA;QAAA,OACnB;MAAC;QAAAH,QAAA,EAAAC,YAAA;QAAAC,UAAA;QAAAC,YAAA;MAAA,OACA,CAAC,eACR9E,OAAA;QAAA0E,QAAA,EACGrB,MAAM,CAACC,OAAO,CAAC/C,UAAU,CAAC,CAACwE,GAAG,CAAC,CAAC,CAAC9B,KAAK,EAAEtB,MAAM,CAAC,kBAC9C3B,OAAA;UAAA0E,QAAA,gBACE1E,OAAA;YAAA0E,QAAA,EAAKzB;UAAK;YAAA0B,QAAA,EAAAC,YAAA;YAAAC,UAAA;YAAAC,YAAA;UAAA,OAAK,CAAC,eAChB9E,OAAA;YAAA0E,QAAA,EAAK/C;UAAM;YAAAgD,QAAA,EAAAC,YAAA;YAAAC,UAAA;YAAAC,YAAA;UAAA,OAAK,CAAC;QAAA,GAFV7B,KAAK;UAAA0B,QAAA,EAAAC,YAAA;UAAAC,UAAA;UAAAC,YAAA;QAAA,OAGV,CACL;MAAC;QAAAH,QAAA,EAAAC,YAAA;QAAAC,UAAA;QAAAC,YAAA;MAAA,OACG,CAAC;IAAA;MAAAH,QAAA,EAAAC,YAAA;MAAAC,UAAA;MAAAC,YAAA;IAAA,OACH,CAAC,eAER9E,OAAA;MAAKyE,SAAS,EAAC,eAAe;MAAAC,QAAA,gBAC5B1E,OAAA;QAAQyE,SAAS,EAAC,gBAAgB;QAACO,OAAO,EAAE7E,eAAgB;QAAAuE,QAAA,EAAC;MAE7D;QAAAC,QAAA,EAAAC,YAAA;QAAAC,UAAA;QAAAC,YAAA;MAAA,OAAQ,CAAC,eACT9E,OAAA;QAAQyE,SAAS,EAAC,YAAY;QAACO,OAAO,EAAE9E,QAAS;QAAAwE,QAAA,EAAC;MAElD;QAAAC,QAAA,EAAAC,YAAA;QAAAC,UAAA;QAAAC,YAAA;MAAA,OAAQ,CAAC;IAAA;MAAAH,QAAA,EAAAC,YAAA;MAAAC,UAAA;MAAAC,YAAA;IAAA,OACN,CAAC;EAAA;IAAAH,QAAA,EAAAC,YAAA;IAAAC,UAAA;IAAAC,YAAA;EAAA,OACH,CAAC;AAEV;AAAC1E,EAAA,CAvLQH,SAAS;AAAAgF,EAAA,GAAThF,SAAS;AAyLlB,eAAeA,SAAS;AAAC,IAAAgF,EAAA;AAAAC,YAAA,CAAAD,EAAA","ignoreList":[]},"metadata":{},"sourceType":"module","externalDependencies":[]}