{"ast":null,"code":"var _jsxFileName = \"C:\\\\Users\\\\mohdn\\\\OneDrive\\\\Desktop\\\\mess-app-starter\\\\src\\\\AdminPage.js\",\n  _s = $RefreshSig$();\n// AdminPage.js\nimport React, { useEffect, useState } from \"react\";\nimport { db } from \"./firebase\";\nimport { collection, getDocs, doc, getDoc, setDoc } from \"firebase/firestore\";\nimport \"./AdminPage.css\";\nimport { jsxDEV as _jsxDEV, Fragment as _Fragment } from \"react/jsx-dev-runtime\";\nfunction AdminPage({\n  onLogout,\n  goToPointSystem\n}) {\n  _s();\n  const [mealCounts, setMealCounts] = useState({});\n  const [userPoints, setUserPoints] = useState({});\n  const [loading, setLoading] = useState(true);\n  const [fromDate, setFromDate] = useState(\"\");\n  const [toDate, setToDate] = useState(\"\");\n  const [generated, setGenerated] = useState(false);\n  const [showMeals, setShowMeals] = useState(false); // toggle for meal counts\n  const [showReport, setShowReport] = useState(false); // toggle for points report\n\n  // default rules (admin default)\n  const defaultSystem = {\n    X: 1,\n    \"0\": 0,\n    B: 0.25,\n    L: 0.35,\n    S: 0.45,\n    \"B/L\": 0.65,\n    \"B/S\": 0.75,\n    \"L/S\": 0.85\n  };\n  const [pointSystem, setPointSystem] = useState(defaultSystem);\n  const [allUsers, setAllUsers] = useState([]);\n\n  // --- load settings + users + meal counts (next 8 days) --------------------\n  useEffect(() => {\n    const fetchAll = async () => {\n      try {\n        // load point system\n        const settingsRef = doc(db, \"settings\", \"points\");\n        const settingsSnap = await getDoc(settingsRef);\n        if (settingsSnap.exists()) {\n          setPointSystem(settingsSnap.data());\n        } else {\n          await setDoc(settingsRef, defaultSystem);\n        }\n\n        // load users\n        const usersRef = collection(db, \"users\");\n        const querySnapshot = await getDocs(usersRef);\n        const all = [];\n        const counts = {};\n        const today = new Date();\n\n        // next 8 days (today + 7)\n        const nextDays = [];\n        for (let i = 0; i < 8; i++) {\n          const d = new Date(today);\n          d.setDate(today.getDate() + i);\n          const dateStr = d.toISOString().split(\"T\")[0];\n          nextDays.push(dateStr);\n          counts[dateStr] = {\n            breakfast: 0,\n            lunch: 0,\n            supper: 0\n          };\n        }\n        querySnapshot.forEach(docSnap => {\n          const data = docSnap.data();\n          all.push(data);\n          const userMeals = data.meals || {};\n          nextDays.forEach(day => {\n            const meals = userMeals[day];\n            if (meals) {\n              [\"breakfast\", \"lunch\", \"supper\"].forEach(meal => {\n                if (meals[meal]) counts[day][meal] += 1;\n              });\n            } else {\n              // If no data → assume marked for future days\n              const todayStr = new Date().toISOString().split(\"T\")[0];\n              if (day > todayStr) {\n                counts[day].breakfast += 1;\n                counts[day].lunch += 1;\n                counts[day].supper += 1;\n              }\n            }\n          });\n        });\n        setAllUsers(all);\n        setMealCounts(counts);\n      } catch (err) {\n        console.error(\"Admin data error:\", err);\n      } finally {\n        setLoading(false);\n      }\n    };\n    fetchAll();\n  }, []);\n\n  // --- generate report for selected date range -------------------------------\n  const generateReport = () => {\n    if (!fromDate || !toDate) {\n      alert(\"⚠️ Please select both From and To dates!\");\n      return;\n    }\n    const points = {};\n    const todayStr = new Date().toISOString().split(\"T\")[0];\n    allUsers.forEach(user => {\n      const email = user.email || \"Unknown\";\n      const userMeals = user.meals || {};\n      let totalPoints = 0;\n\n      // find earliest record (if exists)\n      const mealDates = Object.keys(userMeals).sort();\n      const firstMealDate = mealDates.length > 0 ? mealDates[0] : todayStr;\n      const start = new Date(fromDate);\n      const end = new Date(toDate);\n      start.setHours(0, 0, 0, 0);\n      end.setHours(0, 0, 0, 0);\n      for (let d = new Date(start.getTime()); d.getTime() <= end.getTime(); d.setDate(d.getDate() + 1)) {\n        var _pointSystem$key;\n        const day = d.toISOString().split(\"T\")[0];\n        let meals = userMeals[day];\n        if (!meals) {\n          if (day > todayStr) {\n            meals = {\n              breakfast: true,\n              lunch: true,\n              supper: true\n            };\n          } else if (day >= firstMealDate) {\n            meals = {\n              breakfast: true,\n              lunch: true,\n              supper: true\n            };\n          } else {\n            continue;\n          }\n        }\n        const marked = {\n          B: !!meals.breakfast,\n          L: !!meals.lunch,\n          S: !!meals.supper\n        };\n        const markedArr = [\"B\", \"L\", \"S\"].filter(m => marked[m]);\n        let key;\n        if (markedArr.length === 3) key = \"X\";else if (markedArr.length === 0) key = \"0\";else key = markedArr.join(\"/\");\n        totalPoints += (_pointSystem$key = pointSystem[key]) !== null && _pointSystem$key !== void 0 ? _pointSystem$key : 0;\n      }\n      points[email] = totalPoints.toFixed(2);\n    });\n    setUserPoints(points);\n    setGenerated(true);\n  };\n\n  // --- export CSV -----------------------------------------------------------\n  const exportCSV = () => {\n    const rows = [[\"Email\", \"Points\"]];\n    Object.entries(userPoints).forEach(([email, pts]) => {\n      rows.push([email, pts]);\n    });\n    const csvContent = rows.map(r => r.join(\",\")).join(\"\\n\");\n    const blob = new Blob([csvContent], {\n      type: \"text/csv;charset=utf-8;\"\n    });\n    const url = URL.createObjectURL(blob);\n    const a = document.createElement(\"a\");\n    a.href = url;\n    a.setAttribute(\"download\", `points_${fromDate}_to_${toDate}.csv`);\n    document.body.appendChild(a);\n    a.click();\n    document.body.removeChild(a);\n  };\n  if (loading) return /*#__PURE__*/_jsxDEV(\"h2\", {\n    className: \"loading\",\n    children: \"Loading data...\"\n  }, void 0, false, {\n    fileName: _jsxFileName,\n    lineNumber: 183,\n    columnNumber: 23\n  }, this);\n  return /*#__PURE__*/_jsxDEV(\"div\", {\n    className: \"admin-container\",\n    children: [/*#__PURE__*/_jsxDEV(\"h2\", {\n      className: \"title\",\n      children: \"\\uD83D\\uDCCA Admin Dashboard\"\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 187,\n      columnNumber: 7\n    }, this), /*#__PURE__*/_jsxDEV(\"button\", {\n      className: \"btn toggle-btn\",\n      onClick: () => setShowMeals(!showMeals),\n      children: \"\\uD83E\\uDD58 Meal Counts\"\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 190,\n      columnNumber: 7\n    }, this), showMeals && /*#__PURE__*/_jsxDEV(\"table\", {\n      className: \"meal-table\",\n      children: [/*#__PURE__*/_jsxDEV(\"thead\", {\n        children: /*#__PURE__*/_jsxDEV(\"tr\", {\n          children: [/*#__PURE__*/_jsxDEV(\"th\", {\n            className: \"date-col\",\n            children: \"Date\"\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 200,\n            columnNumber: 15\n          }, this), /*#__PURE__*/_jsxDEV(\"th\", {\n            children: \"\\uD83C\\uDF73 Breakfast\"\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 201,\n            columnNumber: 15\n          }, this), /*#__PURE__*/_jsxDEV(\"th\", {\n            children: \"\\uD83E\\uDD57 Lunch\"\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 202,\n            columnNumber: 15\n          }, this), /*#__PURE__*/_jsxDEV(\"th\", {\n            children: \"\\uD83C\\uDF5B Supper\"\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 203,\n            columnNumber: 15\n          }, this)]\n        }, void 0, true, {\n          fileName: _jsxFileName,\n          lineNumber: 199,\n          columnNumber: 13\n        }, this)\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 198,\n        columnNumber: 11\n      }, this), /*#__PURE__*/_jsxDEV(\"tbody\", {\n        children: Object.entries(mealCounts).map(([day, meals]) => /*#__PURE__*/_jsxDEV(\"tr\", {\n          children: [/*#__PURE__*/_jsxDEV(\"td\", {\n            className: \"date-col\",\n            children: day\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 209,\n            columnNumber: 17\n          }, this), /*#__PURE__*/_jsxDEV(\"td\", {\n            className: day === new Date().toISOString().split(\"T\")[0] ? \"today-col\" : \"\",\n            children: meals.breakfast\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 210,\n            columnNumber: 17\n          }, this), /*#__PURE__*/_jsxDEV(\"td\", {\n            className: day === new Date().toISOString().split(\"T\")[0] ? \"today-col\" : \"\",\n            children: meals.lunch\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 219,\n            columnNumber: 17\n          }, this), /*#__PURE__*/_jsxDEV(\"td\", {\n            className: day === new Date().toISOString().split(\"T\")[0] ? \"today-col\" : \"\",\n            children: meals.supper\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 228,\n            columnNumber: 17\n          }, this)]\n        }, day, true, {\n          fileName: _jsxFileName,\n          lineNumber: 208,\n          columnNumber: 15\n        }, this))\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 206,\n        columnNumber: 11\n      }, this)]\n    }, void 0, true, {\n      fileName: _jsxFileName,\n      lineNumber: 197,\n      columnNumber: 9\n    }, this), /*#__PURE__*/_jsxDEV(\"button\", {\n      className: \"btn toggle-btn\",\n      onClick: () => setShowReport(!showReport),\n      children: \"\\uD83D\\uDCD1 Generate Report\"\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 244,\n      columnNumber: 7\n    }, this), showReport && /*#__PURE__*/_jsxDEV(_Fragment, {\n      children: [/*#__PURE__*/_jsxDEV(\"div\", {\n        className: \"report-filters\",\n        children: [/*#__PURE__*/_jsxDEV(\"label\", {\n          children: [\"From:\", \" \", /*#__PURE__*/_jsxDEV(\"input\", {\n            type: \"date\",\n            value: fromDate,\n            onChange: e => setFromDate(e.target.value)\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 255,\n            columnNumber: 15\n          }, this)]\n        }, void 0, true, {\n          fileName: _jsxFileName,\n          lineNumber: 253,\n          columnNumber: 13\n        }, this), /*#__PURE__*/_jsxDEV(\"label\", {\n          children: [\"To:\", \" \", /*#__PURE__*/_jsxDEV(\"input\", {\n            type: \"date\",\n            value: toDate,\n            onChange: e => setToDate(e.target.value)\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 263,\n            columnNumber: 15\n          }, this)]\n        }, void 0, true, {\n          fileName: _jsxFileName,\n          lineNumber: 261,\n          columnNumber: 13\n        }, this), /*#__PURE__*/_jsxDEV(\"button\", {\n          className: \"btn generate-btn\",\n          onClick: generateReport,\n          children: \"Generate\"\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 269,\n          columnNumber: 13\n        }, this)]\n      }, void 0, true, {\n        fileName: _jsxFileName,\n        lineNumber: 252,\n        columnNumber: 11\n      }, this), generated && /*#__PURE__*/_jsxDEV(_Fragment, {\n        children: [/*#__PURE__*/_jsxDEV(\"table\", {\n          className: \"meal-table\",\n          children: [/*#__PURE__*/_jsxDEV(\"thead\", {\n            children: /*#__PURE__*/_jsxDEV(\"tr\", {\n              children: [/*#__PURE__*/_jsxDEV(\"th\", {\n                children: \"Email\"\n              }, void 0, false, {\n                fileName: _jsxFileName,\n                lineNumber: 279,\n                columnNumber: 21\n              }, this), /*#__PURE__*/_jsxDEV(\"th\", {\n                children: \"Total Points\"\n              }, void 0, false, {\n                fileName: _jsxFileName,\n                lineNumber: 280,\n                columnNumber: 21\n              }, this)]\n            }, void 0, true, {\n              fileName: _jsxFileName,\n              lineNumber: 278,\n              columnNumber: 19\n            }, this)\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 277,\n            columnNumber: 17\n          }, this), /*#__PURE__*/_jsxDEV(\"tbody\", {\n            children: Object.entries(userPoints).map(([email, points]) => /*#__PURE__*/_jsxDEV(\"tr\", {\n              children: [/*#__PURE__*/_jsxDEV(\"td\", {\n                children: email\n              }, void 0, false, {\n                fileName: _jsxFileName,\n                lineNumber: 286,\n                columnNumber: 23\n              }, this), /*#__PURE__*/_jsxDEV(\"td\", {\n                children: points\n              }, void 0, false, {\n                fileName: _jsxFileName,\n                lineNumber: 287,\n                columnNumber: 23\n              }, this)]\n            }, email, true, {\n              fileName: _jsxFileName,\n              lineNumber: 285,\n              columnNumber: 21\n            }, this))\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 283,\n            columnNumber: 17\n          }, this)]\n        }, void 0, true, {\n          fileName: _jsxFileName,\n          lineNumber: 276,\n          columnNumber: 15\n        }, this), /*#__PURE__*/_jsxDEV(\"button\", {\n          className: \"btn export-btn\",\n          onClick: exportCSV,\n          children: \"\\u2B07\\uFE0F Download CSV\"\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 293,\n          columnNumber: 15\n        }, this)]\n      }, void 0, true)]\n    }, void 0, true), /*#__PURE__*/_jsxDEV(\"div\", {\n      className: \"admin-actions\",\n      children: [/*#__PURE__*/_jsxDEV(\"button\", {\n        className: \"btn points-btn\",\n        onClick: goToPointSystem,\n        children: \"\\u2699\\uFE0F Point System\"\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 302,\n        columnNumber: 9\n      }, this), /*#__PURE__*/_jsxDEV(\"button\", {\n        className: \"logout-btn\",\n        onClick: onLogout,\n        children: \"Logout\"\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 305,\n        columnNumber: 9\n      }, this)]\n    }, void 0, true, {\n      fileName: _jsxFileName,\n      lineNumber: 301,\n      columnNumber: 7\n    }, this)]\n  }, void 0, true, {\n    fileName: _jsxFileName,\n    lineNumber: 186,\n    columnNumber: 5\n  }, this);\n}\n_s(AdminPage, \"td0ObehkRGK677y7l3z4WK6IJU4=\");\n_c = AdminPage;\nexport default AdminPage;\nvar _c;\n$RefreshReg$(_c, \"AdminPage\");","map":{"version":3,"names":["React","useEffect","useState","db","collection","getDocs","doc","getDoc","setDoc","jsxDEV","_jsxDEV","Fragment","_Fragment","AdminPage","onLogout","goToPointSystem","_s","mealCounts","setMealCounts","userPoints","setUserPoints","loading","setLoading","fromDate","setFromDate","toDate","setToDate","generated","setGenerated","showMeals","setShowMeals","showReport","setShowReport","defaultSystem","X","B","L","S","pointSystem","setPointSystem","allUsers","setAllUsers","fetchAll","settingsRef","settingsSnap","exists","data","usersRef","querySnapshot","all","counts","today","Date","nextDays","i","d","setDate","getDate","dateStr","toISOString","split","push","breakfast","lunch","supper","forEach","docSnap","userMeals","meals","day","meal","todayStr","err","console","error","generateReport","alert","points","user","email","totalPoints","mealDates","Object","keys","sort","firstMealDate","length","start","end","setHours","getTime","_pointSystem$key","marked","markedArr","filter","m","key","join","toFixed","exportCSV","rows","entries","pts","csvContent","map","r","blob","Blob","type","url","URL","createObjectURL","a","document","createElement","href","setAttribute","body","appendChild","click","removeChild","className","children","fileName","_jsxFileName","lineNumber","columnNumber","onClick","value","onChange","e","target","_c","$RefreshReg$"],"sources":["C:/Users/mohdn/OneDrive/Desktop/mess-app-starter/src/AdminPage.js"],"sourcesContent":["// AdminPage.js\r\nimport React, { useEffect, useState } from \"react\";\r\nimport { db } from \"./firebase\";\r\nimport { collection, getDocs, doc, getDoc, setDoc } from \"firebase/firestore\";\r\nimport \"./AdminPage.css\";\r\n\r\nfunction AdminPage({ onLogout, goToPointSystem }) {\r\n  const [mealCounts, setMealCounts] = useState({});\r\n  const [userPoints, setUserPoints] = useState({});\r\n  const [loading, setLoading] = useState(true);\r\n\r\n  const [fromDate, setFromDate] = useState(\"\");\r\n  const [toDate, setToDate] = useState(\"\");\r\n  const [generated, setGenerated] = useState(false);\r\n\r\n  const [showMeals, setShowMeals] = useState(false);   // toggle for meal counts\r\n  const [showReport, setShowReport] = useState(false); // toggle for points report\r\n\r\n  // default rules (admin default)\r\n  const defaultSystem = {\r\n    X: 1,\r\n    \"0\": 0,\r\n    B: 0.25,\r\n    L: 0.35,\r\n    S: 0.45,\r\n    \"B/L\": 0.65,\r\n    \"B/S\": 0.75,\r\n    \"L/S\": 0.85,\r\n  };\r\n\r\n  const [pointSystem, setPointSystem] = useState(defaultSystem);\r\n  const [allUsers, setAllUsers] = useState([]);\r\n\r\n  // --- load settings + users + meal counts (next 8 days) --------------------\r\n  useEffect(() => {\r\n    const fetchAll = async () => {\r\n      try {\r\n        // load point system\r\n        const settingsRef = doc(db, \"settings\", \"points\");\r\n        const settingsSnap = await getDoc(settingsRef);\r\n        if (settingsSnap.exists()) {\r\n          setPointSystem(settingsSnap.data());\r\n        } else {\r\n          await setDoc(settingsRef, defaultSystem);\r\n        }\r\n\r\n        // load users\r\n        const usersRef = collection(db, \"users\");\r\n        const querySnapshot = await getDocs(usersRef);\r\n\r\n        const all = [];\r\n        const counts = {};\r\n        const today = new Date();\r\n\r\n        // next 8 days (today + 7)\r\n        const nextDays = [];\r\n        for (let i = 0; i < 8; i++) {\r\n          const d = new Date(today);\r\n          d.setDate(today.getDate() + i);\r\n          const dateStr = d.toISOString().split(\"T\")[0];\r\n          nextDays.push(dateStr);\r\n          counts[dateStr] = { breakfast: 0, lunch: 0, supper: 0 };\r\n        }\r\n\r\n        querySnapshot.forEach((docSnap) => {\r\n          const data = docSnap.data();\r\n          all.push(data);\r\n\r\n          const userMeals = data.meals || {};\r\n          nextDays.forEach((day) => {\r\n            const meals = userMeals[day];\r\n            if (meals) {\r\n              [\"breakfast\", \"lunch\", \"supper\"].forEach((meal) => {\r\n                if (meals[meal]) counts[day][meal] += 1;\r\n              });\r\n            } else {\r\n              // If no data → assume marked for future days\r\n              const todayStr = new Date().toISOString().split(\"T\")[0];\r\n              if (day > todayStr) {\r\n                counts[day].breakfast += 1;\r\n                counts[day].lunch += 1;\r\n                counts[day].supper += 1;\r\n              }\r\n            }\r\n          });\r\n        });\r\n\r\n        setAllUsers(all);\r\n        setMealCounts(counts);\r\n      } catch (err) {\r\n        console.error(\"Admin data error:\", err);\r\n      } finally {\r\n        setLoading(false);\r\n      }\r\n    };\r\n\r\n    fetchAll();\r\n  }, []);\r\n\r\n  // --- generate report for selected date range -------------------------------\r\n  const generateReport = () => {\r\n    if (!fromDate || !toDate) {\r\n      alert(\"⚠️ Please select both From and To dates!\");\r\n      return;\r\n    }\r\n\r\n    const points = {};\r\n    const todayStr = new Date().toISOString().split(\"T\")[0];\r\n\r\n    allUsers.forEach((user) => {\r\n      const email = user.email || \"Unknown\";\r\n      const userMeals = user.meals || {};\r\n      let totalPoints = 0;\r\n\r\n      // find earliest record (if exists)\r\n      const mealDates = Object.keys(userMeals).sort();\r\n      const firstMealDate = mealDates.length > 0 ? mealDates[0] : todayStr;\r\n\r\n      const start = new Date(fromDate);\r\n      const end = new Date(toDate);\r\n      start.setHours(0, 0, 0, 0);\r\n      end.setHours(0, 0, 0, 0);\r\n\r\n      for (\r\n        let d = new Date(start.getTime());\r\n        d.getTime() <= end.getTime();\r\n        d.setDate(d.getDate() + 1)\r\n      ) {\r\n        const day = d.toISOString().split(\"T\")[0];\r\n\r\n        let meals = userMeals[day];\r\n        if (!meals) {\r\n          if (day > todayStr) {\r\n            meals = { breakfast: true, lunch: true, supper: true };\r\n          } else if (day >= firstMealDate) {\r\n            meals = { breakfast: true, lunch: true, supper: true };\r\n          } else {\r\n            continue;\r\n          }\r\n        }\r\n\r\n        const marked = {\r\n          B: !!meals.breakfast,\r\n          L: !!meals.lunch,\r\n          S: !!meals.supper,\r\n        };\r\n        const markedArr = [\"B\", \"L\", \"S\"].filter((m) => marked[m]);\r\n\r\n        let key;\r\n        if (markedArr.length === 3) key = \"X\";\r\n        else if (markedArr.length === 0) key = \"0\";\r\n        else key = markedArr.join(\"/\");\r\n\r\n        totalPoints += pointSystem[key] ?? 0;\r\n      }\r\n\r\n      points[email] = totalPoints.toFixed(2);\r\n    });\r\n\r\n    setUserPoints(points);\r\n    setGenerated(true);\r\n  };\r\n\r\n  // --- export CSV -----------------------------------------------------------\r\n  const exportCSV = () => {\r\n    const rows = [[\"Email\", \"Points\"]];\r\n    Object.entries(userPoints).forEach(([email, pts]) => {\r\n      rows.push([email, pts]);\r\n    });\r\n\r\n    const csvContent = rows.map((r) => r.join(\",\")).join(\"\\n\");\r\n    const blob = new Blob([csvContent], { type: \"text/csv;charset=utf-8;\" });\r\n\r\n    const url = URL.createObjectURL(blob);\r\n    const a = document.createElement(\"a\");\r\n    a.href = url;\r\n    a.setAttribute(\"download\", `points_${fromDate}_to_${toDate}.csv`);\r\n    document.body.appendChild(a);\r\n    a.click();\r\n    document.body.removeChild(a);\r\n  };\r\n\r\n  if (loading) return <h2 className=\"loading\">Loading data...</h2>;\r\n\r\n  return (\r\n    <div className=\"admin-container\">\r\n      <h2 className=\"title\">📊 Admin Dashboard</h2>\r\n\r\n      {/* Meal Counts Section */}\r\n      <button\r\n        className=\"btn toggle-btn\"\r\n        onClick={() => setShowMeals(!showMeals)}\r\n      >\r\n        🥘 Meal Counts\r\n      </button>\r\n      {showMeals && (\r\n        <table className=\"meal-table\">\r\n          <thead>\r\n            <tr>\r\n              <th className=\"date-col\">Date</th>\r\n              <th>🍳 Breakfast</th>\r\n              <th>🥗 Lunch</th>\r\n              <th>🍛 Supper</th>\r\n            </tr>\r\n          </thead>\r\n          <tbody>\r\n            {Object.entries(mealCounts).map(([day, meals]) => (\r\n              <tr key={day}>\r\n                <td className=\"date-col\">{day}</td>\r\n                <td\r\n                  className={\r\n                    day === new Date().toISOString().split(\"T\")[0]\r\n                      ? \"today-col\"\r\n                      : \"\"\r\n                  }\r\n                >\r\n                  {meals.breakfast}\r\n                </td>\r\n                <td\r\n                  className={\r\n                    day === new Date().toISOString().split(\"T\")[0]\r\n                      ? \"today-col\"\r\n                      : \"\"\r\n                  }\r\n                >\r\n                  {meals.lunch}\r\n                </td>\r\n                <td\r\n                  className={\r\n                    day === new Date().toISOString().split(\"T\")[0]\r\n                      ? \"today-col\"\r\n                      : \"\"\r\n                  }\r\n                >\r\n                  {meals.supper}\r\n                </td>\r\n              </tr>\r\n            ))}\r\n          </tbody>\r\n        </table>\r\n      )}\r\n\r\n      {/* Report Section */}\r\n      <button\r\n        className=\"btn toggle-btn\"\r\n        onClick={() => setShowReport(!showReport)}\r\n      >\r\n        📑 Generate Report\r\n      </button>\r\n      {showReport && (\r\n        <>\r\n          <div className=\"report-filters\">\r\n            <label>\r\n              From:{\" \"}\r\n              <input\r\n                type=\"date\"\r\n                value={fromDate}\r\n                onChange={(e) => setFromDate(e.target.value)}\r\n              />\r\n            </label>\r\n            <label>\r\n              To:{\" \"}\r\n              <input\r\n                type=\"date\"\r\n                value={toDate}\r\n                onChange={(e) => setToDate(e.target.value)}\r\n              />\r\n            </label>\r\n            <button className=\"btn generate-btn\" onClick={generateReport}>\r\n              Generate\r\n            </button>\r\n          </div>\r\n\r\n          {generated && (\r\n            <>\r\n              <table className=\"meal-table\">\r\n                <thead>\r\n                  <tr>\r\n                    <th>Email</th>\r\n                    <th>Total Points</th>\r\n                  </tr>\r\n                </thead>\r\n                <tbody>\r\n                  {Object.entries(userPoints).map(([email, points]) => (\r\n                    <tr key={email}>\r\n                      <td>{email}</td>\r\n                      <td>{points}</td>\r\n                    </tr>\r\n                  ))}\r\n                </tbody>\r\n              </table>\r\n\r\n              <button className=\"btn export-btn\" onClick={exportCSV}>\r\n                ⬇️ Download CSV\r\n              </button>\r\n            </>\r\n          )}\r\n        </>\r\n      )}\r\n\r\n      <div className=\"admin-actions\">\r\n        <button className=\"btn points-btn\" onClick={goToPointSystem}>\r\n          ⚙️ Point System\r\n        </button>\r\n        <button className=\"logout-btn\" onClick={onLogout}>\r\n          Logout\r\n        </button>\r\n      </div>\r\n    </div>\r\n  );\r\n}\r\n\r\nexport default AdminPage;\r\n"],"mappings":"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","ignoreList":[]},"metadata":{},"sourceType":"module","externalDependencies":[]}