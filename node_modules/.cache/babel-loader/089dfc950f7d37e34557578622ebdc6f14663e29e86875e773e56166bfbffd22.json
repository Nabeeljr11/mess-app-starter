{"ast":null,"code":"var _jsxFileName = \"C:\\\\Users\\\\mohdn\\\\OneDrive\\\\Desktop\\\\mess-app-starter\\\\src\\\\AdminPage.js\",\n  _s = $RefreshSig$();\n// AdminPage.js\nimport React, { useEffect, useState } from \"react\";\nimport { db } from \"./firebase\";\nimport { collection, getDocs, doc, getDoc, setDoc } from \"firebase/firestore\";\nimport \"./AdminPage.css\";\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\nfunction AdminPage({\n  onLogout,\n  goToPointSystem\n}) {\n  _s();\n  const [mealCounts, setMealCounts] = useState({});\n  const [rangePoints, setRangePoints] = useState({});\n  const [loading, setLoading] = useState(true);\n  const [fromDate, setFromDate] = useState(\"\");\n  const [toDate, setToDate] = useState(\"\");\n\n  // default rules\n  const defaultSystem = {\n    X: 1,\n    \"0\": 0,\n    B: 0.25,\n    L: 0.35,\n    S: 0.45,\n    \"B/L\": 0.65,\n    \"B/S\": 0.75,\n    \"L/S\": 0.85\n  };\n  const [pointSystem, setPointSystem] = useState(defaultSystem);\n  useEffect(() => {\n    const fetchInitial = async () => {\n      try {\n        // load point system\n        const settingsRef = doc(db, \"settings\", \"points\");\n        const settingsSnap = await getDoc(settingsRef);\n        if (settingsSnap.exists()) {\n          setPointSystem(settingsSnap.data());\n        } else {\n          await setDoc(settingsRef, defaultSystem);\n        }\n\n        // load users\n        const usersRef = collection(db, \"users\");\n        const querySnapshot = await getDocs(usersRef);\n        const counts = {};\n        const today = new Date();\n        const todayStr = today.toISOString().split(\"T\")[0];\n\n        // ✅ next 8 days\n        const next8Days = [];\n        for (let i = 0; i < 8; i++) {\n          const d = new Date(today);\n          d.setDate(today.getDate() + i);\n          const dateStr = d.toISOString().split(\"T\")[0];\n          next8Days.push(dateStr);\n          counts[dateStr] = {\n            breakfast: 0,\n            lunch: 0,\n            supper: 0\n          };\n        }\n        querySnapshot.forEach(docSnap => {\n          const userMeals = docSnap.data().meals || {};\n          next8Days.forEach(day => {\n            const meals = userMeals[day];\n            [\"breakfast\", \"lunch\", \"supper\"].forEach(meal => {\n              if (!meals && day > todayStr) {\n                counts[day][meal] += 1; // default marked\n              } else if (meals && meals[meal]) {\n                counts[day][meal] += 1;\n              }\n            });\n          });\n        });\n        setMealCounts(counts);\n      } catch (err) {\n        console.error(\"Admin load error:\", err);\n      }\n      setLoading(false);\n    };\n    fetchInitial();\n  }, []);\n\n  // 🔹 Calculate range points\n  const calculateRangePoints = async () => {\n    if (!fromDate || !toDate) {\n      alert(\"Please select both dates!\");\n      return;\n    }\n    try {\n      const usersRef = collection(db, \"users\");\n      const querySnapshot = await getDocs(usersRef);\n      const results = {};\n      querySnapshot.forEach(docSnap => {\n        const data = docSnap.data();\n        const email = data.email || \"Unknown\";\n        const userMeals = data.meals || {};\n        let totalPoints = 0;\n        Object.entries(userMeals).forEach(([day, meals]) => {\n          if (day >= fromDate && day <= toDate) {\n            const marked = {\n              B: !!meals.breakfast,\n              L: !!meals.lunch,\n              S: !!meals.supper\n            };\n            const unmarked = Object.keys(marked).filter(m => !marked[m]);\n            let key = \"0\";\n            if (unmarked.length === 3) key = \"X\";else if (unmarked.length === 0) key = \"0\";else key = unmarked.join(\"/\");\n            totalPoints += pointSystem[key] || 0;\n          }\n        });\n        results[email] = totalPoints.toFixed(2);\n      });\n      setRangePoints(results);\n    } catch (err) {\n      console.error(\"Error calculating range:\", err);\n    }\n  };\n\n  // 🔹 Export to CSV\n  const exportCSV = () => {\n    if (!Object.keys(rangePoints).length) {\n      alert(\"No data to export!\");\n      return;\n    }\n    let csv = \"Student,Points\\n\";\n    Object.entries(rangePoints).forEach(([email, points]) => {\n      csv += `${email},${points}\\n`;\n    });\n    const blob = new Blob([csv], {\n      type: \"text/csv;charset=utf-8;\"\n    });\n    const link = document.createElement(\"a\");\n    link.href = URL.createObjectURL(blob);\n    link.download = `points_${fromDate}_to_${toDate}.csv`;\n    link.click();\n  };\n  if (loading) return /*#__PURE__*/_jsxDEV(\"h2\", {\n    className: \"loading\",\n    children: \"Loading data...\"\n  }, void 0, false, {\n    fileName: _jsxFileName,\n    lineNumber: 154,\n    columnNumber: 23\n  }, this);\n  return /*#__PURE__*/_jsxDEV(\"div\", {\n    className: \"admin-container\",\n    children: [/*#__PURE__*/_jsxDEV(\"h2\", {\n      className: \"title\",\n      children: \"\\uD83D\\uDCCA Admin Dashboard\"\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 158,\n      columnNumber: 7\n    }, this), /*#__PURE__*/_jsxDEV(\"h3\", {\n      children: \"\\uD83E\\uDD58 Meal Counts (Next 8 Days)\"\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 160,\n      columnNumber: 7\n    }, this), /*#__PURE__*/_jsxDEV(\"table\", {\n      className: \"meal-table\",\n      children: [/*#__PURE__*/_jsxDEV(\"thead\", {\n        children: /*#__PURE__*/_jsxDEV(\"tr\", {\n          children: [/*#__PURE__*/_jsxDEV(\"th\", {\n            children: \"Date\"\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 164,\n            columnNumber: 13\n          }, this), /*#__PURE__*/_jsxDEV(\"th\", {\n            children: \"\\uD83C\\uDF73 Breakfast\"\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 165,\n            columnNumber: 13\n          }, this), /*#__PURE__*/_jsxDEV(\"th\", {\n            children: \"\\uD83E\\uDD57 Lunch\"\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 166,\n            columnNumber: 13\n          }, this), /*#__PURE__*/_jsxDEV(\"th\", {\n            children: \"\\uD83C\\uDF5B Supper\"\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 167,\n            columnNumber: 13\n          }, this)]\n        }, void 0, true, {\n          fileName: _jsxFileName,\n          lineNumber: 163,\n          columnNumber: 11\n        }, this)\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 162,\n        columnNumber: 9\n      }, this), /*#__PURE__*/_jsxDEV(\"tbody\", {\n        children: Object.entries(mealCounts).map(([day, meals]) => /*#__PURE__*/_jsxDEV(\"tr\", {\n          children: [/*#__PURE__*/_jsxDEV(\"td\", {\n            children: day\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 173,\n            columnNumber: 15\n          }, this), /*#__PURE__*/_jsxDEV(\"td\", {\n            children: meals.breakfast\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 174,\n            columnNumber: 15\n          }, this), /*#__PURE__*/_jsxDEV(\"td\", {\n            children: meals.lunch\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 175,\n            columnNumber: 15\n          }, this), /*#__PURE__*/_jsxDEV(\"td\", {\n            children: meals.supper\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 176,\n            columnNumber: 15\n          }, this)]\n        }, day, true, {\n          fileName: _jsxFileName,\n          lineNumber: 172,\n          columnNumber: 13\n        }, this))\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 170,\n        columnNumber: 9\n      }, this)]\n    }, void 0, true, {\n      fileName: _jsxFileName,\n      lineNumber: 161,\n      columnNumber: 7\n    }, this), /*#__PURE__*/_jsxDEV(\"h3\", {\n      children: \"\\uD83C\\uDFC6 Points by Date Range\"\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 182,\n      columnNumber: 7\n    }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n      className: \"range-box\",\n      children: [/*#__PURE__*/_jsxDEV(\"label\", {\n        children: [\"From:\", \" \", /*#__PURE__*/_jsxDEV(\"input\", {\n          type: \"date\",\n          value: fromDate,\n          onChange: e => setFromDate(e.target.value)\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 186,\n          columnNumber: 11\n        }, this)]\n      }, void 0, true, {\n        fileName: _jsxFileName,\n        lineNumber: 184,\n        columnNumber: 9\n      }, this), /*#__PURE__*/_jsxDEV(\"label\", {\n        children: [\"To:\", \" \", /*#__PURE__*/_jsxDEV(\"input\", {\n          type: \"date\",\n          value: toDate,\n          onChange: e => setToDate(e.target.value)\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 194,\n          columnNumber: 11\n        }, this)]\n      }, void 0, true, {\n        fileName: _jsxFileName,\n        lineNumber: 192,\n        columnNumber: 9\n      }, this), /*#__PURE__*/_jsxDEV(\"button\", {\n        className: \"btn\",\n        onClick: calculateRangePoints,\n        children: \"Calculate\"\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 200,\n        columnNumber: 9\n      }, this), /*#__PURE__*/_jsxDEV(\"button\", {\n        className: \"btn export-btn\",\n        onClick: exportCSV,\n        children: \"\\u2B07\\uFE0F Export CSV\"\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 203,\n        columnNumber: 9\n      }, this)]\n    }, void 0, true, {\n      fileName: _jsxFileName,\n      lineNumber: 183,\n      columnNumber: 7\n    }, this), Object.keys(rangePoints).length > 0 && /*#__PURE__*/_jsxDEV(\"table\", {\n      className: \"meal-table\",\n      children: [/*#__PURE__*/_jsxDEV(\"thead\", {\n        children: /*#__PURE__*/_jsxDEV(\"tr\", {\n          children: [/*#__PURE__*/_jsxDEV(\"th\", {\n            children: \"Student\"\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 212,\n            columnNumber: 15\n          }, this), /*#__PURE__*/_jsxDEV(\"th\", {\n            children: \"Points\"\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 213,\n            columnNumber: 15\n          }, this)]\n        }, void 0, true, {\n          fileName: _jsxFileName,\n          lineNumber: 211,\n          columnNumber: 13\n        }, this)\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 210,\n        columnNumber: 11\n      }, this), /*#__PURE__*/_jsxDEV(\"tbody\", {\n        children: Object.entries(rangePoints).map(([email, points]) => /*#__PURE__*/_jsxDEV(\"tr\", {\n          children: [/*#__PURE__*/_jsxDEV(\"td\", {\n            children: email\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 219,\n            columnNumber: 17\n          }, this), /*#__PURE__*/_jsxDEV(\"td\", {\n            children: points\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 220,\n            columnNumber: 17\n          }, this)]\n        }, email, true, {\n          fileName: _jsxFileName,\n          lineNumber: 218,\n          columnNumber: 15\n        }, this))\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 216,\n        columnNumber: 11\n      }, this)]\n    }, void 0, true, {\n      fileName: _jsxFileName,\n      lineNumber: 209,\n      columnNumber: 9\n    }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n      className: \"admin-actions\",\n      children: [/*#__PURE__*/_jsxDEV(\"button\", {\n        className: \"btn points-btn\",\n        onClick: goToPointSystem,\n        children: \"\\u2699\\uFE0F Point System\"\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 228,\n        columnNumber: 9\n      }, this), /*#__PURE__*/_jsxDEV(\"button\", {\n        className: \"logout-btn\",\n        onClick: onLogout,\n        children: \"Logout\"\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 231,\n        columnNumber: 9\n      }, this)]\n    }, void 0, true, {\n      fileName: _jsxFileName,\n      lineNumber: 227,\n      columnNumber: 7\n    }, this)]\n  }, void 0, true, {\n    fileName: _jsxFileName,\n    lineNumber: 157,\n    columnNumber: 5\n  }, this);\n}\n_s(AdminPage, \"0wntob1Z/SLq8aPACIdq5DGwWTg=\");\n_c = AdminPage;\nexport default AdminPage;\nvar _c;\n$RefreshReg$(_c, \"AdminPage\");","map":{"version":3,"names":["React","useEffect","useState","db","collection","getDocs","doc","getDoc","setDoc","jsxDEV","_jsxDEV","AdminPage","onLogout","goToPointSystem","_s","mealCounts","setMealCounts","rangePoints","setRangePoints","loading","setLoading","fromDate","setFromDate","toDate","setToDate","defaultSystem","X","B","L","S","pointSystem","setPointSystem","fetchInitial","settingsRef","settingsSnap","exists","data","usersRef","querySnapshot","counts","today","Date","todayStr","toISOString","split","next8Days","i","d","setDate","getDate","dateStr","push","breakfast","lunch","supper","forEach","docSnap","userMeals","meals","day","meal","err","console","error","calculateRangePoints","alert","results","email","totalPoints","Object","entries","marked","unmarked","keys","filter","m","key","length","join","toFixed","exportCSV","csv","points","blob","Blob","type","link","document","createElement","href","URL","createObjectURL","download","click","className","children","fileName","_jsxFileName","lineNumber","columnNumber","map","value","onChange","e","target","onClick","_c","$RefreshReg$"],"sources":["C:/Users/mohdn/OneDrive/Desktop/mess-app-starter/src/AdminPage.js"],"sourcesContent":["// AdminPage.js\r\nimport React, { useEffect, useState } from \"react\";\r\nimport { db } from \"./firebase\";\r\nimport {\r\n  collection,\r\n  getDocs,\r\n  doc,\r\n  getDoc,\r\n  setDoc,\r\n} from \"firebase/firestore\";\r\nimport \"./AdminPage.css\";\r\n\r\nfunction AdminPage({ onLogout, goToPointSystem }) {\r\n  const [mealCounts, setMealCounts] = useState({});\r\n  const [rangePoints, setRangePoints] = useState({});\r\n  const [loading, setLoading] = useState(true);\r\n\r\n  const [fromDate, setFromDate] = useState(\"\");\r\n  const [toDate, setToDate] = useState(\"\");\r\n\r\n  // default rules\r\n  const defaultSystem = {\r\n    X: 1,\r\n    \"0\": 0,\r\n    B: 0.25,\r\n    L: 0.35,\r\n    S: 0.45,\r\n    \"B/L\": 0.65,\r\n    \"B/S\": 0.75,\r\n    \"L/S\": 0.85,\r\n  };\r\n\r\n  const [pointSystem, setPointSystem] = useState(defaultSystem);\r\n\r\n  useEffect(() => {\r\n    const fetchInitial = async () => {\r\n      try {\r\n        // load point system\r\n        const settingsRef = doc(db, \"settings\", \"points\");\r\n        const settingsSnap = await getDoc(settingsRef);\r\n        if (settingsSnap.exists()) {\r\n          setPointSystem(settingsSnap.data());\r\n        } else {\r\n          await setDoc(settingsRef, defaultSystem);\r\n        }\r\n\r\n        // load users\r\n        const usersRef = collection(db, \"users\");\r\n        const querySnapshot = await getDocs(usersRef);\r\n\r\n        const counts = {};\r\n        const today = new Date();\r\n        const todayStr = today.toISOString().split(\"T\")[0];\r\n\r\n        // ✅ next 8 days\r\n        const next8Days = [];\r\n        for (let i = 0; i < 8; i++) {\r\n          const d = new Date(today);\r\n          d.setDate(today.getDate() + i);\r\n          const dateStr = d.toISOString().split(\"T\")[0];\r\n          next8Days.push(dateStr);\r\n          counts[dateStr] = { breakfast: 0, lunch: 0, supper: 0 };\r\n        }\r\n\r\n        querySnapshot.forEach((docSnap) => {\r\n          const userMeals = docSnap.data().meals || {};\r\n\r\n          next8Days.forEach((day) => {\r\n            const meals = userMeals[day];\r\n            [\"breakfast\", \"lunch\", \"supper\"].forEach((meal) => {\r\n              if (!meals && day > todayStr) {\r\n                counts[day][meal] += 1; // default marked\r\n              } else if (meals && meals[meal]) {\r\n                counts[day][meal] += 1;\r\n              }\r\n            });\r\n          });\r\n        });\r\n\r\n        setMealCounts(counts);\r\n      } catch (err) {\r\n        console.error(\"Admin load error:\", err);\r\n      }\r\n      setLoading(false);\r\n    };\r\n\r\n    fetchInitial();\r\n  }, []);\r\n\r\n  // 🔹 Calculate range points\r\n  const calculateRangePoints = async () => {\r\n    if (!fromDate || !toDate) {\r\n      alert(\"Please select both dates!\");\r\n      return;\r\n    }\r\n\r\n    try {\r\n      const usersRef = collection(db, \"users\");\r\n      const querySnapshot = await getDocs(usersRef);\r\n      const results = {};\r\n\r\n      querySnapshot.forEach((docSnap) => {\r\n        const data = docSnap.data();\r\n        const email = data.email || \"Unknown\";\r\n        const userMeals = data.meals || {};\r\n\r\n        let totalPoints = 0;\r\n\r\n        Object.entries(userMeals).forEach(([day, meals]) => {\r\n          if (day >= fromDate && day <= toDate) {\r\n            const marked = {\r\n              B: !!meals.breakfast,\r\n              L: !!meals.lunch,\r\n              S: !!meals.supper,\r\n            };\r\n            const unmarked = Object.keys(marked).filter((m) => !marked[m]);\r\n            let key = \"0\";\r\n            if (unmarked.length === 3) key = \"X\";\r\n            else if (unmarked.length === 0) key = \"0\";\r\n            else key = unmarked.join(\"/\");\r\n\r\n            totalPoints += pointSystem[key] || 0;\r\n          }\r\n        });\r\n\r\n        results[email] = totalPoints.toFixed(2);\r\n      });\r\n\r\n      setRangePoints(results);\r\n    } catch (err) {\r\n      console.error(\"Error calculating range:\", err);\r\n    }\r\n  };\r\n\r\n  // 🔹 Export to CSV\r\n  const exportCSV = () => {\r\n    if (!Object.keys(rangePoints).length) {\r\n      alert(\"No data to export!\");\r\n      return;\r\n    }\r\n\r\n    let csv = \"Student,Points\\n\";\r\n    Object.entries(rangePoints).forEach(([email, points]) => {\r\n      csv += `${email},${points}\\n`;\r\n    });\r\n\r\n    const blob = new Blob([csv], { type: \"text/csv;charset=utf-8;\" });\r\n    const link = document.createElement(\"a\");\r\n    link.href = URL.createObjectURL(blob);\r\n    link.download = `points_${fromDate}_to_${toDate}.csv`;\r\n    link.click();\r\n  };\r\n\r\n  if (loading) return <h2 className=\"loading\">Loading data...</h2>;\r\n\r\n  return (\r\n    <div className=\"admin-container\">\r\n      <h2 className=\"title\">📊 Admin Dashboard</h2>\r\n\r\n      <h3>🥘 Meal Counts (Next 8 Days)</h3>\r\n      <table className=\"meal-table\">\r\n        <thead>\r\n          <tr>\r\n            <th>Date</th>\r\n            <th>🍳 Breakfast</th>\r\n            <th>🥗 Lunch</th>\r\n            <th>🍛 Supper</th>\r\n          </tr>\r\n        </thead>\r\n        <tbody>\r\n          {Object.entries(mealCounts).map(([day, meals]) => (\r\n            <tr key={day}>\r\n              <td>{day}</td>\r\n              <td>{meals.breakfast}</td>\r\n              <td>{meals.lunch}</td>\r\n              <td>{meals.supper}</td>\r\n            </tr>\r\n          ))}\r\n        </tbody>\r\n      </table>\r\n\r\n      <h3>🏆 Points by Date Range</h3>\r\n      <div className=\"range-box\">\r\n        <label>\r\n          From:{\" \"}\r\n          <input\r\n            type=\"date\"\r\n            value={fromDate}\r\n            onChange={(e) => setFromDate(e.target.value)}\r\n          />\r\n        </label>\r\n        <label>\r\n          To:{\" \"}\r\n          <input\r\n            type=\"date\"\r\n            value={toDate}\r\n            onChange={(e) => setToDate(e.target.value)}\r\n          />\r\n        </label>\r\n        <button className=\"btn\" onClick={calculateRangePoints}>\r\n          Calculate\r\n        </button>\r\n        <button className=\"btn export-btn\" onClick={exportCSV}>\r\n          ⬇️ Export CSV\r\n        </button>\r\n      </div>\r\n\r\n      {Object.keys(rangePoints).length > 0 && (\r\n        <table className=\"meal-table\">\r\n          <thead>\r\n            <tr>\r\n              <th>Student</th>\r\n              <th>Points</th>\r\n            </tr>\r\n          </thead>\r\n          <tbody>\r\n            {Object.entries(rangePoints).map(([email, points]) => (\r\n              <tr key={email}>\r\n                <td>{email}</td>\r\n                <td>{points}</td>\r\n              </tr>\r\n            ))}\r\n          </tbody>\r\n        </table>\r\n      )}\r\n\r\n      <div className=\"admin-actions\">\r\n        <button className=\"btn points-btn\" onClick={goToPointSystem}>\r\n          ⚙️ Point System\r\n        </button>\r\n        <button className=\"logout-btn\" onClick={onLogout}>\r\n          Logout\r\n        </button>\r\n      </div>\r\n    </div>\r\n  );\r\n}\r\n\r\nexport default AdminPage;\r\n"],"mappings":"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","ignoreList":[]},"metadata":{},"sourceType":"module","externalDependencies":[]}