{"ast":null,"code":"var _jsxFileName = \"C:\\\\Users\\\\mohdn\\\\OneDrive\\\\Desktop\\\\mess-app-starter\\\\src\\\\AdminPage.js\",\n  _s = $RefreshSig$();\nimport React, { useEffect, useState } from \"react\";\nimport { db } from \"./firebase\";\nimport { collection, getDocs, doc, getDoc, setDoc } from \"firebase/firestore\";\nimport \"./AdminPage.css\";\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\nfunction AdminPage({\n  onLogout\n}) {\n  _s();\n  const [mealCounts, setMealCounts] = useState({});\n  const [userPoints, setUserPoints] = useState({});\n  const [loading, setLoading] = useState(true);\n\n  // Default system (admin can change later)\n  const defaultSystem = {\n    X: 1,\n    \"0\": 0,\n    B: 0.25,\n    L: 0.35,\n    S: 0.45,\n    \"B/L\": 0.65,\n    \"B/S\": 0.75,\n    \"L/S\": 0.85\n  };\n  const [pointSystem, setPointSystem] = useState(defaultSystem);\n\n  // Load settings + users\n  useEffect(() => {\n    const fetchData = async () => {\n      try {\n        // 🔹 Load point system from Firestore\n        const settingsRef = doc(db, \"settings\", \"points\");\n        const settingsSnap = await getDoc(settingsRef);\n        if (settingsSnap.exists()) {\n          setPointSystem(settingsSnap.data());\n        } else {\n          await setDoc(settingsRef, defaultSystem);\n        }\n\n        // 🔹 Load users\n        const usersRef = collection(db, \"users\");\n        const querySnapshot = await getDocs(usersRef);\n        const counts = {};\n        const points = {};\n        const today = new Date();\n        const currentMonth = today.getMonth();\n        const currentYear = today.getFullYear();\n\n        // ✅ Next 7 days\n        const next7Days = [];\n        for (let i = 0; i < 7; i++) {\n          const d = new Date(today);\n          d.setDate(today.getDate() + i);\n          const dateStr = d.toISOString().split(\"T\")[0];\n          next7Days.push(dateStr);\n          counts[dateStr] = {\n            breakfast: 0,\n            lunch: 0,\n            supper: 0\n          };\n        }\n        querySnapshot.forEach(docSnap => {\n          const data = docSnap.data();\n          const email = data.email || \"Unknown\";\n          const userMeals = data.meals || {};\n          let totalPoints = 0;\n\n          // ✅ Calculate monthly points only up to TODAY\n          Object.entries(userMeals).forEach(([day, meals]) => {\n            const dateObj = new Date(day);\n            const dateStr = day;\n            if (dateObj.getMonth() === currentMonth && dateObj.getFullYear() === currentYear && dateStr <= today.toISOString().split(\"T\")[0]) {\n              const marked = {\n                B: meals.breakfast,\n                L: meals.lunch,\n                S: meals.supper\n              };\n\n              // Determine key based on unmarked meals\n              let key = \"0\";\n              const unmarked = Object.keys(marked).filter(m => !marked[m]);\n              if (unmarked.length === 3) key = \"X\";else if (unmarked.length === 0) key = \"0\";else key = unmarked.join(\"/\");\n              totalPoints += pointSystem[key] || 0;\n            }\n          });\n          points[email] = totalPoints.toFixed(2);\n\n          // ✅ Meal counts (next 7 days, only if marked)\n          next7Days.forEach(day => {\n            const meals = userMeals[day];\n            if (meals) {\n              [\"breakfast\", \"lunch\", \"supper\"].forEach(meal => {\n                if (meals[meal]) counts[day][meal] += 1;\n              });\n            }\n          });\n        });\n        setMealCounts(counts);\n        setUserPoints(points);\n      } catch (err) {\n        console.error(\"Error fetching admin data:\", err);\n      }\n      setLoading(false);\n    };\n    fetchData();\n  }, [pointSystem]);\n\n  // 🔹 Save updated point system\n  const savePointSystem = async () => {\n    try {\n      await setDoc(doc(db, \"settings\", \"points\"), pointSystem);\n      alert(\"✅ Point system updated!\");\n    } catch (err) {\n      alert(\"⚠️ Failed to save point system: \" + err.message);\n    }\n  };\n  if (loading) return /*#__PURE__*/_jsxDEV(\"h2\", {\n    className: \"loading\",\n    children: \"Loading data...\"\n  }, void 0, false, {\n    fileName: _jsxFileName,\n    lineNumber: 128,\n    columnNumber: 23\n  }, this);\n  return /*#__PURE__*/_jsxDEV(\"div\", {\n    className: \"admin-container\",\n    children: [/*#__PURE__*/_jsxDEV(\"h2\", {\n      className: \"title\",\n      children: \"\\uD83D\\uDCCA Admin Dashboard\"\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 132,\n      columnNumber: 7\n    }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n      className: \"settings-box\",\n      children: [/*#__PURE__*/_jsxDEV(\"h3\", {\n        children: \"\\u2699\\uFE0F Point System\"\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 136,\n        columnNumber: 9\n      }, this), Object.keys(pointSystem).map(key => /*#__PURE__*/_jsxDEV(\"label\", {\n        children: [key, \":\", \" \", /*#__PURE__*/_jsxDEV(\"input\", {\n          type: \"number\",\n          step: \"0.01\",\n          value: pointSystem[key],\n          onChange: e => setPointSystem({\n            ...pointSystem,\n            [key]: parseFloat(e.target.value)\n          })\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 140,\n          columnNumber: 13\n        }, this)]\n      }, key, true, {\n        fileName: _jsxFileName,\n        lineNumber: 138,\n        columnNumber: 11\n      }, this)), /*#__PURE__*/_jsxDEV(\"button\", {\n        onClick: savePointSystem,\n        className: \"save-btn\",\n        children: \"Save\"\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 153,\n        columnNumber: 9\n      }, this)]\n    }, void 0, true, {\n      fileName: _jsxFileName,\n      lineNumber: 135,\n      columnNumber: 7\n    }, this), /*#__PURE__*/_jsxDEV(\"h2\", {\n      className: \"title\",\n      children: \"\\uD83E\\uDD58 Meal Counts (Next 7 Days)\"\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 159,\n      columnNumber: 7\n    }, this), /*#__PURE__*/_jsxDEV(\"table\", {\n      className: \"meal-table\",\n      children: [/*#__PURE__*/_jsxDEV(\"thead\", {\n        children: /*#__PURE__*/_jsxDEV(\"tr\", {\n          children: [/*#__PURE__*/_jsxDEV(\"th\", {\n            children: \"Date\"\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 163,\n            columnNumber: 13\n          }, this), /*#__PURE__*/_jsxDEV(\"th\", {\n            children: \"\\uD83C\\uDF73 Breakfast\"\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 164,\n            columnNumber: 13\n          }, this), /*#__PURE__*/_jsxDEV(\"th\", {\n            children: \"\\uD83E\\uDD57 Lunch\"\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 165,\n            columnNumber: 13\n          }, this), /*#__PURE__*/_jsxDEV(\"th\", {\n            children: \"\\uD83C\\uDF5B Supper\"\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 166,\n            columnNumber: 13\n          }, this)]\n        }, void 0, true, {\n          fileName: _jsxFileName,\n          lineNumber: 162,\n          columnNumber: 11\n        }, this)\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 161,\n        columnNumber: 9\n      }, this), /*#__PURE__*/_jsxDEV(\"tbody\", {\n        children: Object.entries(mealCounts).map(([day, meals]) => /*#__PURE__*/_jsxDEV(\"tr\", {\n          children: [/*#__PURE__*/_jsxDEV(\"td\", {\n            children: day\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 172,\n            columnNumber: 15\n          }, this), /*#__PURE__*/_jsxDEV(\"td\", {\n            children: meals.breakfast\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 173,\n            columnNumber: 15\n          }, this), /*#__PURE__*/_jsxDEV(\"td\", {\n            children: meals.lunch\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 174,\n            columnNumber: 15\n          }, this), /*#__PURE__*/_jsxDEV(\"td\", {\n            children: meals.supper\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 175,\n            columnNumber: 15\n          }, this)]\n        }, day, true, {\n          fileName: _jsxFileName,\n          lineNumber: 171,\n          columnNumber: 13\n        }, this))\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 169,\n        columnNumber: 9\n      }, this)]\n    }, void 0, true, {\n      fileName: _jsxFileName,\n      lineNumber: 160,\n      columnNumber: 7\n    }, this), /*#__PURE__*/_jsxDEV(\"h2\", {\n      className: \"title\",\n      children: \"\\uD83C\\uDFC6 Monthly Points\"\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 182,\n      columnNumber: 7\n    }, this), /*#__PURE__*/_jsxDEV(\"table\", {\n      className: \"meal-table\",\n      children: [/*#__PURE__*/_jsxDEV(\"thead\", {\n        children: /*#__PURE__*/_jsxDEV(\"tr\", {\n          children: [/*#__PURE__*/_jsxDEV(\"th\", {\n            children: \"Student\"\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 186,\n            columnNumber: 13\n          }, this), /*#__PURE__*/_jsxDEV(\"th\", {\n            children: \"Total Points\"\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 187,\n            columnNumber: 13\n          }, this)]\n        }, void 0, true, {\n          fileName: _jsxFileName,\n          lineNumber: 185,\n          columnNumber: 11\n        }, this)\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 184,\n        columnNumber: 9\n      }, this), /*#__PURE__*/_jsxDEV(\"tbody\", {\n        children: Object.entries(userPoints).map(([email, points]) => /*#__PURE__*/_jsxDEV(\"tr\", {\n          children: [/*#__PURE__*/_jsxDEV(\"td\", {\n            children: email\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 193,\n            columnNumber: 15\n          }, this), /*#__PURE__*/_jsxDEV(\"td\", {\n            children: points\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 194,\n            columnNumber: 15\n          }, this)]\n        }, email, true, {\n          fileName: _jsxFileName,\n          lineNumber: 192,\n          columnNumber: 13\n        }, this))\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 190,\n        columnNumber: 9\n      }, this)]\n    }, void 0, true, {\n      fileName: _jsxFileName,\n      lineNumber: 183,\n      columnNumber: 7\n    }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n      className: \"logout-wrapper\",\n      children: /*#__PURE__*/_jsxDEV(\"button\", {\n        className: \"logout-btn\",\n        onClick: onLogout,\n        children: \"Logout\"\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 202,\n        columnNumber: 9\n      }, this)\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 201,\n      columnNumber: 7\n    }, this)]\n  }, void 0, true, {\n    fileName: _jsxFileName,\n    lineNumber: 131,\n    columnNumber: 5\n  }, this);\n}\n_s(AdminPage, \"jUgSKfgQCfaURefzkyQXIBrgN7Y=\");\n_c = AdminPage;\nexport default AdminPage;\nvar _c;\n$RefreshReg$(_c, \"AdminPage\");","map":{"version":3,"names":["React","useEffect","useState","db","collection","getDocs","doc","getDoc","setDoc","jsxDEV","_jsxDEV","AdminPage","onLogout","_s","mealCounts","setMealCounts","userPoints","setUserPoints","loading","setLoading","defaultSystem","X","B","L","S","pointSystem","setPointSystem","fetchData","settingsRef","settingsSnap","exists","data","usersRef","querySnapshot","counts","points","today","Date","currentMonth","getMonth","currentYear","getFullYear","next7Days","i","d","setDate","getDate","dateStr","toISOString","split","push","breakfast","lunch","supper","forEach","docSnap","email","userMeals","meals","totalPoints","Object","entries","day","dateObj","marked","key","unmarked","keys","filter","m","length","join","toFixed","meal","err","console","error","savePointSystem","alert","message","className","children","fileName","_jsxFileName","lineNumber","columnNumber","map","type","step","value","onChange","e","parseFloat","target","onClick","_c","$RefreshReg$"],"sources":["C:/Users/mohdn/OneDrive/Desktop/mess-app-starter/src/AdminPage.js"],"sourcesContent":["import React, { useEffect, useState } from \"react\";\r\nimport { db } from \"./firebase\";\r\nimport { collection, getDocs, doc, getDoc, setDoc } from \"firebase/firestore\";\r\nimport \"./AdminPage.css\";\r\n\r\nfunction AdminPage({ onLogout }) {\r\n  const [mealCounts, setMealCounts] = useState({});\r\n  const [userPoints, setUserPoints] = useState({});\r\n  const [loading, setLoading] = useState(true);\r\n\r\n  // Default system (admin can change later)\r\n  const defaultSystem = {\r\n    X: 1,\r\n    \"0\": 0,\r\n    B: 0.25,\r\n    L: 0.35,\r\n    S: 0.45,\r\n    \"B/L\": 0.65,\r\n    \"B/S\": 0.75,\r\n    \"L/S\": 0.85,\r\n  };\r\n\r\n  const [pointSystem, setPointSystem] = useState(defaultSystem);\r\n\r\n  // Load settings + users\r\n  useEffect(() => {\r\n    const fetchData = async () => {\r\n      try {\r\n        // 🔹 Load point system from Firestore\r\n        const settingsRef = doc(db, \"settings\", \"points\");\r\n        const settingsSnap = await getDoc(settingsRef);\r\n        if (settingsSnap.exists()) {\r\n          setPointSystem(settingsSnap.data());\r\n        } else {\r\n          await setDoc(settingsRef, defaultSystem);\r\n        }\r\n\r\n        // 🔹 Load users\r\n        const usersRef = collection(db, \"users\");\r\n        const querySnapshot = await getDocs(usersRef);\r\n\r\n        const counts = {};\r\n        const points = {};\r\n\r\n        const today = new Date();\r\n        const currentMonth = today.getMonth();\r\n        const currentYear = today.getFullYear();\r\n\r\n        // ✅ Next 7 days\r\n        const next7Days = [];\r\n        for (let i = 0; i < 7; i++) {\r\n          const d = new Date(today);\r\n          d.setDate(today.getDate() + i);\r\n          const dateStr = d.toISOString().split(\"T\")[0];\r\n          next7Days.push(dateStr);\r\n          counts[dateStr] = { breakfast: 0, lunch: 0, supper: 0 };\r\n        }\r\n\r\n        querySnapshot.forEach((docSnap) => {\r\n          const data = docSnap.data();\r\n          const email = data.email || \"Unknown\";\r\n          const userMeals = data.meals || {};\r\n\r\n          let totalPoints = 0;\r\n\r\n          // ✅ Calculate monthly points only up to TODAY\r\n          Object.entries(userMeals).forEach(([day, meals]) => {\r\n            const dateObj = new Date(day);\r\n            const dateStr = day;\r\n\r\n            if (\r\n              dateObj.getMonth() === currentMonth &&\r\n              dateObj.getFullYear() === currentYear &&\r\n              dateStr <= today.toISOString().split(\"T\")[0]\r\n            ) {\r\n              const marked = {\r\n                B: meals.breakfast,\r\n                L: meals.lunch,\r\n                S: meals.supper,\r\n              };\r\n\r\n              // Determine key based on unmarked meals\r\n              let key = \"0\";\r\n              const unmarked = Object.keys(marked).filter((m) => !marked[m]);\r\n\r\n              if (unmarked.length === 3) key = \"X\";\r\n              else if (unmarked.length === 0) key = \"0\";\r\n              else key = unmarked.join(\"/\");\r\n\r\n              totalPoints += pointSystem[key] || 0;\r\n            }\r\n          });\r\n\r\n          points[email] = totalPoints.toFixed(2);\r\n\r\n          // ✅ Meal counts (next 7 days, only if marked)\r\n          next7Days.forEach((day) => {\r\n            const meals = userMeals[day];\r\n            if (meals) {\r\n              [\"breakfast\", \"lunch\", \"supper\"].forEach((meal) => {\r\n                if (meals[meal]) counts[day][meal] += 1;\r\n              });\r\n            }\r\n          });\r\n        });\r\n\r\n        setMealCounts(counts);\r\n        setUserPoints(points);\r\n      } catch (err) {\r\n        console.error(\"Error fetching admin data:\", err);\r\n      }\r\n      setLoading(false);\r\n    };\r\n\r\n    fetchData();\r\n  }, [pointSystem]);\r\n\r\n  // 🔹 Save updated point system\r\n  const savePointSystem = async () => {\r\n    try {\r\n      await setDoc(doc(db, \"settings\", \"points\"), pointSystem);\r\n      alert(\"✅ Point system updated!\");\r\n    } catch (err) {\r\n      alert(\"⚠️ Failed to save point system: \" + err.message);\r\n    }\r\n  };\r\n\r\n  if (loading) return <h2 className=\"loading\">Loading data...</h2>;\r\n\r\n  return (\r\n    <div className=\"admin-container\">\r\n      <h2 className=\"title\">📊 Admin Dashboard</h2>\r\n\r\n      {/* Point system settings */}\r\n      <div className=\"settings-box\">\r\n        <h3>⚙️ Point System</h3>\r\n        {Object.keys(pointSystem).map((key) => (\r\n          <label key={key}>\r\n            {key}:{\" \"}\r\n            <input\r\n              type=\"number\"\r\n              step=\"0.01\"\r\n              value={pointSystem[key]}\r\n              onChange={(e) =>\r\n                setPointSystem({\r\n                  ...pointSystem,\r\n                  [key]: parseFloat(e.target.value),\r\n                })\r\n              }\r\n            />\r\n          </label>\r\n        ))}\r\n        <button onClick={savePointSystem} className=\"save-btn\">\r\n          Save\r\n        </button>\r\n      </div>\r\n\r\n      {/* Meal counts table */}\r\n      <h2 className=\"title\">🥘 Meal Counts (Next 7 Days)</h2>\r\n      <table className=\"meal-table\">\r\n        <thead>\r\n          <tr>\r\n            <th>Date</th>\r\n            <th>🍳 Breakfast</th>\r\n            <th>🥗 Lunch</th>\r\n            <th>🍛 Supper</th>\r\n          </tr>\r\n        </thead>\r\n        <tbody>\r\n          {Object.entries(mealCounts).map(([day, meals]) => (\r\n            <tr key={day}>\r\n              <td>{day}</td>\r\n              <td>{meals.breakfast}</td>\r\n              <td>{meals.lunch}</td>\r\n              <td>{meals.supper}</td>\r\n            </tr>\r\n          ))}\r\n        </tbody>\r\n      </table>\r\n\r\n      {/* Points table */}\r\n      <h2 className=\"title\">🏆 Monthly Points</h2>\r\n      <table className=\"meal-table\">\r\n        <thead>\r\n          <tr>\r\n            <th>Student</th>\r\n            <th>Total Points</th>\r\n          </tr>\r\n        </thead>\r\n        <tbody>\r\n          {Object.entries(userPoints).map(([email, points]) => (\r\n            <tr key={email}>\r\n              <td>{email}</td>\r\n              <td>{points}</td>\r\n            </tr>\r\n          ))}\r\n        </tbody>\r\n      </table>\r\n\r\n      {/* logout bottom-right */}\r\n      <div className=\"logout-wrapper\">\r\n        <button className=\"logout-btn\" onClick={onLogout}>\r\n          Logout\r\n        </button>\r\n      </div>\r\n    </div>\r\n  );\r\n}\r\n\r\nexport default AdminPage;\r\n"],"mappings":"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","ignoreList":[]},"metadata":{},"sourceType":"module","externalDependencies":[]}