{"ast":null,"code":"var _jsxFileName = \"C:\\\\Users\\\\mohdn\\\\OneDrive\\\\Desktop\\\\mess-app-starter\\\\src\\\\AdminPage.js\",\n  _s = $RefreshSig$();\n// AdminPage.js\nimport React, { useEffect, useState } from \"react\";\nimport { db } from \"./firebase\";\nimport { collection, getDocs, doc, getDoc, setDoc, updateDoc, query, where } from \"firebase/firestore\";\nimport \"./AdminPage.css\";\nimport { jsxDEV as _jsxDEV, Fragment as _Fragment } from \"react/jsx-dev-runtime\";\nfunction AdminPage({\n  onLogout,\n  goToPointSystem\n}) {\n  _s();\n  const [mealCounts, setMealCounts] = useState({});\n  const [userPoints, setUserPoints] = useState({});\n  const [userMarks, setUserMarks] = useState({});\n  const [loading, setLoading] = useState(true);\n  const [fromDate, setFromDate] = useState(\"\");\n  const [toDate, setToDate] = useState(\"\");\n  const [generated, setGenerated] = useState(false);\n  const [allUsers, setAllUsers] = useState([]);\n  const [view, setView] = useState(\"dashboard\"); // dashboard | requests | points | meals | monthly\n\n  const [month, setMonth] = useState(new Date().getMonth() + 1);\n  const [year, setYear] = useState(new Date().getFullYear());\n  const [fromDay, setFromDay] = useState(1);\n  const [toDay, setToDay] = useState(1);\n  const [dailyDay, setDailyDay] = useState(new Date().getDate());\n  const defaultSystem = {\n    X: 1,\n    \"0\": 0,\n    B: 0.25,\n    L: 0.35,\n    S: 0.45,\n    \"B/L\": 0.65,\n    \"B/S\": 0.75,\n    \"L/S\": 0.85\n  };\n  const [pointSystem, setPointSystem] = useState(defaultSystem);\n  const [generatedRange, setGeneratedRange] = useState({\n    from: \"\",\n    to: \"\"\n  });\n  const todayStr = new Date().toISOString().split(\"T\")[0];\n\n  // --- monthly users state ---\n  const [monthlyUsers, setMonthlyUsers] = useState([]); // array of emails\n  const currentKey = `${year}-${String(month).padStart(2, \"0\")}`;\n\n  // --- exceptions state (persisted per month) ---\n  const [exceptions, setExceptions] = useState([]); // [{ email, from, to }]\n  const [exceptionUser, setExceptionUser] = useState(\"\");\n  const [exceptionFrom, setExceptionFrom] = useState(\"\");\n  const [exceptionTo, setExceptionTo] = useState(\"\");\n\n  // fetch settings + users + meal counts\n  useEffect(() => {\n    const fetchAll = async () => {\n      try {\n        // load point system settings (if exists)\n        const settingsRef = doc(db, \"settings\", \"points\");\n        const settingsSnap = await getDoc(settingsRef);\n        if (settingsSnap.exists()) {\n          setPointSystem(settingsSnap.data());\n        } else {\n          // create default if missing\n          await setDoc(settingsRef, defaultSystem);\n        }\n\n        // load users\n        const usersRef = collection(db, \"users\");\n        const querySnapshot = await getDocs(usersRef);\n        const all = [];\n        // meal counts for next 8 days\n        const counts = {};\n        const today = new Date();\n        const nextDays = [];\n        for (let i = 0; i < 8; i++) {\n          const d = new Date(today);\n          d.setDate(today.getDate() + i);\n          const dateStr = d.toISOString().split(\"T\")[0];\n          nextDays.push(dateStr);\n          counts[dateStr] = {\n            breakfast: 0,\n            lunch: 0,\n            supper: 0\n          };\n        }\n        querySnapshot.forEach(docSnap => {\n          const data = docSnap.data();\n          all.push(data);\n          const userMeals = data.meals || {};\n          nextDays.forEach(day => {\n            const meals = userMeals[day];\n            if (meals) {\n              // User has explicitly marked meals\n              [\"breakfast\", \"lunch\", \"supper\"].forEach(meal => {\n                if (meals[meal]) counts[day][meal] += 1;\n              });\n            } else if (day > todayStr) {\n              // future days default to assuming they will take meal (legacy behavior)\n              counts[day].breakfast += 1;\n              counts[day].lunch += 1;\n              counts[day].supper += 1;\n            }\n          });\n        });\n        setAllUsers(all);\n        setMealCounts(counts);\n      } catch (err) {\n        console.error(\"Admin data error:\", err);\n      } finally {\n        setLoading(false);\n      }\n    };\n    fetchAll();\n  }, []); // run once\n\n  // load monthly users whenever currentKey changes\n  useEffect(() => {\n    const loadMonthlyUsers = async () => {\n      try {\n        const ref = doc(db, \"monthlyUsers\", currentKey);\n        const snap = await getDoc(ref);\n        if (snap.exists()) setMonthlyUsers(snap.data().users || []);else setMonthlyUsers([]);\n      } catch (err) {\n        console.error(\"Error loading monthly users:\", err);\n        setMonthlyUsers([]);\n      }\n    };\n    loadMonthlyUsers();\n  }, [currentKey]);\n\n  // load exceptions for current month\n  useEffect(() => {\n    const loadExceptions = async () => {\n      try {\n        const ref = doc(db, \"monthlyExceptions\", currentKey);\n        const snap = await getDoc(ref);\n        if (snap.exists()) setExceptions(snap.data().exceptions || []);else setExceptions([]);\n      } catch (err) {\n        console.error(\"Error loading exceptions:\", err);\n        setExceptions([]);\n      }\n    };\n    loadExceptions();\n  }, [currentKey]);\n\n  // Recalculate meal counts when monthly users change\n  useEffect(() => {\n    if (allUsers.length > 0) {\n      const recalculateMealCounts = () => {\n        const counts = {};\n        const today = new Date();\n        const nextDays = [];\n        for (let i = 0; i < 8; i++) {\n          const d = new Date(today);\n          d.setDate(today.getDate() + i);\n          const dateStr = d.toISOString().split(\"T\")[0];\n          nextDays.push(dateStr);\n          counts[dateStr] = {\n            breakfast: 0,\n            lunch: 0,\n            supper: 0\n          };\n        }\n        allUsers.forEach(user => {\n          const userMeals = user.meals || {};\n          const isMonthlyUser = monthlyUsers.includes(user.email);\n          nextDays.forEach(day => {\n            const meals = userMeals[day];\n            if (meals) {\n              // User has explicitly marked meals\n              [\"breakfast\", \"lunch\", \"supper\"].forEach(meal => {\n                if (meals[meal]) counts[day][meal] += 1;\n              });\n            } else if (isMonthlyUser) {\n              // Monthly user without explicit marking - assume they take all meals\n              counts[day].breakfast += 1;\n              counts[day].lunch += 1;\n              counts[day].supper += 1;\n            }\n          });\n        });\n        setMealCounts(counts);\n      };\n      recalculateMealCounts();\n    }\n  }, [allUsers, monthlyUsers]);\n\n  // --- update user status (approve/reject) ---\n  // uses query to find the user doc(s) with matching email and updates them\n  const updateUserStatus = async (email, newStatus) => {\n    try {\n      const usersRef = collection(db, \"users\");\n      const q = query(usersRef, where(\"email\", \"==\", email));\n      const snapshot = await getDocs(q);\n      if (snapshot.empty) {\n        alert(`⚠️ User with email ${email} not found.`);\n        return;\n      }\n      const updates = [];\n      snapshot.forEach(docSnap => {\n        updates.push(updateDoc(doc(db, \"users\", docSnap.id), {\n          status: newStatus\n        }));\n      });\n      await Promise.all(updates);\n\n      // update local list\n      setAllUsers(prev => prev.map(u => u.email === email ? {\n        ...u,\n        status: newStatus\n      } : u));\n      alert(`✅ User ${email} marked as ${newStatus}`);\n    } catch (err) {\n      console.error(\"Error updating status:\", err);\n      alert(\"⚠️ Error updating user status. See console.\");\n    }\n  };\n\n  // --- Add or toggle an approved user for the current month (manage monthly list) ---\n  const toggleUserForMonth = async email => {\n    try {\n      // ensure only approved users can be toggled (defensive)\n      const user = allUsers.find(u => u.email === email);\n      if (!user || user.status && user.status !== \"approved\") {\n        alert(\"⚠️ Only approved users can be added to the monthly list.\");\n        return;\n      }\n      const ref = doc(db, \"monthlyUsers\", currentKey);\n      const snap = await getDoc(ref);\n      let users = snap.exists() ? snap.data().users || [] : [];\n      if (users.includes(email)) {\n        users = users.filter(u => u !== email);\n      } else {\n        users.push(email);\n      }\n      await setDoc(ref, {\n        users\n      });\n      setMonthlyUsers(users);\n    } catch (err) {\n      console.error(\"Error updating monthly users:\", err);\n      alert(\"⚠️ Could not update monthly users. See console.\");\n    }\n  };\n\n  // --- Download monthly users as CSV ---\n  const downloadMonthlyUsers = async () => {\n    try {\n      const ref = doc(db, \"monthlyUsers\", currentKey);\n      const snap = await getDoc(ref);\n      if (!snap.exists()) {\n        alert(\"⚠️ No users found for this month\");\n        return;\n      }\n      const users = snap.data().users || [];\n      const rows = [[\"Email\"]];\n      users.forEach(u => rows.push([u]));\n      const csvContent = rows.map(r => r.join(\",\")).join(\"\\n\");\n      const blob = new Blob([csvContent], {\n        type: \"text/csv;charset=utf-8;\"\n      });\n      const url = URL.createObjectURL(blob);\n      const a = document.createElement(\"a\");\n      a.href = url;\n      a.setAttribute(\"download\", `monthly_users_${currentKey}.csv`);\n      document.body.appendChild(a);\n      a.click();\n      document.body.removeChild(a);\n    } catch (err) {\n      console.error(\"Error downloading monthly users:\", err);\n      alert(\"⚠️ Could not download monthly users. See console.\");\n    }\n  };\n\n  // --- Exceptions management (persisted) ---\n  const addException = async () => {\n    try {\n      if (!exceptionUser || !exceptionFrom || !exceptionTo) {\n        alert(\"⚠️ Please choose user and both from/to dates.\");\n        return;\n      }\n      if (exceptionFrom > exceptionTo) {\n        alert(\"⚠️ 'From' date must be on or before 'To' date.\");\n        return;\n      }\n      // only allow exception for monthlyUsers (defensive)\n      if (!monthlyUsers.includes(exceptionUser)) {\n        alert(\"⚠️ Add the user to Monthly Users before creating an exception for them.\");\n        return;\n      }\n      const newEx = {\n        email: exceptionUser,\n        from: exceptionFrom,\n        to: exceptionTo\n      };\n\n      // avoid exact duplicates\n      const exists = exceptions.some(e => e.email === newEx.email && e.from === newEx.from && e.to === newEx.to);\n      if (exists) {\n        alert(\"⚠️ This exception already exists.\");\n        return;\n      }\n      const updated = [...exceptions, newEx];\n      const ref = doc(db, \"monthlyExceptions\", currentKey);\n      await setDoc(ref, {\n        exceptions: updated\n      });\n      setExceptions(updated);\n      setExceptionUser(\"\");\n      setExceptionFrom(\"\");\n      setExceptionTo(\"\");\n    } catch (err) {\n      console.error(\"Error adding exception:\", err);\n      alert(\"⚠️ Could not add exception. See console.\");\n    }\n  };\n  const removeException = async index => {\n    try {\n      const updated = exceptions.filter((_, i) => i !== index);\n      const ref = doc(db, \"monthlyExceptions\", currentKey);\n      await setDoc(ref, {\n        exceptions: updated\n      });\n      setExceptions(updated);\n    } catch (err) {\n      console.error(\"Error removing exception:\", err);\n      alert(\"⚠️ Could not remove exception. See console.\");\n    }\n  };\n\n  // --- helpers ---\n  const buildDaysArray = (from, to) => {\n    const arr = [];\n    const s = new Date(from);\n    const e = new Date(to);\n    for (let d = new Date(s.getTime()); d.getTime() <= e.getTime(); d.setDate(d.getDate() + 1)) {\n      arr.push(d.toISOString().split(\"T\")[0]);\n    }\n    return arr;\n  };\n\n  // returns a Set of ISO day strings that are allowed for this user (union of their exception ranges intersected with report range).\n  // returns null if the user has NO exceptions (meaning full range allowed)\n  const getAllowedDaysSet = (userEmail, reportFrom, reportTo) => {\n    const userEx = exceptions.filter(ex => ex.email === userEmail);\n    if (!userEx || userEx.length === 0) return null;\n    const allowed = new Set();\n    userEx.forEach(ex => {\n      // determine intersection between ex.from..ex.to and reportFrom..reportTo\n      const start = new Date(ex.from) > new Date(reportFrom) ? new Date(ex.from) : new Date(reportFrom);\n      const end = new Date(ex.to) < new Date(reportTo) ? new Date(ex.to) : new Date(reportTo);\n      if (start.getTime() > end.getTime()) return; // no intersection\n      for (let d = new Date(start); d.getTime() <= end.getTime(); d.setDate(d.getDate() + 1)) {\n        allowed.add(d.toISOString().split(\"T\")[0]);\n      }\n    });\n    return allowed;\n  };\n\n  // --- Generate report: only users present in monthlyUsers for currentKey; for users with exceptions compute only in exception days ---\n  const generateReport = (f, t) => {\n    const from = f || fromDate;\n    const to = t || toDate;\n    if (!from || !to) {\n      alert(\"⚠️ Please select both From and To dates!\");\n      return;\n    }\n    if (!monthlyUsers || monthlyUsers.length === 0) {\n      alert(\"⚠️ No users added for this month. Use Manage Monthly Users to add approved users.\");\n      return;\n    }\n    const points = {};\n    const markings = {};\n    const days = buildDaysArray(from, to);\n    allUsers.forEach(user => {\n      // only include users who are in this month's list\n      if (!monthlyUsers.includes(user.email)) return;\n      const email = user.email || \"Unknown\";\n      const displayName = user.name || email;\n      const userMeals = user.meals || {};\n      let totalPoints = 0;\n      const userMarkings = {};\n\n      // fallback logic: earliest meal date\n      const mealDates = Object.keys(userMeals).sort();\n      const firstMealDate = mealDates.length > 0 ? mealDates[0] : todayStr;\n\n      // allowed days set for this user (null => no restriction)\n      const allowedSet = getAllowedDaysSet(email, from, to);\n      days.forEach(day => {\n        var _pointSystem$key;\n        // if there is an allowedSet and this day is not in it => mark as 0\n        if (allowedSet && !allowedSet.has(day)) {\n          userMarkings[day] = \"0\";\n          return; // next day\n        }\n        let meals = userMeals[day];\n        if (!meals) {\n          // Only apply the previous fallback behavior when day is allowed\n          if (day > todayStr || day >= firstMealDate) {\n            meals = {\n              breakfast: true,\n              lunch: true,\n              supper: true\n            };\n          } else {\n            userMarkings[day] = \"0\";\n            return;\n          }\n        }\n        const arr = [];\n        if (meals.breakfast) arr.push(\"B\");\n        if (meals.lunch) arr.push(\"L\");\n        if (meals.supper) arr.push(\"S\");\n        let key;\n        if (arr.length === 3) key = \"X\";else if (arr.length === 0) key = \"0\";else key = arr.join(\"/\");\n        totalPoints += (_pointSystem$key = pointSystem[key]) !== null && _pointSystem$key !== void 0 ? _pointSystem$key : 0;\n        userMarkings[day] = key;\n      });\n      points[displayName] = totalPoints.toFixed(2);\n      markings[displayName] = userMarkings;\n    });\n    setUserPoints(points);\n    setUserMarks(markings);\n    setGenerated(true);\n    setFromDate(from);\n    setToDate(to);\n    setGeneratedRange({\n      from,\n      to\n    });\n  };\n\n  // --- Export CSV (range) ---\n  const exportCSV = () => {\n    const from = generatedRange.from || fromDate;\n    const to = generatedRange.to || toDate;\n    if (!from || !to) {\n      alert(\"⚠️ Please generate a report first.\");\n      return;\n    }\n    const days = buildDaysArray(from, to);\n    const header = [\"Name\", ...days, \"Total Points\"];\n    const rows = [header];\n    Object.entries(userPoints).forEach(([name, pts]) => {\n      const marks = userMarks[name] || {};\n      const row = [name];\n      days.forEach(day => row.push(marks[day] || \"0\"));\n      row.push(pts);\n      rows.push(row);\n    });\n    const csvContent = rows.map(r => r.join(\",\")).join(\"\\n\");\n    const blob = new Blob([csvContent], {\n      type: \"text/csv;charset=utf-8;\"\n    });\n    const url = URL.createObjectURL(blob);\n    const a = document.createElement(\"a\");\n    a.href = url;\n    a.setAttribute(\"download\", `points_${from}_to_${to}.csv`);\n    document.body.appendChild(a);\n    a.click();\n    document.body.removeChild(a);\n  };\n\n  // --- Export single-day marking CSV (only monthly users; respects exceptions) ---\n  const exportDailyMarkingCSV = () => {\n    const day = String(dailyDay).padStart(2, \"0\");\n    const mon = String(month).padStart(2, \"0\");\n    const selectedDate = `${year}-${mon}-${day}`;\n    const rows = [[\"Name\", \"Marking\"]];\n    allUsers.forEach(user => {\n      var _user$meals;\n      if (!monthlyUsers.includes(user.email)) return; // only monthly users\n\n      const displayName = user.name || user.email || \"Unknown\";\n\n      // compute allowed days for this user (intersection of exceptions with selectedDate)\n      const allowedSet = getAllowedDaysSet(user.email, selectedDate, selectedDate);\n\n      // If allowedSet exists and selectedDate is not allowed -> key = \"0\"\n      if (allowedSet && !allowedSet.has(selectedDate)) {\n        rows.push([displayName, \"0\"]);\n        return;\n      }\n      const meals = (_user$meals = user.meals) === null || _user$meals === void 0 ? void 0 : _user$meals[selectedDate];\n      let key;\n      if (!meals) {\n        key = selectedDate > todayStr ? \"X\" : \"0\";\n      } else {\n        const arr = [];\n        if (meals.breakfast) arr.push(\"B\");\n        if (meals.lunch) arr.push(\"L\");\n        if (meals.supper) arr.push(\"S\");\n        if (arr.length === 3) key = \"X\";else if (arr.length === 0) key = \"0\";else key = arr.join(\"/\");\n      }\n      rows.push([displayName, key]);\n    });\n    const csvContent = rows.map(r => r.join(\",\")).join(\"\\n\");\n    const blob = new Blob([csvContent], {\n      type: \"text/csv;charset=utf-8;\"\n    });\n    const url = URL.createObjectURL(blob);\n    const a = document.createElement(\"a\");\n    a.href = url;\n    a.setAttribute(\"download\", `daily_marking_${selectedDate}.csv`);\n    document.body.appendChild(a);\n    a.click();\n    document.body.removeChild(a);\n  };\n  if (loading) return /*#__PURE__*/_jsxDEV(\"h2\", {\n    className: \"loading\",\n    children: \"Loading data...\"\n  }, void 0, false, {\n    fileName: _jsxFileName,\n    lineNumber: 527,\n    columnNumber: 23\n  }, this);\n\n  // ---------- Requests view ----------\n  if (view === \"requests\") {\n    return /*#__PURE__*/_jsxDEV(\"div\", {\n      className: \"admin-container\",\n      children: [/*#__PURE__*/_jsxDEV(\"h2\", {\n        className: \"title\",\n        children: \"\\uD83C\\uDD95 Pending User Requests\"\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 533,\n        columnNumber: 9\n      }, this), /*#__PURE__*/_jsxDEV(\"table\", {\n        className: \"meal-table\",\n        children: [/*#__PURE__*/_jsxDEV(\"thead\", {\n          children: /*#__PURE__*/_jsxDEV(\"tr\", {\n            children: [/*#__PURE__*/_jsxDEV(\"th\", {\n              children: \"Name\"\n            }, void 0, false, {\n              fileName: _jsxFileName,\n              lineNumber: 537,\n              columnNumber: 15\n            }, this), /*#__PURE__*/_jsxDEV(\"th\", {\n              children: \"Email\"\n            }, void 0, false, {\n              fileName: _jsxFileName,\n              lineNumber: 537,\n              columnNumber: 28\n            }, this), /*#__PURE__*/_jsxDEV(\"th\", {\n              children: \"Year\"\n            }, void 0, false, {\n              fileName: _jsxFileName,\n              lineNumber: 537,\n              columnNumber: 42\n            }, this), /*#__PURE__*/_jsxDEV(\"th\", {\n              children: \"Branch\"\n            }, void 0, false, {\n              fileName: _jsxFileName,\n              lineNumber: 537,\n              columnNumber: 55\n            }, this), /*#__PURE__*/_jsxDEV(\"th\", {\n              children: \"Phone\"\n            }, void 0, false, {\n              fileName: _jsxFileName,\n              lineNumber: 537,\n              columnNumber: 70\n            }, this), /*#__PURE__*/_jsxDEV(\"th\", {\n              children: \"Hostel\"\n            }, void 0, false, {\n              fileName: _jsxFileName,\n              lineNumber: 537,\n              columnNumber: 84\n            }, this), /*#__PURE__*/_jsxDEV(\"th\", {\n              children: \"Actions\"\n            }, void 0, false, {\n              fileName: _jsxFileName,\n              lineNumber: 537,\n              columnNumber: 99\n            }, this)]\n          }, void 0, true, {\n            fileName: _jsxFileName,\n            lineNumber: 536,\n            columnNumber: 13\n          }, this)\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 535,\n          columnNumber: 11\n        }, this), /*#__PURE__*/_jsxDEV(\"tbody\", {\n          children: allUsers.filter(u => u.status === \"pending\").map(user => /*#__PURE__*/_jsxDEV(\"tr\", {\n            children: [/*#__PURE__*/_jsxDEV(\"td\", {\n              children: user.name\n            }, void 0, false, {\n              fileName: _jsxFileName,\n              lineNumber: 543,\n              columnNumber: 17\n            }, this), /*#__PURE__*/_jsxDEV(\"td\", {\n              children: user.email\n            }, void 0, false, {\n              fileName: _jsxFileName,\n              lineNumber: 544,\n              columnNumber: 17\n            }, this), /*#__PURE__*/_jsxDEV(\"td\", {\n              children: user.year\n            }, void 0, false, {\n              fileName: _jsxFileName,\n              lineNumber: 545,\n              columnNumber: 17\n            }, this), /*#__PURE__*/_jsxDEV(\"td\", {\n              children: user.branch\n            }, void 0, false, {\n              fileName: _jsxFileName,\n              lineNumber: 546,\n              columnNumber: 17\n            }, this), /*#__PURE__*/_jsxDEV(\"td\", {\n              children: user.phone\n            }, void 0, false, {\n              fileName: _jsxFileName,\n              lineNumber: 547,\n              columnNumber: 17\n            }, this), /*#__PURE__*/_jsxDEV(\"td\", {\n              children: user.mea\n            }, void 0, false, {\n              fileName: _jsxFileName,\n              lineNumber: 548,\n              columnNumber: 17\n            }, this), /*#__PURE__*/_jsxDEV(\"td\", {\n              children: [/*#__PURE__*/_jsxDEV(\"button\", {\n                className: \"btn approve-btn\",\n                onClick: () => updateUserStatus(user.email, \"approved\"),\n                children: \"\\u2705 Approve\"\n              }, void 0, false, {\n                fileName: _jsxFileName,\n                lineNumber: 550,\n                columnNumber: 19\n              }, this), /*#__PURE__*/_jsxDEV(\"button\", {\n                className: \"btn reject-btn\",\n                onClick: () => updateUserStatus(user.email, \"rejected\"),\n                children: \"\\u274C Reject\"\n              }, void 0, false, {\n                fileName: _jsxFileName,\n                lineNumber: 551,\n                columnNumber: 19\n              }, this)]\n            }, void 0, true, {\n              fileName: _jsxFileName,\n              lineNumber: 549,\n              columnNumber: 17\n            }, this)]\n          }, user.email, true, {\n            fileName: _jsxFileName,\n            lineNumber: 542,\n            columnNumber: 15\n          }, this))\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 540,\n          columnNumber: 11\n        }, this)]\n      }, void 0, true, {\n        fileName: _jsxFileName,\n        lineNumber: 534,\n        columnNumber: 9\n      }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n        className: \"admin-actions\",\n        children: [/*#__PURE__*/_jsxDEV(\"button\", {\n          className: \"btn\",\n          onClick: () => setView(\"dashboard\"),\n          children: \"\\u2B05\\uFE0F Back\"\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 559,\n          columnNumber: 11\n        }, this), /*#__PURE__*/_jsxDEV(\"button\", {\n          className: \"logout-btn\",\n          onClick: onLogout,\n          children: \"Logout\"\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 560,\n          columnNumber: 11\n        }, this)]\n      }, void 0, true, {\n        fileName: _jsxFileName,\n        lineNumber: 558,\n        columnNumber: 9\n      }, this)]\n    }, void 0, true, {\n      fileName: _jsxFileName,\n      lineNumber: 532,\n      columnNumber: 7\n    }, this);\n  }\n\n  // ---------- Manage Monthly Users view (ONLY approved users are shown to be toggled) ----------\n  if (view === \"monthly\") {\n    return /*#__PURE__*/_jsxDEV(\"div\", {\n      className: \"admin-container\",\n      children: [/*#__PURE__*/_jsxDEV(\"h2\", {\n        className: \"title\",\n        children: [\"\\uD83D\\uDC65 Manage Monthly Users (\", currentKey, \")\"]\n      }, void 0, true, {\n        fileName: _jsxFileName,\n        lineNumber: 570,\n        columnNumber: 9\n      }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n        className: \"report-filters\",\n        style: {\n          justifyContent: \"flex-start\",\n          gap: 12\n        },\n        children: [/*#__PURE__*/_jsxDEV(\"label\", {\n          children: [\"Month:\", /*#__PURE__*/_jsxDEV(\"select\", {\n            value: month,\n            onChange: e => setMonth(Number(e.target.value)),\n            children: [\"January\", \"February\", \"March\", \"April\", \"May\", \"June\", \"July\", \"August\", \"September\", \"October\", \"November\", \"December\"].map((m, i) => /*#__PURE__*/_jsxDEV(\"option\", {\n              value: i + 1,\n              children: m\n            }, i, false, {\n              fileName: _jsxFileName,\n              lineNumber: 580,\n              columnNumber: 17\n            }, this))\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 575,\n            columnNumber: 13\n          }, this)]\n        }, void 0, true, {\n          fileName: _jsxFileName,\n          lineNumber: 573,\n          columnNumber: 11\n        }, this), /*#__PURE__*/_jsxDEV(\"label\", {\n          children: [\"Year:\", /*#__PURE__*/_jsxDEV(\"select\", {\n            value: year,\n            onChange: e => setYear(Number(e.target.value)),\n            children: Array.from({\n              length: 6\n            }, (_, i) => 2023 + i).map(y => /*#__PURE__*/_jsxDEV(\"option\", {\n              value: y,\n              children: y\n            }, y, false, {\n              fileName: _jsxFileName,\n              lineNumber: 589,\n              columnNumber: 17\n            }, this))\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 587,\n            columnNumber: 13\n          }, this)]\n        }, void 0, true, {\n          fileName: _jsxFileName,\n          lineNumber: 585,\n          columnNumber: 11\n        }, this)]\n      }, void 0, true, {\n        fileName: _jsxFileName,\n        lineNumber: 572,\n        columnNumber: 9\n      }, this), /*#__PURE__*/_jsxDEV(\"table\", {\n        className: \"meal-table\",\n        style: {\n          marginTop: 14\n        },\n        children: [/*#__PURE__*/_jsxDEV(\"thead\", {\n          children: /*#__PURE__*/_jsxDEV(\"tr\", {\n            children: [/*#__PURE__*/_jsxDEV(\"th\", {\n              children: \"Name\"\n            }, void 0, false, {\n              fileName: _jsxFileName,\n              lineNumber: 597,\n              columnNumber: 17\n            }, this), /*#__PURE__*/_jsxDEV(\"th\", {\n              children: \"Email\"\n            }, void 0, false, {\n              fileName: _jsxFileName,\n              lineNumber: 597,\n              columnNumber: 30\n            }, this), /*#__PURE__*/_jsxDEV(\"th\", {\n              children: \"Include for month?\"\n            }, void 0, false, {\n              fileName: _jsxFileName,\n              lineNumber: 597,\n              columnNumber: 44\n            }, this)]\n          }, void 0, true, {\n            fileName: _jsxFileName,\n            lineNumber: 597,\n            columnNumber: 13\n          }, this)\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 596,\n          columnNumber: 11\n        }, this), /*#__PURE__*/_jsxDEV(\"tbody\", {\n          children: allUsers.filter(u => u.status === \"approved\").map(user => /*#__PURE__*/_jsxDEV(\"tr\", {\n            children: [/*#__PURE__*/_jsxDEV(\"td\", {\n              children: user.name\n            }, void 0, false, {\n              fileName: _jsxFileName,\n              lineNumber: 602,\n              columnNumber: 17\n            }, this), /*#__PURE__*/_jsxDEV(\"td\", {\n              children: user.email\n            }, void 0, false, {\n              fileName: _jsxFileName,\n              lineNumber: 603,\n              columnNumber: 17\n            }, this), /*#__PURE__*/_jsxDEV(\"td\", {\n              children: /*#__PURE__*/_jsxDEV(\"label\", {\n                style: {\n                  display: \"inline-flex\",\n                  alignItems: \"center\",\n                  gap: 8\n                },\n                children: [/*#__PURE__*/_jsxDEV(\"input\", {\n                  type: \"checkbox\",\n                  checked: monthlyUsers.includes(user.email),\n                  onChange: () => toggleUserForMonth(user.email)\n                }, void 0, false, {\n                  fileName: _jsxFileName,\n                  lineNumber: 606,\n                  columnNumber: 21\n                }, this), /*#__PURE__*/_jsxDEV(\"span\", {\n                  className: \"small-muted\",\n                  children: monthlyUsers.includes(user.email) ? \"Included\" : \"Not included\"\n                }, void 0, false, {\n                  fileName: _jsxFileName,\n                  lineNumber: 611,\n                  columnNumber: 21\n                }, this)]\n              }, void 0, true, {\n                fileName: _jsxFileName,\n                lineNumber: 605,\n                columnNumber: 19\n              }, this)\n            }, void 0, false, {\n              fileName: _jsxFileName,\n              lineNumber: 604,\n              columnNumber: 17\n            }, this)]\n          }, user.email, true, {\n            fileName: _jsxFileName,\n            lineNumber: 601,\n            columnNumber: 15\n          }, this))\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 599,\n          columnNumber: 11\n        }, this)]\n      }, void 0, true, {\n        fileName: _jsxFileName,\n        lineNumber: 595,\n        columnNumber: 9\n      }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n        className: \"admin-actions\",\n        children: [/*#__PURE__*/_jsxDEV(\"button\", {\n          className: \"btn export-btn\",\n          onClick: downloadMonthlyUsers,\n          children: \"\\u2B07\\uFE0F Download Monthly Users\"\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 620,\n          columnNumber: 11\n        }, this), /*#__PURE__*/_jsxDEV(\"button\", {\n          className: \"btn\",\n          onClick: () => setView(\"dashboard\"),\n          children: \"\\u2B05\\uFE0F Back\"\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 621,\n          columnNumber: 11\n        }, this)]\n      }, void 0, true, {\n        fileName: _jsxFileName,\n        lineNumber: 619,\n        columnNumber: 9\n      }, this)]\n    }, void 0, true, {\n      fileName: _jsxFileName,\n      lineNumber: 569,\n      columnNumber: 7\n    }, this);\n  }\n\n  // ---------- Points view (with Exception section) ----------\n  if (view === \"points\") {\n    const daysInMonth = new Date(year, month, 0).getDate();\n    return /*#__PURE__*/_jsxDEV(\"div\", {\n      className: \"admin-container\",\n      children: [/*#__PURE__*/_jsxDEV(\"h2\", {\n        className: \"title\",\n        children: [\"\\uD83D\\uDCD1 Generate Points Report (\", currentKey, \")\"]\n      }, void 0, true, {\n        fileName: _jsxFileName,\n        lineNumber: 633,\n        columnNumber: 9\n      }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n        className: \"report-filters\",\n        children: [/*#__PURE__*/_jsxDEV(\"label\", {\n          children: [\"Month:\", /*#__PURE__*/_jsxDEV(\"select\", {\n            value: month,\n            onChange: e => setMonth(Number(e.target.value)),\n            children: [\"January\", \"February\", \"March\", \"April\", \"May\", \"June\", \"July\", \"August\", \"September\", \"October\", \"November\", \"December\"].map((m, i) => /*#__PURE__*/_jsxDEV(\"option\", {\n              value: i + 1,\n              children: m\n            }, i, false, {\n              fileName: _jsxFileName,\n              lineNumber: 643,\n              columnNumber: 17\n            }, this))\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 638,\n            columnNumber: 13\n          }, this)]\n        }, void 0, true, {\n          fileName: _jsxFileName,\n          lineNumber: 636,\n          columnNumber: 11\n        }, this), /*#__PURE__*/_jsxDEV(\"label\", {\n          children: [\"Year:\", /*#__PURE__*/_jsxDEV(\"select\", {\n            value: year,\n            onChange: e => setYear(Number(e.target.value)),\n            children: Array.from({\n              length: 6\n            }, (_, i) => 2023 + i).map(y => /*#__PURE__*/_jsxDEV(\"option\", {\n              value: y,\n              children: y\n            }, y, false, {\n              fileName: _jsxFileName,\n              lineNumber: 652,\n              columnNumber: 17\n            }, this))\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 650,\n            columnNumber: 13\n          }, this)]\n        }, void 0, true, {\n          fileName: _jsxFileName,\n          lineNumber: 648,\n          columnNumber: 11\n        }, this), /*#__PURE__*/_jsxDEV(\"label\", {\n          children: [\"From:\", /*#__PURE__*/_jsxDEV(\"select\", {\n            value: fromDay,\n            onChange: e => setFromDay(Number(e.target.value)),\n            children: Array.from({\n              length: daysInMonth\n            }, (_, i) => i + 1).map(d => /*#__PURE__*/_jsxDEV(\"option\", {\n              value: d,\n              children: d\n            }, d, false, {\n              fileName: _jsxFileName,\n              lineNumber: 661,\n              columnNumber: 17\n            }, this))\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 659,\n            columnNumber: 13\n          }, this)]\n        }, void 0, true, {\n          fileName: _jsxFileName,\n          lineNumber: 657,\n          columnNumber: 11\n        }, this), /*#__PURE__*/_jsxDEV(\"label\", {\n          children: [\"To:\", /*#__PURE__*/_jsxDEV(\"select\", {\n            value: toDay,\n            onChange: e => setToDay(Number(e.target.value)),\n            children: Array.from({\n              length: daysInMonth\n            }, (_, i) => i + 1).map(d => /*#__PURE__*/_jsxDEV(\"option\", {\n              value: d,\n              children: d\n            }, d, false, {\n              fileName: _jsxFileName,\n              lineNumber: 670,\n              columnNumber: 17\n            }, this))\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 668,\n            columnNumber: 13\n          }, this)]\n        }, void 0, true, {\n          fileName: _jsxFileName,\n          lineNumber: 666,\n          columnNumber: 11\n        }, this), /*#__PURE__*/_jsxDEV(\"button\", {\n          className: \"btn generate-btn\",\n          onClick: () => {\n            let fDay = fromDay;\n            let tDay = toDay;\n            if (fromDay > toDay) {\n              fDay = toDay;\n              tDay = fromDay;\n              setFromDay(fDay);\n              setToDay(tDay);\n            }\n            const f = `${year}-${String(month).padStart(2, \"0\")}-${String(fDay).padStart(2, \"0\")}`;\n            const t = `${year}-${String(month).padStart(2, \"0\")}-${String(tDay).padStart(2, \"0\")}`;\n            generateReport(f, t);\n          },\n          children: \"Generate\"\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 675,\n          columnNumber: 11\n        }, this)]\n      }, void 0, true, {\n        fileName: _jsxFileName,\n        lineNumber: 635,\n        columnNumber: 9\n      }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n        className: \"exception-section\",\n        style: {\n          marginTop: 16,\n          padding: 12,\n          border: \"1px solid #eee\",\n          borderRadius: 8\n        },\n        children: [/*#__PURE__*/_jsxDEV(\"h3\", {\n          style: {\n            margin: \"0 0 8px 0\"\n          },\n          children: \"\\u26A0\\uFE0F Exception Ranges (per user)\"\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 697,\n          columnNumber: 11\n        }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n          style: {\n            display: \"flex\",\n            gap: 8,\n            alignItems: \"center\",\n            flexWrap: \"wrap\"\n          },\n          children: [/*#__PURE__*/_jsxDEV(\"select\", {\n            value: exceptionUser,\n            onChange: e => setExceptionUser(e.target.value),\n            children: [/*#__PURE__*/_jsxDEV(\"option\", {\n              value: \"\",\n              children: \"-- Select Monthly User --\"\n            }, void 0, false, {\n              fileName: _jsxFileName,\n              lineNumber: 700,\n              columnNumber: 15\n            }, this), allUsers.filter(u => monthlyUsers.includes(u.email)).map(u => /*#__PURE__*/_jsxDEV(\"option\", {\n              value: u.email,\n              children: u.name || u.email\n            }, u.email, false, {\n              fileName: _jsxFileName,\n              lineNumber: 702,\n              columnNumber: 17\n            }, this))]\n          }, void 0, true, {\n            fileName: _jsxFileName,\n            lineNumber: 699,\n            columnNumber: 13\n          }, this), /*#__PURE__*/_jsxDEV(\"input\", {\n            type: \"date\",\n            value: exceptionFrom,\n            onChange: e => setExceptionFrom(e.target.value)\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 706,\n            columnNumber: 13\n          }, this), /*#__PURE__*/_jsxDEV(\"input\", {\n            type: \"date\",\n            value: exceptionTo,\n            onChange: e => setExceptionTo(e.target.value)\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 707,\n            columnNumber: 13\n          }, this), /*#__PURE__*/_jsxDEV(\"button\", {\n            className: \"btn\",\n            onClick: addException,\n            children: \"\\u2795 Add Exception\"\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 708,\n            columnNumber: 13\n          }, this)]\n        }, void 0, true, {\n          fileName: _jsxFileName,\n          lineNumber: 698,\n          columnNumber: 11\n        }, this), exceptions.length > 0 && /*#__PURE__*/_jsxDEV(\"ul\", {\n          style: {\n            marginTop: 12\n          },\n          children: exceptions.map((ex, i) => /*#__PURE__*/_jsxDEV(\"li\", {\n            style: {\n              marginBottom: 8\n            },\n            children: [/*#__PURE__*/_jsxDEV(\"strong\", {\n              children: ex.email\n            }, void 0, false, {\n              fileName: _jsxFileName,\n              lineNumber: 720,\n              columnNumber: 19\n            }, this), \" \\u2014 \", ex.from, \" \\u2192 \", ex.to, /*#__PURE__*/_jsxDEV(\"button\", {\n              className: \"btn reject-btn\",\n              style: {\n                marginLeft: 10\n              },\n              onClick: () => removeException(i),\n              children: \"\\u274C Remove\"\n            }, void 0, false, {\n              fileName: _jsxFileName,\n              lineNumber: 721,\n              columnNumber: 19\n            }, this)]\n          }, i, true, {\n            fileName: _jsxFileName,\n            lineNumber: 719,\n            columnNumber: 17\n          }, this))\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 717,\n          columnNumber: 13\n        }, this)]\n      }, void 0, true, {\n        fileName: _jsxFileName,\n        lineNumber: 696,\n        columnNumber: 9\n      }, this), generated && /*#__PURE__*/_jsxDEV(_Fragment, {\n        children: [/*#__PURE__*/_jsxDEV(\"table\", {\n          className: \"meal-table\",\n          style: {\n            marginTop: 12\n          },\n          children: [/*#__PURE__*/_jsxDEV(\"thead\", {\n            children: /*#__PURE__*/_jsxDEV(\"tr\", {\n              children: [/*#__PURE__*/_jsxDEV(\"th\", {\n                children: \"Name\"\n              }, void 0, false, {\n                fileName: _jsxFileName,\n                lineNumber: 732,\n                columnNumber: 21\n              }, this), /*#__PURE__*/_jsxDEV(\"th\", {\n                children: \"Total Points\"\n              }, void 0, false, {\n                fileName: _jsxFileName,\n                lineNumber: 732,\n                columnNumber: 34\n              }, this)]\n            }, void 0, true, {\n              fileName: _jsxFileName,\n              lineNumber: 732,\n              columnNumber: 17\n            }, this)\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 731,\n            columnNumber: 15\n          }, this), /*#__PURE__*/_jsxDEV(\"tbody\", {\n            children: Object.entries(userPoints).map(([name, points]) => /*#__PURE__*/_jsxDEV(\"tr\", {\n              children: [/*#__PURE__*/_jsxDEV(\"td\", {\n                children: name\n              }, void 0, false, {\n                fileName: _jsxFileName,\n                lineNumber: 736,\n                columnNumber: 34\n              }, this), /*#__PURE__*/_jsxDEV(\"td\", {\n                children: points\n              }, void 0, false, {\n                fileName: _jsxFileName,\n                lineNumber: 736,\n                columnNumber: 49\n              }, this)]\n            }, name, true, {\n              fileName: _jsxFileName,\n              lineNumber: 736,\n              columnNumber: 19\n            }, this))\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 734,\n            columnNumber: 15\n          }, this)]\n        }, void 0, true, {\n          fileName: _jsxFileName,\n          lineNumber: 730,\n          columnNumber: 13\n        }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n          style: {\n            display: \"flex\",\n            gap: 8,\n            alignItems: \"center\",\n            marginTop: 10\n          },\n          children: [/*#__PURE__*/_jsxDEV(\"button\", {\n            className: \"btn export-btn\",\n            onClick: exportCSV,\n            children: \"\\u2B07\\uFE0F Download Range CSV\"\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 742,\n            columnNumber: 15\n          }, this), /*#__PURE__*/_jsxDEV(\"button\", {\n            className: \"btn export-btn\",\n            onClick: downloadMonthlyUsers,\n            children: \"\\u2B07\\uFE0F Download Monthly Users\"\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 743,\n            columnNumber: 15\n          }, this)]\n        }, void 0, true, {\n          fileName: _jsxFileName,\n          lineNumber: 741,\n          columnNumber: 13\n        }, this)]\n      }, void 0, true), /*#__PURE__*/_jsxDEV(\"div\", {\n        style: {\n          marginTop: 18,\n          borderTop: \"1px solid #ddd\",\n          paddingTop: 12\n        },\n        children: [/*#__PURE__*/_jsxDEV(\"h3\", {\n          children: \"\\uD83D\\uDCC5 Export Single-Day Markings\"\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 749,\n          columnNumber: 11\n        }, this), /*#__PURE__*/_jsxDEV(\"label\", {\n          className: \"single-day-label\",\n          children: [\"Day:\", /*#__PURE__*/_jsxDEV(\"select\", {\n            className: \"single-day-date\",\n            value: dailyDay,\n            onChange: e => setDailyDay(Number(e.target.value)),\n            children: Array.from({\n              length: daysInMonth\n            }, (_, i) => i + 1).map(d => /*#__PURE__*/_jsxDEV(\"option\", {\n              value: d,\n              children: d\n            }, d, false, {\n              fileName: _jsxFileName,\n              lineNumber: 754,\n              columnNumber: 17\n            }, this))\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 752,\n            columnNumber: 13\n          }, this)]\n        }, void 0, true, {\n          fileName: _jsxFileName,\n          lineNumber: 750,\n          columnNumber: 11\n        }, this), /*#__PURE__*/_jsxDEV(\"button\", {\n          className: \"btn export-btn\",\n          onClick: exportDailyMarkingCSV,\n          style: {\n            marginLeft: 10\n          },\n          children: \"\\u2B07\\uFE0F Download todays Marking\"\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 758,\n          columnNumber: 11\n        }, this)]\n      }, void 0, true, {\n        fileName: _jsxFileName,\n        lineNumber: 748,\n        columnNumber: 9\n      }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n        className: \"admin-actions\",\n        style: {\n          marginTop: 14\n        },\n        children: /*#__PURE__*/_jsxDEV(\"button\", {\n          className: \"btn\",\n          onClick: () => setView(\"dashboard\"),\n          children: \"\\u2B05\\uFE0F Back\"\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 764,\n          columnNumber: 11\n        }, this)\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 763,\n        columnNumber: 9\n      }, this)]\n    }, void 0, true, {\n      fileName: _jsxFileName,\n      lineNumber: 632,\n      columnNumber: 7\n    }, this);\n  }\n\n  // ---------- Meals page ----------\n  if (view === \"meals\") {\n    return /*#__PURE__*/_jsxDEV(\"div\", {\n      className: \"admin-container\",\n      children: [/*#__PURE__*/_jsxDEV(\"h2\", {\n        className: \"title\",\n        children: \"\\uD83E\\uDD58 Meal Counts (Next 8 Days)\"\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 774,\n        columnNumber: 9\n      }, this), /*#__PURE__*/_jsxDEV(\"table\", {\n        className: \"meal-table\",\n        children: [/*#__PURE__*/_jsxDEV(\"thead\", {\n          children: /*#__PURE__*/_jsxDEV(\"tr\", {\n            children: [/*#__PURE__*/_jsxDEV(\"th\", {\n              children: \"Date\"\n            }, void 0, false, {\n              fileName: _jsxFileName,\n              lineNumber: 776,\n              columnNumber: 22\n            }, this), /*#__PURE__*/_jsxDEV(\"th\", {\n              children: \"Breakfast\"\n            }, void 0, false, {\n              fileName: _jsxFileName,\n              lineNumber: 776,\n              columnNumber: 35\n            }, this), /*#__PURE__*/_jsxDEV(\"th\", {\n              children: \"Lunch\"\n            }, void 0, false, {\n              fileName: _jsxFileName,\n              lineNumber: 776,\n              columnNumber: 53\n            }, this), /*#__PURE__*/_jsxDEV(\"th\", {\n              children: \"Supper\"\n            }, void 0, false, {\n              fileName: _jsxFileName,\n              lineNumber: 776,\n              columnNumber: 67\n            }, this)]\n          }, void 0, true, {\n            fileName: _jsxFileName,\n            lineNumber: 776,\n            columnNumber: 18\n          }, this)\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 776,\n          columnNumber: 11\n        }, this), /*#__PURE__*/_jsxDEV(\"tbody\", {\n          children: Object.entries(mealCounts).map(([day, meals]) => /*#__PURE__*/_jsxDEV(\"tr\", {\n            children: [/*#__PURE__*/_jsxDEV(\"td\", {\n              className: \"date-col\",\n              children: day\n            }, void 0, false, {\n              fileName: _jsxFileName,\n              lineNumber: 780,\n              columnNumber: 17\n            }, this), /*#__PURE__*/_jsxDEV(\"td\", {\n              className: day === todayStr ? \"today-col\" : \"\",\n              children: meals.breakfast\n            }, void 0, false, {\n              fileName: _jsxFileName,\n              lineNumber: 781,\n              columnNumber: 17\n            }, this), /*#__PURE__*/_jsxDEV(\"td\", {\n              className: day === todayStr ? \"today-col\" : \"\",\n              children: meals.lunch\n            }, void 0, false, {\n              fileName: _jsxFileName,\n              lineNumber: 782,\n              columnNumber: 17\n            }, this), /*#__PURE__*/_jsxDEV(\"td\", {\n              className: day === todayStr ? \"today-col\" : \"\",\n              children: meals.supper\n            }, void 0, false, {\n              fileName: _jsxFileName,\n              lineNumber: 783,\n              columnNumber: 17\n            }, this)]\n          }, day, true, {\n            fileName: _jsxFileName,\n            lineNumber: 779,\n            columnNumber: 15\n          }, this))\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 777,\n          columnNumber: 11\n        }, this)]\n      }, void 0, true, {\n        fileName: _jsxFileName,\n        lineNumber: 775,\n        columnNumber: 9\n      }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n        className: \"admin-actions\",\n        children: /*#__PURE__*/_jsxDEV(\"button\", {\n          className: \"btn\",\n          onClick: () => setView(\"dashboard\"),\n          children: \"\\u2B05\\uFE0F Back\"\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 790,\n          columnNumber: 11\n        }, this)\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 789,\n        columnNumber: 9\n      }, this)]\n    }, void 0, true, {\n      fileName: _jsxFileName,\n      lineNumber: 773,\n      columnNumber: 7\n    }, this);\n  }\n\n  // ---------- Dashboard ----------\n  const todayMeals = mealCounts[todayStr] || {\n    breakfast: 0,\n    lunch: 0,\n    supper: 0\n  };\n  return /*#__PURE__*/_jsxDEV(\"div\", {\n    className: \"admin-container\",\n    children: [/*#__PURE__*/_jsxDEV(\"h2\", {\n      className: \"title\",\n      children: \"\\uD83D\\uDCCA Admin Dashboard\"\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 801,\n      columnNumber: 7\n    }, this), /*#__PURE__*/_jsxDEV(\"h3\", {\n      children: \"\\uD83C\\uDF7D\\uFE0F Today\\u2019s Meal Count\"\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 803,\n      columnNumber: 7\n    }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n      className: \"today-meals\",\n      children: [/*#__PURE__*/_jsxDEV(\"p\", {\n        children: [\"\\uD83C\\uDF73 Breakfast: \", /*#__PURE__*/_jsxDEV(\"strong\", {\n          children: todayMeals.breakfast\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 805,\n          columnNumber: 26\n        }, this)]\n      }, void 0, true, {\n        fileName: _jsxFileName,\n        lineNumber: 805,\n        columnNumber: 9\n      }, this), /*#__PURE__*/_jsxDEV(\"p\", {\n        children: [\"\\uD83E\\uDD57 Lunch: \", /*#__PURE__*/_jsxDEV(\"strong\", {\n          children: todayMeals.lunch\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 806,\n          columnNumber: 22\n        }, this)]\n      }, void 0, true, {\n        fileName: _jsxFileName,\n        lineNumber: 806,\n        columnNumber: 9\n      }, this), /*#__PURE__*/_jsxDEV(\"p\", {\n        children: [\"\\uD83C\\uDF5B Supper: \", /*#__PURE__*/_jsxDEV(\"strong\", {\n          children: todayMeals.supper\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 807,\n          columnNumber: 23\n        }, this)]\n      }, void 0, true, {\n        fileName: _jsxFileName,\n        lineNumber: 807,\n        columnNumber: 9\n      }, this)]\n    }, void 0, true, {\n      fileName: _jsxFileName,\n      lineNumber: 804,\n      columnNumber: 7\n    }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n      className: \"admin-actions\",\n      children: [/*#__PURE__*/_jsxDEV(\"button\", {\n        className: \"btn points-btn\",\n        onClick: goToPointSystem,\n        children: \"\\u2699\\uFE0F Point System\"\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 811,\n        columnNumber: 9\n      }, this), /*#__PURE__*/_jsxDEV(\"button\", {\n        className: \"btn points-btn\",\n        onClick: () => setView(\"points\"),\n        children: \"\\uD83D\\uDCD1 Points Report\"\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 812,\n        columnNumber: 9\n      }, this), /*#__PURE__*/_jsxDEV(\"button\", {\n        className: \"btn points-btn\",\n        onClick: () => setView(\"requests\"),\n        children: \"\\uD83D\\uDC65 User Requests\"\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 813,\n        columnNumber: 9\n      }, this), /*#__PURE__*/_jsxDEV(\"button\", {\n        className: \"btn points-btn\",\n        onClick: () => setView(\"monthly\"),\n        children: \"\\uD83D\\uDC64 Manage Monthly Users\"\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 814,\n        columnNumber: 9\n      }, this), /*#__PURE__*/_jsxDEV(\"button\", {\n        className: \"btn points-btn\",\n        onClick: () => setView(\"meals\"),\n        children: \"\\uD83E\\uDD58 Meal Counts\"\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 815,\n        columnNumber: 9\n      }, this), /*#__PURE__*/_jsxDEV(\"button\", {\n        className: \"logout-btn\",\n        onClick: onLogout,\n        children: \"Logout\"\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 816,\n        columnNumber: 9\n      }, this)]\n    }, void 0, true, {\n      fileName: _jsxFileName,\n      lineNumber: 810,\n      columnNumber: 7\n    }, this)]\n  }, void 0, true, {\n    fileName: _jsxFileName,\n    lineNumber: 800,\n    columnNumber: 5\n  }, this);\n}\n_s(AdminPage, \"uFYVsYCY896RzXcJLi9xscfv2QA=\");\n_c = AdminPage;\nexport default AdminPage;\nvar _c;\n$RefreshReg$(_c, \"AdminPage\");","map":{"version":3,"names":["React","useEffect","useState","db","collection","getDocs","doc","getDoc","setDoc","updateDoc","query","where","jsxDEV","_jsxDEV","Fragment","_Fragment","AdminPage","onLogout","goToPointSystem","_s","mealCounts","setMealCounts","userPoints","setUserPoints","userMarks","setUserMarks","loading","setLoading","fromDate","setFromDate","toDate","setToDate","generated","setGenerated","allUsers","setAllUsers","view","setView","month","setMonth","Date","getMonth","year","setYear","getFullYear","fromDay","setFromDay","toDay","setToDay","dailyDay","setDailyDay","getDate","defaultSystem","X","B","L","S","pointSystem","setPointSystem","generatedRange","setGeneratedRange","from","to","todayStr","toISOString","split","monthlyUsers","setMonthlyUsers","currentKey","String","padStart","exceptions","setExceptions","exceptionUser","setExceptionUser","exceptionFrom","setExceptionFrom","exceptionTo","setExceptionTo","fetchAll","settingsRef","settingsSnap","exists","data","usersRef","querySnapshot","all","counts","today","nextDays","i","d","setDate","dateStr","push","breakfast","lunch","supper","forEach","docSnap","userMeals","meals","day","meal","err","console","error","loadMonthlyUsers","ref","snap","users","loadExceptions","length","recalculateMealCounts","user","isMonthlyUser","includes","email","updateUserStatus","newStatus","q","snapshot","empty","alert","updates","id","status","Promise","prev","map","u","toggleUserForMonth","find","filter","downloadMonthlyUsers","rows","csvContent","r","join","blob","Blob","type","url","URL","createObjectURL","a","document","createElement","href","setAttribute","body","appendChild","click","removeChild","addException","newEx","some","e","updated","removeException","index","_","buildDaysArray","arr","s","getTime","getAllowedDaysSet","userEmail","reportFrom","reportTo","userEx","ex","allowed","Set","start","end","add","generateReport","f","t","points","markings","days","displayName","name","totalPoints","userMarkings","mealDates","Object","keys","sort","firstMealDate","allowedSet","_pointSystem$key","has","key","toFixed","exportCSV","header","entries","pts","marks","row","exportDailyMarkingCSV","mon","selectedDate","_user$meals","className","children","fileName","_jsxFileName","lineNumber","columnNumber","branch","phone","mea","onClick","style","justifyContent","gap","value","onChange","Number","target","m","Array","y","marginTop","display","alignItems","checked","daysInMonth","fDay","tDay","padding","border","borderRadius","margin","flexWrap","marginBottom","marginLeft","borderTop","paddingTop","todayMeals","_c","$RefreshReg$"],"sources":["C:/Users/mohdn/OneDrive/Desktop/mess-app-starter/src/AdminPage.js"],"sourcesContent":["// AdminPage.js\r\nimport React, { useEffect, useState } from \"react\";\r\nimport { db } from \"./firebase\";\r\nimport {\r\n  collection,\r\n  getDocs,\r\n  doc,\r\n  getDoc,\r\n  setDoc,\r\n  updateDoc,\r\n  query,\r\n  where,\r\n} from \"firebase/firestore\";\r\nimport \"./AdminPage.css\";\r\n\r\nfunction AdminPage({ onLogout, goToPointSystem }) {\r\n  const [mealCounts, setMealCounts] = useState({});\r\n  const [userPoints, setUserPoints] = useState({});\r\n  const [userMarks, setUserMarks] = useState({});\r\n  const [loading, setLoading] = useState(true);\r\n\r\n  const [fromDate, setFromDate] = useState(\"\");\r\n  const [toDate, setToDate] = useState(\"\");\r\n  const [generated, setGenerated] = useState(false);\r\n\r\n  const [allUsers, setAllUsers] = useState([]);\r\n  const [view, setView] = useState(\"dashboard\"); // dashboard | requests | points | meals | monthly\r\n\r\n  const [month, setMonth] = useState(new Date().getMonth() + 1);\r\n  const [year, setYear] = useState(new Date().getFullYear());\r\n  const [fromDay, setFromDay] = useState(1);\r\n  const [toDay, setToDay] = useState(1);\r\n\r\n  const [dailyDay, setDailyDay] = useState(new Date().getDate());\r\n\r\n  const defaultSystem = {\r\n    X: 1,\r\n    \"0\": 0,\r\n    B: 0.25,\r\n    L: 0.35,\r\n    S: 0.45,\r\n    \"B/L\": 0.65,\r\n    \"B/S\": 0.75,\r\n    \"L/S\": 0.85,\r\n  };\r\n  const [pointSystem, setPointSystem] = useState(defaultSystem);\r\n\r\n  const [generatedRange, setGeneratedRange] = useState({ from: \"\", to: \"\" });\r\n\r\n  const todayStr = new Date().toISOString().split(\"T\")[0];\r\n\r\n  // --- monthly users state ---\r\n  const [monthlyUsers, setMonthlyUsers] = useState([]); // array of emails\r\n  const currentKey = `${year}-${String(month).padStart(2, \"0\")}`;\r\n\r\n  // --- exceptions state (persisted per month) ---\r\n  const [exceptions, setExceptions] = useState([]); // [{ email, from, to }]\r\n  const [exceptionUser, setExceptionUser] = useState(\"\");\r\n  const [exceptionFrom, setExceptionFrom] = useState(\"\");\r\n  const [exceptionTo, setExceptionTo] = useState(\"\");\r\n\r\n  // fetch settings + users + meal counts\r\n  useEffect(() => {\r\n    const fetchAll = async () => {\r\n      try {\r\n        // load point system settings (if exists)\r\n        const settingsRef = doc(db, \"settings\", \"points\");\r\n        const settingsSnap = await getDoc(settingsRef);\r\n        if (settingsSnap.exists()) {\r\n          setPointSystem(settingsSnap.data());\r\n        } else {\r\n          // create default if missing\r\n          await setDoc(settingsRef, defaultSystem);\r\n        }\r\n\r\n        // load users\r\n        const usersRef = collection(db, \"users\");\r\n        const querySnapshot = await getDocs(usersRef);\r\n\r\n        const all = [];\r\n        // meal counts for next 8 days\r\n        const counts = {};\r\n        const today = new Date();\r\n\r\n        const nextDays = [];\r\n        for (let i = 0; i < 8; i++) {\r\n          const d = new Date(today);\r\n          d.setDate(today.getDate() + i);\r\n          const dateStr = d.toISOString().split(\"T\")[0];\r\n          nextDays.push(dateStr);\r\n          counts[dateStr] = { breakfast: 0, lunch: 0, supper: 0 };\r\n        }\r\n\r\n        querySnapshot.forEach((docSnap) => {\r\n          const data = docSnap.data();\r\n          all.push(data);\r\n\r\n          const userMeals = data.meals || {};\r\n          nextDays.forEach((day) => {\r\n            const meals = userMeals[day];\r\n            if (meals) {\r\n              // User has explicitly marked meals\r\n              [\"breakfast\", \"lunch\", \"supper\"].forEach((meal) => {\r\n                if (meals[meal]) counts[day][meal] += 1;\r\n              });\r\n            } else if (day > todayStr) {\r\n              // future days default to assuming they will take meal (legacy behavior)\r\n              counts[day].breakfast += 1;\r\n              counts[day].lunch += 1;\r\n              counts[day].supper += 1;\r\n            }\r\n          });\r\n        });\r\n\r\n        setAllUsers(all);\r\n        setMealCounts(counts);\r\n      } catch (err) {\r\n        console.error(\"Admin data error:\", err);\r\n      } finally {\r\n        setLoading(false);\r\n      }\r\n    };\r\n\r\n    fetchAll();\r\n  }, []); // run once\r\n\r\n  // load monthly users whenever currentKey changes\r\n  useEffect(() => {\r\n    const loadMonthlyUsers = async () => {\r\n      try {\r\n        const ref = doc(db, \"monthlyUsers\", currentKey);\r\n        const snap = await getDoc(ref);\r\n        if (snap.exists()) setMonthlyUsers(snap.data().users || []);\r\n        else setMonthlyUsers([]);\r\n      } catch (err) {\r\n        console.error(\"Error loading monthly users:\", err);\r\n        setMonthlyUsers([]);\r\n      }\r\n    };\r\n    loadMonthlyUsers();\r\n  }, [currentKey]);\r\n\r\n  // load exceptions for current month\r\n  useEffect(() => {\r\n    const loadExceptions = async () => {\r\n      try {\r\n        const ref = doc(db, \"monthlyExceptions\", currentKey);\r\n        const snap = await getDoc(ref);\r\n        if (snap.exists()) setExceptions(snap.data().exceptions || []);\r\n        else setExceptions([]);\r\n      } catch (err) {\r\n        console.error(\"Error loading exceptions:\", err);\r\n        setExceptions([]);\r\n      }\r\n    };\r\n    loadExceptions();\r\n  }, [currentKey]);\r\n\r\n  // Recalculate meal counts when monthly users change\r\n  useEffect(() => {\r\n    if (allUsers.length > 0) {\r\n      const recalculateMealCounts = () => {\r\n        const counts = {};\r\n        const today = new Date();\r\n        const nextDays = [];\r\n        \r\n        for (let i = 0; i < 8; i++) {\r\n          const d = new Date(today);\r\n          d.setDate(today.getDate() + i);\r\n          const dateStr = d.toISOString().split(\"T\")[0];\r\n          nextDays.push(dateStr);\r\n          counts[dateStr] = { breakfast: 0, lunch: 0, supper: 0 };\r\n        }\r\n\r\n        allUsers.forEach((user) => {\r\n          const userMeals = user.meals || {};\r\n          const isMonthlyUser = monthlyUsers.includes(user.email);\r\n          \r\n          nextDays.forEach((day) => {\r\n            const meals = userMeals[day];\r\n            if (meals) {\r\n              // User has explicitly marked meals\r\n              [\"breakfast\", \"lunch\", \"supper\"].forEach((meal) => {\r\n                if (meals[meal]) counts[day][meal] += 1;\r\n              });\r\n            } else if (isMonthlyUser) {\r\n              // Monthly user without explicit marking - assume they take all meals\r\n              counts[day].breakfast += 1;\r\n              counts[day].lunch += 1;\r\n              counts[day].supper += 1;\r\n            }\r\n          });\r\n        });\r\n\r\n        setMealCounts(counts);\r\n      };\r\n\r\n      recalculateMealCounts();\r\n    }\r\n  }, [allUsers, monthlyUsers]);\r\n\r\n  // --- update user status (approve/reject) ---\r\n  // uses query to find the user doc(s) with matching email and updates them\r\n  const updateUserStatus = async (email, newStatus) => {\r\n    try {\r\n      const usersRef = collection(db, \"users\");\r\n      const q = query(usersRef, where(\"email\", \"==\", email));\r\n      const snapshot = await getDocs(q);\r\n\r\n      if (snapshot.empty) {\r\n        alert(`⚠️ User with email ${email} not found.`);\r\n        return;\r\n      }\r\n\r\n      const updates = [];\r\n      snapshot.forEach((docSnap) => {\r\n        updates.push(updateDoc(doc(db, \"users\", docSnap.id), { status: newStatus }));\r\n      });\r\n      await Promise.all(updates);\r\n\r\n      // update local list\r\n      setAllUsers((prev) =>\r\n        prev.map((u) => (u.email === email ? { ...u, status: newStatus } : u))\r\n      );\r\n\r\n      alert(`✅ User ${email} marked as ${newStatus}`);\r\n    } catch (err) {\r\n      console.error(\"Error updating status:\", err);\r\n      alert(\"⚠️ Error updating user status. See console.\");\r\n    }\r\n  };\r\n\r\n  // --- Add or toggle an approved user for the current month (manage monthly list) ---\r\n  const toggleUserForMonth = async (email) => {\r\n    try {\r\n      // ensure only approved users can be toggled (defensive)\r\n      const user = allUsers.find((u) => u.email === email);\r\n      if (!user || (user.status && user.status !== \"approved\")) {\r\n        alert(\"⚠️ Only approved users can be added to the monthly list.\");\r\n        return;\r\n      }\r\n\r\n      const ref = doc(db, \"monthlyUsers\", currentKey);\r\n      const snap = await getDoc(ref);\r\n      let users = snap.exists() ? snap.data().users || [] : [];\r\n\r\n      if (users.includes(email)) {\r\n        users = users.filter((u) => u !== email);\r\n      } else {\r\n        users.push(email);\r\n      }\r\n\r\n      await setDoc(ref, { users });\r\n      setMonthlyUsers(users);\r\n    } catch (err) {\r\n      console.error(\"Error updating monthly users:\", err);\r\n      alert(\"⚠️ Could not update monthly users. See console.\");\r\n    }\r\n  };\r\n\r\n  // --- Download monthly users as CSV ---\r\n  const downloadMonthlyUsers = async () => {\r\n    try {\r\n      const ref = doc(db, \"monthlyUsers\", currentKey);\r\n      const snap = await getDoc(ref);\r\n      if (!snap.exists()) {\r\n        alert(\"⚠️ No users found for this month\");\r\n        return;\r\n      }\r\n      const users = snap.data().users || [];\r\n      const rows = [[\"Email\"]];\r\n      users.forEach((u) => rows.push([u]));\r\n      const csvContent = rows.map((r) => r.join(\",\")).join(\"\\n\");\r\n      const blob = new Blob([csvContent], { type: \"text/csv;charset=utf-8;\" });\r\n      const url = URL.createObjectURL(blob);\r\n      const a = document.createElement(\"a\");\r\n      a.href = url;\r\n      a.setAttribute(\"download\", `monthly_users_${currentKey}.csv`);\r\n      document.body.appendChild(a);\r\n      a.click();\r\n      document.body.removeChild(a);\r\n    } catch (err) {\r\n      console.error(\"Error downloading monthly users:\", err);\r\n      alert(\"⚠️ Could not download monthly users. See console.\");\r\n    }\r\n  };\r\n\r\n  // --- Exceptions management (persisted) ---\r\n  const addException = async () => {\r\n    try {\r\n      if (!exceptionUser || !exceptionFrom || !exceptionTo) {\r\n        alert(\"⚠️ Please choose user and both from/to dates.\");\r\n        return;\r\n      }\r\n      if (exceptionFrom > exceptionTo) {\r\n        alert(\"⚠️ 'From' date must be on or before 'To' date.\");\r\n        return;\r\n      }\r\n      // only allow exception for monthlyUsers (defensive)\r\n      if (!monthlyUsers.includes(exceptionUser)) {\r\n        alert(\"⚠️ Add the user to Monthly Users before creating an exception for them.\");\r\n        return;\r\n      }\r\n      const newEx = { email: exceptionUser, from: exceptionFrom, to: exceptionTo };\r\n\r\n      // avoid exact duplicates\r\n      const exists = exceptions.some(\r\n        (e) => e.email === newEx.email && e.from === newEx.from && e.to === newEx.to\r\n      );\r\n      if (exists) {\r\n        alert(\"⚠️ This exception already exists.\");\r\n        return;\r\n      }\r\n\r\n      const updated = [...exceptions, newEx];\r\n      const ref = doc(db, \"monthlyExceptions\", currentKey);\r\n      await setDoc(ref, { exceptions: updated });\r\n      setExceptions(updated);\r\n      setExceptionUser(\"\");\r\n      setExceptionFrom(\"\");\r\n      setExceptionTo(\"\");\r\n    } catch (err) {\r\n      console.error(\"Error adding exception:\", err);\r\n      alert(\"⚠️ Could not add exception. See console.\");\r\n    }\r\n  };\r\n\r\n  const removeException = async (index) => {\r\n    try {\r\n      const updated = exceptions.filter((_, i) => i !== index);\r\n      const ref = doc(db, \"monthlyExceptions\", currentKey);\r\n      await setDoc(ref, { exceptions: updated });\r\n      setExceptions(updated);\r\n    } catch (err) {\r\n      console.error(\"Error removing exception:\", err);\r\n      alert(\"⚠️ Could not remove exception. See console.\");\r\n    }\r\n  };\r\n\r\n  // --- helpers ---\r\n  const buildDaysArray = (from, to) => {\r\n    const arr = [];\r\n    const s = new Date(from);\r\n    const e = new Date(to);\r\n    for (let d = new Date(s.getTime()); d.getTime() <= e.getTime(); d.setDate(d.getDate() + 1)) {\r\n      arr.push(d.toISOString().split(\"T\")[0]);\r\n    }\r\n    return arr;\r\n  };\r\n\r\n  // returns a Set of ISO day strings that are allowed for this user (union of their exception ranges intersected with report range).\r\n  // returns null if the user has NO exceptions (meaning full range allowed)\r\n  const getAllowedDaysSet = (userEmail, reportFrom, reportTo) => {\r\n    const userEx = exceptions.filter((ex) => ex.email === userEmail);\r\n    if (!userEx || userEx.length === 0) return null;\r\n    const allowed = new Set();\r\n    userEx.forEach((ex) => {\r\n      // determine intersection between ex.from..ex.to and reportFrom..reportTo\r\n      const start = new Date(ex.from) > new Date(reportFrom) ? new Date(ex.from) : new Date(reportFrom);\r\n      const end = new Date(ex.to) < new Date(reportTo) ? new Date(ex.to) : new Date(reportTo);\r\n      if (start.getTime() > end.getTime()) return; // no intersection\r\n      for (let d = new Date(start); d.getTime() <= end.getTime(); d.setDate(d.getDate() + 1)) {\r\n        allowed.add(d.toISOString().split(\"T\")[0]);\r\n      }\r\n    });\r\n    return allowed;\r\n  };\r\n\r\n  // --- Generate report: only users present in monthlyUsers for currentKey; for users with exceptions compute only in exception days ---\r\n  const generateReport = (f, t) => {\r\n    const from = f || fromDate;\r\n    const to = t || toDate;\r\n\r\n    if (!from || !to) {\r\n      alert(\"⚠️ Please select both From and To dates!\");\r\n      return;\r\n    }\r\n\r\n    if (!monthlyUsers || monthlyUsers.length === 0) {\r\n      alert(\"⚠️ No users added for this month. Use Manage Monthly Users to add approved users.\");\r\n      return;\r\n    }\r\n\r\n    const points = {};\r\n    const markings = {};\r\n    const days = buildDaysArray(from, to);\r\n\r\n    allUsers.forEach((user) => {\r\n      // only include users who are in this month's list\r\n      if (!monthlyUsers.includes(user.email)) return;\r\n\r\n      const email = user.email || \"Unknown\";\r\n      const displayName = user.name || email;\r\n      const userMeals = user.meals || {};\r\n      let totalPoints = 0;\r\n      const userMarkings = {};\r\n\r\n      // fallback logic: earliest meal date\r\n      const mealDates = Object.keys(userMeals).sort();\r\n      const firstMealDate = mealDates.length > 0 ? mealDates[0] : todayStr;\r\n\r\n      // allowed days set for this user (null => no restriction)\r\n      const allowedSet = getAllowedDaysSet(email, from, to);\r\n\r\n      days.forEach((day) => {\r\n        // if there is an allowedSet and this day is not in it => mark as 0\r\n        if (allowedSet && !allowedSet.has(day)) {\r\n          userMarkings[day] = \"0\";\r\n          return; // next day\r\n        }\r\n\r\n        let meals = userMeals[day];\r\n        if (!meals) {\r\n          // Only apply the previous fallback behavior when day is allowed\r\n          if (day > todayStr || day >= firstMealDate) {\r\n            meals = { breakfast: true, lunch: true, supper: true };\r\n          } else {\r\n            userMarkings[day] = \"0\";\r\n            return;\r\n          }\r\n        }\r\n\r\n        const arr = [];\r\n        if (meals.breakfast) arr.push(\"B\");\r\n        if (meals.lunch) arr.push(\"L\");\r\n        if (meals.supper) arr.push(\"S\");\r\n\r\n        let key;\r\n        if (arr.length === 3) key = \"X\";\r\n        else if (arr.length === 0) key = \"0\";\r\n        else key = arr.join(\"/\");\r\n\r\n        totalPoints += pointSystem[key] ?? 0;\r\n        userMarkings[day] = key;\r\n      });\r\n\r\n      points[displayName] = totalPoints.toFixed(2);\r\n      markings[displayName] = userMarkings;\r\n    });\r\n\r\n    setUserPoints(points);\r\n    setUserMarks(markings);\r\n    setGenerated(true);\r\n    setFromDate(from);\r\n    setToDate(to);\r\n    setGeneratedRange({ from, to });\r\n  };\r\n\r\n  // --- Export CSV (range) ---\r\n  const exportCSV = () => {\r\n    const from = generatedRange.from || fromDate;\r\n    const to = generatedRange.to || toDate;\r\n    if (!from || !to) {\r\n      alert(\"⚠️ Please generate a report first.\");\r\n      return;\r\n    }\r\n    const days = buildDaysArray(from, to);\r\n    const header = [\"Name\", ...days, \"Total Points\"];\r\n    const rows = [header];\r\n    Object.entries(userPoints).forEach(([name, pts]) => {\r\n      const marks = userMarks[name] || {};\r\n      const row = [name];\r\n      days.forEach((day) => row.push(marks[day] || \"0\"));\r\n      row.push(pts);\r\n      rows.push(row);\r\n    });\r\n    const csvContent = rows.map((r) => r.join(\",\")).join(\"\\n\");\r\n    const blob = new Blob([csvContent], { type: \"text/csv;charset=utf-8;\" });\r\n    const url = URL.createObjectURL(blob);\r\n    const a = document.createElement(\"a\");\r\n    a.href = url;\r\n    a.setAttribute(\"download\", `points_${from}_to_${to}.csv`);\r\n    document.body.appendChild(a);\r\n    a.click();\r\n    document.body.removeChild(a);\r\n  };\r\n\r\n  // --- Export single-day marking CSV (only monthly users; respects exceptions) ---\r\n  const exportDailyMarkingCSV = () => {\r\n    const day = String(dailyDay).padStart(2, \"0\");\r\n    const mon = String(month).padStart(2, \"0\");\r\n    const selectedDate = `${year}-${mon}-${day}`;\r\n\r\n    const rows = [[\"Name\", \"Marking\"]];\r\n\r\n    allUsers.forEach((user) => {\r\n      if (!monthlyUsers.includes(user.email)) return; // only monthly users\r\n\r\n      const displayName = user.name || user.email || \"Unknown\";\r\n\r\n      // compute allowed days for this user (intersection of exceptions with selectedDate)\r\n      const allowedSet = getAllowedDaysSet(user.email, selectedDate, selectedDate);\r\n\r\n      // If allowedSet exists and selectedDate is not allowed -> key = \"0\"\r\n      if (allowedSet && !allowedSet.has(selectedDate)) {\r\n        rows.push([displayName, \"0\"]);\r\n        return;\r\n      }\r\n\r\n      const meals = user.meals?.[selectedDate];\r\n      let key;\r\n      if (!meals) {\r\n        key = selectedDate > todayStr ? \"X\" : \"0\";\r\n      } else {\r\n        const arr = [];\r\n        if (meals.breakfast) arr.push(\"B\");\r\n        if (meals.lunch) arr.push(\"L\");\r\n        if (meals.supper) arr.push(\"S\");\r\n        if (arr.length === 3) key = \"X\";\r\n        else if (arr.length === 0) key = \"0\";\r\n        else key = arr.join(\"/\");\r\n      }\r\n      rows.push([displayName, key]);\r\n    });\r\n\r\n    const csvContent = rows.map((r) => r.join(\",\")).join(\"\\n\");\r\n    const blob = new Blob([csvContent], { type: \"text/csv;charset=utf-8;\" });\r\n    const url = URL.createObjectURL(blob);\r\n    const a = document.createElement(\"a\");\r\n    a.href = url;\r\n    a.setAttribute(\"download\", `daily_marking_${selectedDate}.csv`);\r\n    document.body.appendChild(a);\r\n    a.click();\r\n    document.body.removeChild(a);\r\n  };\r\n\r\n  if (loading) return <h2 className=\"loading\">Loading data...</h2>;\r\n\r\n  // ---------- Requests view ----------\r\n  if (view === \"requests\") {\r\n    return (\r\n      <div className=\"admin-container\">\r\n        <h2 className=\"title\">🆕 Pending User Requests</h2>\r\n        <table className=\"meal-table\">\r\n          <thead>\r\n            <tr>\r\n              <th>Name</th><th>Email</th><th>Year</th><th>Branch</th><th>Phone</th><th>Hostel</th><th>Actions</th>\r\n            </tr>\r\n          </thead>\r\n          <tbody>\r\n            {allUsers.filter((u) => u.status === \"pending\").map((user) => (\r\n              <tr key={user.email}>\r\n                <td>{user.name}</td>\r\n                <td>{user.email}</td>\r\n                <td>{user.year}</td>\r\n                <td>{user.branch}</td>\r\n                <td>{user.phone}</td>\r\n                <td>{user.mea}</td>\r\n                <td>\r\n                  <button className=\"btn approve-btn\" onClick={() => updateUserStatus(user.email, \"approved\")}>✅ Approve</button>\r\n                  <button className=\"btn reject-btn\" onClick={() => updateUserStatus(user.email, \"rejected\")}>❌ Reject</button>\r\n                </td>\r\n              </tr>\r\n            ))}\r\n          </tbody>\r\n        </table>\r\n\r\n        <div className=\"admin-actions\">\r\n          <button className=\"btn\" onClick={() => setView(\"dashboard\")}>⬅️ Back</button>\r\n          <button className=\"logout-btn\" onClick={onLogout}>Logout</button>\r\n        </div>\r\n      </div>\r\n    );\r\n  }\r\n\r\n  // ---------- Manage Monthly Users view (ONLY approved users are shown to be toggled) ----------\r\n  if (view === \"monthly\") {\r\n    return (\r\n      <div className=\"admin-container\">\r\n        <h2 className=\"title\">👥 Manage Monthly Users ({currentKey})</h2>\r\n\r\n        <div className=\"report-filters\" style={{ justifyContent: \"flex-start\", gap: 12 }}>\r\n          <label>\r\n            Month:\r\n            <select value={month} onChange={(e) => setMonth(Number(e.target.value))}>\r\n              {[\r\n                \"January\",\"February\",\"March\",\"April\",\"May\",\"June\",\r\n                \"July\",\"August\",\"September\",\"October\",\"November\",\"December\"\r\n              ].map((m, i) => (\r\n                <option key={i} value={i + 1}>{m}</option>\r\n              ))}\r\n            </select>\r\n          </label>\r\n\r\n          <label>\r\n            Year:\r\n            <select value={year} onChange={(e) => setYear(Number(e.target.value))}>\r\n              {Array.from({ length: 6 }, (_, i) => 2023 + i).map((y) => (\r\n                <option key={y} value={y}>{y}</option>\r\n              ))}\r\n            </select>\r\n          </label>\r\n        </div>\r\n\r\n        <table className=\"meal-table\" style={{ marginTop: 14 }}>\r\n          <thead>\r\n            <tr><th>Name</th><th>Email</th><th>Include for month?</th></tr>\r\n          </thead>\r\n          <tbody>\r\n            {allUsers.filter((u) => u.status === \"approved\").map((user) => (\r\n              <tr key={user.email}>\r\n                <td>{user.name}</td>\r\n                <td>{user.email}</td>\r\n                <td>\r\n                  <label style={{ display: \"inline-flex\", alignItems: \"center\", gap: 8 }}>\r\n                    <input\r\n                      type=\"checkbox\"\r\n                      checked={monthlyUsers.includes(user.email)}\r\n                      onChange={() => toggleUserForMonth(user.email)}\r\n                    />\r\n                    <span className=\"small-muted\">{monthlyUsers.includes(user.email) ? \"Included\" : \"Not included\"}</span>\r\n                  </label>\r\n                </td>\r\n              </tr>\r\n            ))}\r\n          </tbody>\r\n        </table>\r\n\r\n        <div className=\"admin-actions\">\r\n          <button className=\"btn export-btn\" onClick={downloadMonthlyUsers}>⬇️ Download Monthly Users</button>\r\n          <button className=\"btn\" onClick={() => setView(\"dashboard\")}>⬅️ Back</button>\r\n        </div>\r\n      </div>\r\n    );\r\n  }\r\n\r\n  // ---------- Points view (with Exception section) ----------\r\n  if (view === \"points\") {\r\n    const daysInMonth = new Date(year, month, 0).getDate();\r\n\r\n    return (\r\n      <div className=\"admin-container\">\r\n        <h2 className=\"title\">📑 Generate Points Report ({currentKey})</h2>\r\n\r\n        <div className=\"report-filters\">\r\n          <label>\r\n            Month:\r\n            <select value={month} onChange={(e) => setMonth(Number(e.target.value))}>\r\n              {[\r\n                \"January\",\"February\",\"March\",\"April\",\"May\",\"June\",\r\n                \"July\",\"August\",\"September\",\"October\",\"November\",\"December\"\r\n              ].map((m, i) => (\r\n                <option key={i} value={i + 1}>{m}</option>\r\n              ))}\r\n            </select>\r\n          </label>\r\n\r\n          <label>\r\n            Year:\r\n            <select value={year} onChange={(e) => setYear(Number(e.target.value))}>\r\n              {Array.from({ length: 6 }, (_, i) => 2023 + i).map((y) => (\r\n                <option key={y} value={y}>{y}</option>\r\n              ))}\r\n            </select>\r\n          </label>\r\n\r\n          <label>\r\n            From:\r\n            <select value={fromDay} onChange={(e) => setFromDay(Number(e.target.value))}>\r\n              {Array.from({ length: daysInMonth }, (_, i) => i + 1).map((d) => (\r\n                <option key={d} value={d}>{d}</option>\r\n              ))}\r\n            </select>\r\n          </label>\r\n\r\n          <label>\r\n            To:\r\n            <select value={toDay} onChange={(e) => setToDay(Number(e.target.value))}>\r\n              {Array.from({ length: daysInMonth }, (_, i) => i + 1).map((d) => (\r\n                <option key={d} value={d}>{d}</option>\r\n              ))}\r\n            </select>\r\n          </label>\r\n\r\n          <button\r\n            className=\"btn generate-btn\"\r\n            onClick={() => {\r\n              let fDay = fromDay;\r\n              let tDay = toDay;\r\n              if (fromDay > toDay) {\r\n                fDay = toDay;\r\n                tDay = fromDay;\r\n                setFromDay(fDay);\r\n                setToDay(tDay);\r\n              }\r\n              const f = `${year}-${String(month).padStart(2, \"0\")}-${String(fDay).padStart(2, \"0\")}`;\r\n              const t = `${year}-${String(month).padStart(2, \"0\")}-${String(tDay).padStart(2, \"0\")}`;\r\n              generateReport(f, t);\r\n            }}\r\n          >\r\n            Generate\r\n          </button>\r\n        </div>\r\n\r\n        {/* Exception section */}\r\n        <div className=\"exception-section\" style={{ marginTop: 16, padding: 12, border: \"1px solid #eee\", borderRadius: 8 }}>\r\n          <h3 style={{ margin: \"0 0 8px 0\" }}>⚠️ Exception Ranges (per user)</h3>\r\n          <div style={{ display: \"flex\", gap: 8, alignItems: \"center\", flexWrap: \"wrap\" }}>\r\n            <select value={exceptionUser} onChange={(e) => setExceptionUser(e.target.value)}>\r\n              <option value=\"\">-- Select Monthly User --</option>\r\n              {allUsers.filter(u => monthlyUsers.includes(u.email)).map(u => (\r\n                <option key={u.email} value={u.email}>{u.name || u.email}</option>\r\n              ))}\r\n            </select>\r\n\r\n            <input type=\"date\" value={exceptionFrom} onChange={(e) => setExceptionFrom(e.target.value)} />\r\n            <input type=\"date\" value={exceptionTo} onChange={(e) => setExceptionTo(e.target.value)} />\r\n            <button\r\n              className=\"btn\"\r\n              onClick={addException}\r\n            >\r\n              ➕ Add Exception\r\n            </button>\r\n          </div>\r\n\r\n          {exceptions.length > 0 && (\r\n            <ul style={{ marginTop: 12 }}>\r\n              {exceptions.map((ex, i) => (\r\n                <li key={i} style={{ marginBottom: 8 }}>\r\n                  <strong>{ex.email}</strong> — {ex.from} → {ex.to}\r\n                  <button className=\"btn reject-btn\" style={{ marginLeft: 10 }} onClick={() => removeException(i)}>❌ Remove</button>\r\n                </li>\r\n              ))}\r\n            </ul>\r\n          )}\r\n        </div>\r\n\r\n        {generated && (\r\n          <>\r\n            <table className=\"meal-table\" style={{ marginTop: 12 }}>\r\n              <thead>\r\n                <tr><th>Name</th><th>Total Points</th></tr>\r\n              </thead>\r\n              <tbody>\r\n                {Object.entries(userPoints).map(([name, points]) => (\r\n                  <tr key={name}><td>{name}</td><td>{points}</td></tr>\r\n                ))}\r\n              </tbody>\r\n            </table>\r\n\r\n            <div style={{ display: \"flex\", gap: 8, alignItems: \"center\", marginTop: 10 }}>\r\n              <button className=\"btn export-btn\" onClick={exportCSV}>⬇️ Download Range CSV</button>\r\n              <button className=\"btn export-btn\" onClick={downloadMonthlyUsers}>⬇️ Download Monthly Users</button>\r\n            </div>\r\n          </>\r\n        )}\r\n\r\n        <div style={{ marginTop: 18, borderTop: \"1px solid #ddd\", paddingTop: 12 }}>\r\n          <h3>📅 Export Single-Day Markings</h3>\r\n          <label className=\"single-day-label\">\r\n            Day:\r\n            <select className=\"single-day-date\" value={dailyDay} onChange={(e) => setDailyDay(Number(e.target.value))}>\r\n              {Array.from({ length: daysInMonth }, (_, i) => i + 1).map((d) => (\r\n                <option key={d} value={d}>{d}</option>\r\n              ))}\r\n            </select>\r\n          </label>\r\n          <button className=\"btn export-btn\" onClick={exportDailyMarkingCSV} style={{ marginLeft: 10 }}>\r\n            ⬇️ Download todays Marking\r\n          </button>\r\n        </div>\r\n\r\n        <div className=\"admin-actions\" style={{ marginTop: 14 }}>\r\n          <button className=\"btn\" onClick={() => setView(\"dashboard\")}>⬅️ Back</button>\r\n        </div>\r\n      </div>\r\n    );\r\n  }\r\n\r\n  // ---------- Meals page ----------\r\n  if (view === \"meals\") {\r\n    return (\r\n      <div className=\"admin-container\">\r\n        <h2 className=\"title\">🥘 Meal Counts (Next 8 Days)</h2>\r\n        <table className=\"meal-table\">\r\n          <thead><tr><th>Date</th><th>Breakfast</th><th>Lunch</th><th>Supper</th></tr></thead>\r\n          <tbody>\r\n            {Object.entries(mealCounts).map(([day, meals]) => (\r\n              <tr key={day}>\r\n                <td className=\"date-col\">{day}</td>\r\n                <td className={day === todayStr ? \"today-col\" : \"\"}>{meals.breakfast}</td>\r\n                <td className={day === todayStr ? \"today-col\" : \"\"}>{meals.lunch}</td>\r\n                <td className={day === todayStr ? \"today-col\" : \"\"}>{meals.supper}</td>\r\n              </tr>\r\n            ))}\r\n          </tbody>\r\n        </table>\r\n\r\n        <div className=\"admin-actions\">\r\n          <button className=\"btn\" onClick={() => setView(\"dashboard\")}>⬅️ Back</button>\r\n        </div>\r\n      </div>\r\n    );\r\n  }\r\n\r\n  // ---------- Dashboard ----------\r\n  const todayMeals = mealCounts[todayStr] || { breakfast: 0, lunch: 0, supper: 0 };\r\n\r\n  return (\r\n    <div className=\"admin-container\">\r\n      <h2 className=\"title\">📊 Admin Dashboard</h2>\r\n\r\n      <h3>🍽️ Today’s Meal Count</h3>\r\n      <div className=\"today-meals\">\r\n        <p>🍳 Breakfast: <strong>{todayMeals.breakfast}</strong></p>\r\n        <p>🥗 Lunch: <strong>{todayMeals.lunch}</strong></p>\r\n        <p>🍛 Supper: <strong>{todayMeals.supper}</strong></p>\r\n      </div>\r\n\r\n      <div className=\"admin-actions\">\r\n        <button className=\"btn points-btn\" onClick={goToPointSystem}>⚙️ Point System</button>\r\n        <button className=\"btn points-btn\" onClick={() => setView(\"points\")}>📑 Points Report</button>\r\n        <button className=\"btn points-btn\" onClick={() => setView(\"requests\")}>👥 User Requests</button>\r\n        <button className=\"btn points-btn\" onClick={() => setView(\"monthly\")}>👤 Manage Monthly Users</button>\r\n        <button className=\"btn points-btn\" onClick={() => setView(\"meals\")}>🥘 Meal Counts</button>\r\n        <button className=\"logout-btn\" onClick={onLogout}>Logout</button>\r\n      </div>\r\n    </div>\r\n  );\r\n}\r\n\r\nexport default AdminPage;\r\n"],"mappings":"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","ignoreList":[]},"metadata":{},"sourceType":"module","externalDependencies":[]}