{"ast":null,"code":"var _jsxFileName = \"C:\\\\Users\\\\mohdn\\\\OneDrive\\\\Desktop\\\\mess-app-starter\\\\src\\\\AdminPage.js\",\n  _s = $RefreshSig$();\n// AdminPage.js\nimport React, { useEffect, useState } from \"react\";\nimport { db } from \"./firebase\";\nimport { collection, getDocs, doc, getDoc, setDoc } from \"firebase/firestore\";\nimport \"./AdminPage.css\";\nimport { jsxDEV as _jsxDEV, Fragment as _Fragment } from \"react/jsx-dev-runtime\";\nfunction AdminPage({\n  onLogout,\n  goToPointSystem\n}) {\n  _s();\n  const [mealCounts, setMealCounts] = useState({});\n  const [userPoints, setUserPoints] = useState({});\n  const [loading, setLoading] = useState(true);\n  const [fromDate, setFromDate] = useState(\"\");\n  const [toDate, setToDate] = useState(\"\");\n  const [generated, setGenerated] = useState(false);\n\n  // default rules (admin default)\n  const defaultSystem = {\n    X: 1,\n    // all marked\n    \"0\": 0,\n    // none marked\n    B: 0.25,\n    L: 0.35,\n    S: 0.45,\n    \"B/L\": 0.65,\n    \"B/S\": 0.75,\n    \"L/S\": 0.85\n  };\n  const [pointSystem, setPointSystem] = useState(() => normalizePointSystem(defaultSystem));\n  const [allUsers, setAllUsers] = useState([]);\n\n  // --- helpers ---------------------------------------------------------------\n  // canonicalizes keys so pair orders become consistent (B/L not L/B)\n  const canonicalKey = k => {\n    if (!k || typeof k !== \"string\") return k;\n    if (k === \"X\" || k === \"0\") return k;\n    if (k.includes(\"/\")) {\n      const order = [\"B\", \"L\", \"S\"];\n      const parts = k.split(\"/\").map(p => p.trim().toUpperCase());\n      parts.sort((a, b) => order.indexOf(a) - order.indexOf(b));\n      return parts.join(\"/\");\n    }\n    return k.toUpperCase();\n  };\n\n  // Normalize an object of key->value (strings or numbers) into numeric canonical keys\n  function normalizePointSystem(raw = {}) {\n    var _norm$X, _norm$;\n    const base = {\n      ...defaultSystem,\n      ...raw\n    }; // fallback to defaults\n    const norm = {};\n    Object.keys(base).forEach(k => {\n      const ck = canonicalKey(k);\n      const v = base[k];\n      const num = typeof v === \"number\" ? v : parseFloat(v);\n      norm[ck] = isNaN(num) ? 0 : num;\n    });\n    // ensure canonical pair keys exist (in case admin saved reversed order)\n    [\"B/L\", \"B/S\", \"L/S\"].forEach(k => {\n      if (norm[k] === undefined) {\n        var _ref, _norm$rev;\n        const rev = k.split(\"/\").reverse().join(\"/\");\n        norm[k] = (_ref = (_norm$rev = norm[rev]) !== null && _norm$rev !== void 0 ? _norm$rev : norm[k]) !== null && _ref !== void 0 ? _ref : 0;\n      }\n    });\n    // ensure X and 0 exist\n    norm[\"X\"] = (_norm$X = norm[\"X\"]) !== null && _norm$X !== void 0 ? _norm$X : defaultSystem[\"X\"];\n    norm[\"0\"] = (_norm$ = norm[\"0\"]) !== null && _norm$ !== void 0 ? _norm$ : defaultSystem[\"0\"];\n    return norm;\n  }\n\n  // --- load settings + users + meal counts (next 8 days) --------------------\n  useEffect(() => {\n    const fetchAll = async () => {\n      try {\n        // load point system from Firestore and normalize\n        const settingsRef = doc(db, \"settings\", \"points\");\n        const settingsSnap = await getDoc(settingsRef);\n        let loadedSettings = null;\n        if (settingsSnap.exists()) {\n          loadedSettings = settingsSnap.data();\n        } else {\n          // create default record if missing\n          await setDoc(settingsRef, defaultSystem);\n          loadedSettings = defaultSystem;\n        }\n        const normalized = normalizePointSystem(loadedSettings);\n        setPointSystem(normalized);\n\n        // load all users\n        const usersRef = collection(db, \"users\");\n        const querySnapshot = await getDocs(usersRef);\n        const all = [];\n        const counts = {};\n        const today = new Date();\n\n        // next 8 days (today + 7)\n        const nextDays = [];\n        for (let i = 0; i < 8; i++) {\n          const d = new Date(today);\n          d.setDate(today.getDate() + i);\n          const dateStr = d.toISOString().split(\"T\")[0];\n          nextDays.push(dateStr);\n          counts[dateStr] = {\n            breakfast: 0,\n            lunch: 0,\n            supper: 0\n          };\n        }\n        querySnapshot.forEach(docSnap => {\n          const data = docSnap.data();\n          all.push(data);\n          const userMeals = data.meals || {};\n          nextDays.forEach(day => {\n            const meals = userMeals[day];\n            if (meals) {\n              // if user explicitly stored that day, count stored values\n              [\"breakfast\", \"lunch\", \"supper\"].forEach(meal => {\n                if (meals[meal]) counts[day][meal] += 1;\n              });\n            } else {\n              // if user has no stored entry for that day:\n              // — treat future days as MARKED (count them), as per your requirement\n              // — past/today default handled elsewhere (students cannot change past/today)\n              const todayStr = new Date().toISOString().split(\"T\")[0];\n              if (day > todayStr) {\n                counts[day].breakfast += 1;\n                counts[day].lunch += 1;\n                counts[day].supper += 1;\n              }\n            }\n          });\n        });\n        setAllUsers(all);\n        setMealCounts(counts);\n      } catch (err) {\n        console.error(\"Admin data error:\", err);\n      } finally {\n        setLoading(false);\n      }\n    };\n    fetchAll();\n  }, []); // run once\n\n  // --- generate report for selected date range -------------------------------\n  const generateReport = () => {\n    if (!fromDate || !toDate) {\n      alert(\"⚠️ Please select both From and To dates!\");\n      return;\n    }\n    const points = {};\n    const todayStr = new Date().toISOString().split(\"T\")[0];\n\n    // iterate users\n    allUsers.forEach(user => {\n      const email = user.email || \"Unknown\";\n      const userMeals = user.meals || {};\n      let totalPoints = 0;\n\n      // iterate days in range inclusive\n      const start = new Date(fromDate);\n      const end = new Date(toDate);\n      start.setHours(0, 0, 0, 0);\n      end.setHours(0, 0, 0, 0);\n      for (let d = new Date(start); d <= end; d.setDate(d.getDate() + 1)) {\n        var _ref2, _pointSystem$key;\n        const day = d.toISOString().split(\"T\")[0];\n\n        // If day entry is missing in Firestore, apply default:\n        // - future days (relative to today) => assume MARKED (true)\n        // - past & today => assume UNMARKED (false)\n        let meals = userMeals[day];\n        if (!meals) {\n          meals = day > todayStr ? {\n            breakfast: true,\n            lunch: true,\n            supper: true\n          } : {\n            breakfast: false,\n            lunch: false,\n            supper: false\n          };\n        }\n\n        // Build key from MARKED meals in canonical order B, L, S\n        const marked = {\n          B: !!meals.breakfast,\n          L: !!meals.lunch,\n          S: !!meals.supper\n        };\n        const markedArr = [\"B\", \"L\", \"S\"].filter(m => marked[m]);\n        let key;\n        if (markedArr.length === 3) key = \"X\"; // all marked\n        else if (markedArr.length === 0) key = \"0\"; // none marked\n        else key = markedArr.join(\"/\"); // e.g. \"B/L\", \"B/S\", \"L/S\" (canonical order)\n\n        const addVal = (_ref2 = (_pointSystem$key = pointSystem[key]) !== null && _pointSystem$key !== void 0 ? _pointSystem$key : defaultSystem[key]) !== null && _ref2 !== void 0 ? _ref2 : 0;\n        totalPoints += addVal;\n      }\n      points[email] = totalPoints.toFixed(2);\n    });\n    setUserPoints(points);\n    setGenerated(true);\n  };\n\n  // --- export CSV -----------------------------------------------------------\n  const exportCSV = () => {\n    const rows = [[\"Email\", \"Points\"]];\n    Object.entries(userPoints).forEach(([email, pts]) => {\n      rows.push([email, pts]);\n    });\n    const csvContent = rows.map(r => r.join(\",\")).join(\"\\n\");\n    const blob = new Blob([csvContent], {\n      type: \"text/csv;charset=utf-8;\"\n    });\n    const url = URL.createObjectURL(blob);\n    const a = document.createElement(\"a\");\n    a.href = url;\n    a.setAttribute(\"download\", `points_${fromDate}_to_${toDate}.csv`);\n    document.body.appendChild(a);\n    a.click();\n    document.body.removeChild(a);\n  };\n  if (loading) return /*#__PURE__*/_jsxDEV(\"h2\", {\n    className: \"loading\",\n    children: \"Loading data...\"\n  }, void 0, false, {\n    fileName: _jsxFileName,\n    lineNumber: 219,\n    columnNumber: 23\n  }, this);\n\n  // --- render ----------------------------------------------------------------\n  return /*#__PURE__*/_jsxDEV(\"div\", {\n    className: \"admin-container\",\n    children: [/*#__PURE__*/_jsxDEV(\"h2\", {\n      className: \"title\",\n      children: \"\\uD83D\\uDCCA Admin Dashboard\"\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 224,\n      columnNumber: 7\n    }, this), /*#__PURE__*/_jsxDEV(\"h3\", {\n      children: \"\\uD83E\\uDD58 Meal Counts (Next 8 Days)\"\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 226,\n      columnNumber: 7\n    }, this), /*#__PURE__*/_jsxDEV(\"table\", {\n      className: \"meal-table\",\n      children: [/*#__PURE__*/_jsxDEV(\"thead\", {\n        children: /*#__PURE__*/_jsxDEV(\"tr\", {\n          children: [/*#__PURE__*/_jsxDEV(\"th\", {\n            className: \"date-col\",\n            children: \"Date\"\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 230,\n            columnNumber: 13\n          }, this), /*#__PURE__*/_jsxDEV(\"th\", {\n            children: \"\\uD83C\\uDF73 Breakfast\"\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 231,\n            columnNumber: 13\n          }, this), /*#__PURE__*/_jsxDEV(\"th\", {\n            children: \"\\uD83E\\uDD57 Lunch\"\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 232,\n            columnNumber: 13\n          }, this), /*#__PURE__*/_jsxDEV(\"th\", {\n            children: \"\\uD83C\\uDF5B Supper\"\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 233,\n            columnNumber: 13\n          }, this)]\n        }, void 0, true, {\n          fileName: _jsxFileName,\n          lineNumber: 229,\n          columnNumber: 11\n        }, this)\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 228,\n        columnNumber: 9\n      }, this), /*#__PURE__*/_jsxDEV(\"tbody\", {\n        children: Object.entries(mealCounts).map(([day, meals]) => /*#__PURE__*/_jsxDEV(\"tr\", {\n          children: [/*#__PURE__*/_jsxDEV(\"td\", {\n            className: \"date-col\",\n            children: day\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 239,\n            columnNumber: 15\n          }, this), /*#__PURE__*/_jsxDEV(\"td\", {\n            className: day === new Date().toISOString().split(\"T\")[0] ? \"today-col\" : \"\",\n            children: meals.breakfast\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 240,\n            columnNumber: 15\n          }, this), /*#__PURE__*/_jsxDEV(\"td\", {\n            className: day === new Date().toISOString().split(\"T\")[0] ? \"today-col\" : \"\",\n            children: meals.lunch\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 243,\n            columnNumber: 15\n          }, this), /*#__PURE__*/_jsxDEV(\"td\", {\n            className: day === new Date().toISOString().split(\"T\")[0] ? \"today-col\" : \"\",\n            children: meals.supper\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 246,\n            columnNumber: 15\n          }, this)]\n        }, day, true, {\n          fileName: _jsxFileName,\n          lineNumber: 238,\n          columnNumber: 13\n        }, this))\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 236,\n        columnNumber: 9\n      }, this)]\n    }, void 0, true, {\n      fileName: _jsxFileName,\n      lineNumber: 227,\n      columnNumber: 7\n    }, this), /*#__PURE__*/_jsxDEV(\"h3\", {\n      children: \"Generate Points Report\"\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 254,\n      columnNumber: 7\n    }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n      className: \"report-filters\",\n      children: [/*#__PURE__*/_jsxDEV(\"label\", {\n        children: [\"From:\", \" \", /*#__PURE__*/_jsxDEV(\"input\", {\n          type: \"date\",\n          value: fromDate,\n          onChange: e => setFromDate(e.target.value)\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 258,\n          columnNumber: 11\n        }, this)]\n      }, void 0, true, {\n        fileName: _jsxFileName,\n        lineNumber: 256,\n        columnNumber: 9\n      }, this), /*#__PURE__*/_jsxDEV(\"label\", {\n        children: [\"To:\", \" \", /*#__PURE__*/_jsxDEV(\"input\", {\n          type: \"date\",\n          value: toDate,\n          onChange: e => setToDate(e.target.value)\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 262,\n          columnNumber: 11\n        }, this)]\n      }, void 0, true, {\n        fileName: _jsxFileName,\n        lineNumber: 260,\n        columnNumber: 9\n      }, this), /*#__PURE__*/_jsxDEV(\"button\", {\n        className: \"btn generate-btn\",\n        onClick: generateReport,\n        children: \"Generate\"\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 264,\n        columnNumber: 9\n      }, this)]\n    }, void 0, true, {\n      fileName: _jsxFileName,\n      lineNumber: 255,\n      columnNumber: 7\n    }, this), generated && /*#__PURE__*/_jsxDEV(_Fragment, {\n      children: [/*#__PURE__*/_jsxDEV(\"table\", {\n        className: \"meal-table\",\n        children: [/*#__PURE__*/_jsxDEV(\"thead\", {\n          children: /*#__PURE__*/_jsxDEV(\"tr\", {\n            children: [/*#__PURE__*/_jsxDEV(\"th\", {\n              children: \"Email\"\n            }, void 0, false, {\n              fileName: _jsxFileName,\n              lineNumber: 274,\n              columnNumber: 17\n            }, this), /*#__PURE__*/_jsxDEV(\"th\", {\n              children: \"Total Points\"\n            }, void 0, false, {\n              fileName: _jsxFileName,\n              lineNumber: 275,\n              columnNumber: 17\n            }, this)]\n          }, void 0, true, {\n            fileName: _jsxFileName,\n            lineNumber: 273,\n            columnNumber: 15\n          }, this)\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 272,\n          columnNumber: 13\n        }, this), /*#__PURE__*/_jsxDEV(\"tbody\", {\n          children: Object.entries(userPoints).map(([email, points]) => /*#__PURE__*/_jsxDEV(\"tr\", {\n            children: [/*#__PURE__*/_jsxDEV(\"td\", {\n              children: email\n            }, void 0, false, {\n              fileName: _jsxFileName,\n              lineNumber: 281,\n              columnNumber: 19\n            }, this), /*#__PURE__*/_jsxDEV(\"td\", {\n              children: points\n            }, void 0, false, {\n              fileName: _jsxFileName,\n              lineNumber: 282,\n              columnNumber: 19\n            }, this)]\n          }, email, true, {\n            fileName: _jsxFileName,\n            lineNumber: 280,\n            columnNumber: 17\n          }, this))\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 278,\n          columnNumber: 13\n        }, this)]\n      }, void 0, true, {\n        fileName: _jsxFileName,\n        lineNumber: 271,\n        columnNumber: 11\n      }, this), /*#__PURE__*/_jsxDEV(\"button\", {\n        className: \"btn export-btn\",\n        onClick: exportCSV,\n        children: \"\\u2B07\\uFE0F Download CSV\"\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 288,\n        columnNumber: 11\n      }, this)]\n    }, void 0, true), /*#__PURE__*/_jsxDEV(\"div\", {\n      className: \"admin-actions\",\n      children: [/*#__PURE__*/_jsxDEV(\"button\", {\n        className: \"btn points-btn\",\n        onClick: goToPointSystem,\n        children: \"\\u2699\\uFE0F Point System\"\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 295,\n        columnNumber: 9\n      }, this), /*#__PURE__*/_jsxDEV(\"button\", {\n        className: \"logout-btn\",\n        onClick: onLogout,\n        children: \"Logout\"\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 298,\n        columnNumber: 9\n      }, this)]\n    }, void 0, true, {\n      fileName: _jsxFileName,\n      lineNumber: 294,\n      columnNumber: 7\n    }, this)]\n  }, void 0, true, {\n    fileName: _jsxFileName,\n    lineNumber: 223,\n    columnNumber: 5\n  }, this);\n}\n_s(AdminPage, \"rqMJQ52XqJxO+dKviytrR6zReXU=\");\n_c = AdminPage;\nexport default AdminPage;\nvar _c;\n$RefreshReg$(_c, \"AdminPage\");","map":{"version":3,"names":["React","useEffect","useState","db","collection","getDocs","doc","getDoc","setDoc","jsxDEV","_jsxDEV","Fragment","_Fragment","AdminPage","onLogout","goToPointSystem","_s","mealCounts","setMealCounts","userPoints","setUserPoints","loading","setLoading","fromDate","setFromDate","toDate","setToDate","generated","setGenerated","defaultSystem","X","B","L","S","pointSystem","setPointSystem","normalizePointSystem","allUsers","setAllUsers","canonicalKey","k","includes","order","parts","split","map","p","trim","toUpperCase","sort","a","b","indexOf","join","raw","_norm$X","_norm$","base","norm","Object","keys","forEach","ck","v","num","parseFloat","isNaN","undefined","_ref","_norm$rev","rev","reverse","fetchAll","settingsRef","settingsSnap","loadedSettings","exists","data","normalized","usersRef","querySnapshot","all","counts","today","Date","nextDays","i","d","setDate","getDate","dateStr","toISOString","push","breakfast","lunch","supper","docSnap","userMeals","meals","day","meal","todayStr","err","console","error","generateReport","alert","points","user","email","totalPoints","start","end","setHours","_ref2","_pointSystem$key","marked","markedArr","filter","m","key","length","addVal","toFixed","exportCSV","rows","entries","pts","csvContent","r","blob","Blob","type","url","URL","createObjectURL","document","createElement","href","setAttribute","body","appendChild","click","removeChild","className","children","fileName","_jsxFileName","lineNumber","columnNumber","value","onChange","e","target","onClick","_c","$RefreshReg$"],"sources":["C:/Users/mohdn/OneDrive/Desktop/mess-app-starter/src/AdminPage.js"],"sourcesContent":["// AdminPage.js\r\nimport React, { useEffect, useState } from \"react\";\r\nimport { db } from \"./firebase\";\r\nimport { collection, getDocs, doc, getDoc, setDoc } from \"firebase/firestore\";\r\nimport \"./AdminPage.css\";\r\n\r\nfunction AdminPage({ onLogout, goToPointSystem }) {\r\n  const [mealCounts, setMealCounts] = useState({});\r\n  const [userPoints, setUserPoints] = useState({});\r\n  const [loading, setLoading] = useState(true);\r\n\r\n  const [fromDate, setFromDate] = useState(\"\");\r\n  const [toDate, setToDate] = useState(\"\");\r\n  const [generated, setGenerated] = useState(false);\r\n\r\n  // default rules (admin default)\r\n  const defaultSystem = {\r\n    X: 1,     // all marked\r\n    \"0\": 0,   // none marked\r\n    B: 0.25,\r\n    L: 0.35,\r\n    S: 0.45,\r\n    \"B/L\": 0.65,\r\n    \"B/S\": 0.75,\r\n    \"L/S\": 0.85,\r\n  };\r\n\r\n  const [pointSystem, setPointSystem] = useState(() => normalizePointSystem(defaultSystem));\r\n  const [allUsers, setAllUsers] = useState([]);\r\n\r\n  // --- helpers ---------------------------------------------------------------\r\n  // canonicalizes keys so pair orders become consistent (B/L not L/B)\r\n  const canonicalKey = (k) => {\r\n    if (!k || typeof k !== \"string\") return k;\r\n    if (k === \"X\" || k === \"0\") return k;\r\n    if (k.includes(\"/\")) {\r\n      const order = [\"B\", \"L\", \"S\"];\r\n      const parts = k.split(\"/\").map((p) => p.trim().toUpperCase());\r\n      parts.sort((a, b) => order.indexOf(a) - order.indexOf(b));\r\n      return parts.join(\"/\");\r\n    }\r\n    return k.toUpperCase();\r\n  };\r\n\r\n  // Normalize an object of key->value (strings or numbers) into numeric canonical keys\r\n  function normalizePointSystem(raw = {}) {\r\n    const base = { ...defaultSystem, ...raw }; // fallback to defaults\r\n    const norm = {};\r\n    Object.keys(base).forEach((k) => {\r\n      const ck = canonicalKey(k);\r\n      const v = base[k];\r\n      const num = typeof v === \"number\" ? v : parseFloat(v);\r\n      norm[ck] = isNaN(num) ? 0 : num;\r\n    });\r\n    // ensure canonical pair keys exist (in case admin saved reversed order)\r\n    [\"B/L\", \"B/S\", \"L/S\"].forEach((k) => {\r\n      if (norm[k] === undefined) {\r\n        const rev = k.split(\"/\").reverse().join(\"/\");\r\n        norm[k] = norm[rev] ?? norm[k] ?? 0;\r\n      }\r\n    });\r\n    // ensure X and 0 exist\r\n    norm[\"X\"] = norm[\"X\"] ?? defaultSystem[\"X\"];\r\n    norm[\"0\"] = norm[\"0\"] ?? defaultSystem[\"0\"];\r\n    return norm;\r\n  }\r\n\r\n  // --- load settings + users + meal counts (next 8 days) --------------------\r\n  useEffect(() => {\r\n    const fetchAll = async () => {\r\n      try {\r\n        // load point system from Firestore and normalize\r\n        const settingsRef = doc(db, \"settings\", \"points\");\r\n        const settingsSnap = await getDoc(settingsRef);\r\n        let loadedSettings = null;\r\n        if (settingsSnap.exists()) {\r\n          loadedSettings = settingsSnap.data();\r\n        } else {\r\n          // create default record if missing\r\n          await setDoc(settingsRef, defaultSystem);\r\n          loadedSettings = defaultSystem;\r\n        }\r\n        const normalized = normalizePointSystem(loadedSettings);\r\n        setPointSystem(normalized);\r\n\r\n        // load all users\r\n        const usersRef = collection(db, \"users\");\r\n        const querySnapshot = await getDocs(usersRef);\r\n\r\n        const all = [];\r\n        const counts = {};\r\n        const today = new Date();\r\n\r\n        // next 8 days (today + 7)\r\n        const nextDays = [];\r\n        for (let i = 0; i < 8; i++) {\r\n          const d = new Date(today);\r\n          d.setDate(today.getDate() + i);\r\n          const dateStr = d.toISOString().split(\"T\")[0];\r\n          nextDays.push(dateStr);\r\n          counts[dateStr] = { breakfast: 0, lunch: 0, supper: 0 };\r\n        }\r\n\r\n        querySnapshot.forEach((docSnap) => {\r\n          const data = docSnap.data();\r\n          all.push(data);\r\n\r\n          const userMeals = data.meals || {};\r\n          nextDays.forEach((day) => {\r\n            const meals = userMeals[day];\r\n            if (meals) {\r\n              // if user explicitly stored that day, count stored values\r\n              [\"breakfast\", \"lunch\", \"supper\"].forEach((meal) => {\r\n                if (meals[meal]) counts[day][meal] += 1;\r\n              });\r\n            } else {\r\n              // if user has no stored entry for that day:\r\n              // — treat future days as MARKED (count them), as per your requirement\r\n              // — past/today default handled elsewhere (students cannot change past/today)\r\n              const todayStr = new Date().toISOString().split(\"T\")[0];\r\n              if (day > todayStr) {\r\n                counts[day].breakfast += 1;\r\n                counts[day].lunch += 1;\r\n                counts[day].supper += 1;\r\n              }\r\n            }\r\n          });\r\n        });\r\n\r\n        setAllUsers(all);\r\n        setMealCounts(counts);\r\n      } catch (err) {\r\n        console.error(\"Admin data error:\", err);\r\n      } finally {\r\n        setLoading(false);\r\n      }\r\n    };\r\n\r\n    fetchAll();\r\n  }, []); // run once\r\n\r\n  // --- generate report for selected date range -------------------------------\r\n  const generateReport = () => {\r\n    if (!fromDate || !toDate) {\r\n      alert(\"⚠️ Please select both From and To dates!\");\r\n      return;\r\n    }\r\n\r\n    const points = {};\r\n    const todayStr = new Date().toISOString().split(\"T\")[0];\r\n\r\n    // iterate users\r\n    allUsers.forEach((user) => {\r\n      const email = user.email || \"Unknown\";\r\n      const userMeals = user.meals || {};\r\n      let totalPoints = 0;\r\n\r\n      // iterate days in range inclusive\r\n      const start = new Date(fromDate);\r\n      const end = new Date(toDate);\r\n      start.setHours(0, 0, 0, 0);\r\n      end.setHours(0, 0, 0, 0);\r\n\r\n      for (let d = new Date(start); d <= end; d.setDate(d.getDate() + 1)) {\r\n        const day = d.toISOString().split(\"T\")[0];\r\n\r\n        // If day entry is missing in Firestore, apply default:\r\n        // - future days (relative to today) => assume MARKED (true)\r\n        // - past & today => assume UNMARKED (false)\r\n        let meals = userMeals[day];\r\n        if (!meals) {\r\n          meals = day > todayStr\r\n            ? { breakfast: true, lunch: true, supper: true }\r\n            : { breakfast: false, lunch: false, supper: false };\r\n        }\r\n\r\n        // Build key from MARKED meals in canonical order B, L, S\r\n        const marked = {\r\n          B: !!meals.breakfast,\r\n          L: !!meals.lunch,\r\n          S: !!meals.supper,\r\n        };\r\n        const markedArr = [\"B\", \"L\", \"S\"].filter((m) => marked[m]);\r\n        let key;\r\n        if (markedArr.length === 3) key = \"X\"; // all marked\r\n        else if (markedArr.length === 0) key = \"0\"; // none marked\r\n        else key = markedArr.join(\"/\"); // e.g. \"B/L\", \"B/S\", \"L/S\" (canonical order)\r\n\r\n        const addVal = pointSystem[key] ?? defaultSystem[key] ?? 0;\r\n        totalPoints += addVal;\r\n      }\r\n\r\n      points[email] = totalPoints.toFixed(2);\r\n    });\r\n\r\n    setUserPoints(points);\r\n    setGenerated(true);\r\n  };\r\n\r\n  // --- export CSV -----------------------------------------------------------\r\n  const exportCSV = () => {\r\n    const rows = [[\"Email\", \"Points\"]];\r\n    Object.entries(userPoints).forEach(([email, pts]) => {\r\n      rows.push([email, pts]);\r\n    });\r\n\r\n    const csvContent = rows.map((r) => r.join(\",\")).join(\"\\n\");\r\n    const blob = new Blob([csvContent], { type: \"text/csv;charset=utf-8;\" });\r\n\r\n    const url = URL.createObjectURL(blob);\r\n    const a = document.createElement(\"a\");\r\n    a.href = url;\r\n    a.setAttribute(\"download\", `points_${fromDate}_to_${toDate}.csv`);\r\n    document.body.appendChild(a);\r\n    a.click();\r\n    document.body.removeChild(a);\r\n  };\r\n\r\n  if (loading) return <h2 className=\"loading\">Loading data...</h2>;\r\n\r\n  // --- render ----------------------------------------------------------------\r\n  return (\r\n    <div className=\"admin-container\">\r\n      <h2 className=\"title\">📊 Admin Dashboard</h2>\r\n\r\n      <h3>🥘 Meal Counts (Next 8 Days)</h3>\r\n      <table className=\"meal-table\">\r\n        <thead>\r\n          <tr>\r\n            <th className=\"date-col\">Date</th>\r\n            <th>🍳 Breakfast</th>\r\n            <th>🥗 Lunch</th>\r\n            <th>🍛 Supper</th>\r\n          </tr>\r\n        </thead>\r\n        <tbody>\r\n          {Object.entries(mealCounts).map(([day, meals]) => (\r\n            <tr key={day}>\r\n              <td className=\"date-col\">{day}</td>\r\n              <td className={day === new Date().toISOString().split(\"T\")[0] ? \"today-col\" : \"\"}>\r\n                {meals.breakfast}\r\n              </td>\r\n              <td className={day === new Date().toISOString().split(\"T\")[0] ? \"today-col\" : \"\"}>\r\n                {meals.lunch}\r\n              </td>\r\n              <td className={day === new Date().toISOString().split(\"T\")[0] ? \"today-col\" : \"\"}>\r\n                {meals.supper}\r\n              </td>\r\n            </tr>\r\n          ))}\r\n        </tbody>\r\n      </table>\r\n\r\n      <h3>Generate Points Report</h3>\r\n      <div className=\"report-filters\">\r\n        <label>\r\n          From:{\" \"}\r\n          <input type=\"date\" value={fromDate} onChange={(e) => setFromDate(e.target.value)} />\r\n        </label>\r\n        <label>\r\n          To:{\" \"}\r\n          <input type=\"date\" value={toDate} onChange={(e) => setToDate(e.target.value)} />\r\n        </label>\r\n        <button className=\"btn generate-btn\" onClick={generateReport}>\r\n          Generate\r\n        </button>\r\n      </div>\r\n\r\n      {generated && (\r\n        <>\r\n          <table className=\"meal-table\">\r\n            <thead>\r\n              <tr>\r\n                <th>Email</th>\r\n                <th>Total Points</th>\r\n              </tr>\r\n            </thead>\r\n            <tbody>\r\n              {Object.entries(userPoints).map(([email, points]) => (\r\n                <tr key={email}>\r\n                  <td>{email}</td>\r\n                  <td>{points}</td>\r\n                </tr>\r\n              ))}\r\n            </tbody>\r\n          </table>\r\n\r\n          <button className=\"btn export-btn\" onClick={exportCSV}>\r\n            ⬇️ Download CSV\r\n          </button>\r\n        </>\r\n      )}\r\n\r\n      <div className=\"admin-actions\">\r\n        <button className=\"btn points-btn\" onClick={goToPointSystem}>\r\n          ⚙️ Point System\r\n        </button>\r\n        <button className=\"logout-btn\" onClick={onLogout}>\r\n          Logout\r\n        </button>\r\n      </div>\r\n    </div>\r\n  );\r\n}\r\n\r\nexport default AdminPage;\r\n"],"mappings":"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","ignoreList":[]},"metadata":{},"sourceType":"module","externalDependencies":[]}