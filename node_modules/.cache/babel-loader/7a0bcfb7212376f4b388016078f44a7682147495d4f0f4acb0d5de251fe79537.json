{"ast":null,"code":"var _jsxFileName = \"C:\\\\Users\\\\mohdn\\\\OneDrive\\\\Desktop\\\\mess-app-starter\\\\src\\\\AdminPage.js\",\n  _s = $RefreshSig$();\n// AdminPage.js\nimport React, { useEffect, useState } from \"react\";\nimport { db } from \"./firebase\";\nimport { collection, getDocs, doc, getDoc, setDoc, updateDoc, query, where } from \"firebase/firestore\";\nimport \"./AdminPage.css\";\nimport { jsxDEV as _jsxDEV, Fragment as _Fragment } from \"react/jsx-dev-runtime\";\nfunction AdminPage({\n  onLogout,\n  goToPointSystem\n}) {\n  _s();\n  const [mealCounts, setMealCounts] = useState({});\n  const [userPoints, setUserPoints] = useState({});\n  const [userMarks, setUserMarks] = useState({});\n  const [loading, setLoading] = useState(true);\n  const [fromDate, setFromDate] = useState(\"\");\n  const [toDate, setToDate] = useState(\"\");\n  const [generated, setGenerated] = useState(false);\n  const [allUsers, setAllUsers] = useState([]);\n  const [view, setView] = useState(\"dashboard\");\n  const [month, setMonth] = useState(new Date().getMonth() + 1);\n  const [year, setYear] = useState(new Date().getFullYear());\n  const [fromDay, setFromDay] = useState(1);\n  const [toDay, setToDay] = useState(1);\n  const [dailyDay, setDailyDay] = useState(new Date().getDate());\n  const defaultSystem = {\n    X: 1,\n    \"0\": 0,\n    B: 0.25,\n    L: 0.35,\n    S: 0.45,\n    \"B/L\": 0.65,\n    \"B/S\": 0.75,\n    \"L/S\": 0.85\n  };\n  const [pointSystem, setPointSystem] = useState(defaultSystem);\n  const [generatedRange, setGeneratedRange] = useState({\n    from: \"\",\n    to: \"\"\n  });\n  const todayStr = new Date().toISOString().split(\"T\")[0];\n\n  // --- monthly users state ---\n  const [monthlyUsers, setMonthlyUsers] = useState([]);\n  const currentKey = `${year}-${String(month).padStart(2, \"0\")}`;\n\n  // Fetch settings + users + meal counts\n  useEffect(() => {\n    const fetchAll = async () => {\n      try {\n        const settingsRef = doc(db, \"settings\", \"points\");\n        const settingsSnap = await getDoc(settingsRef);\n        if (settingsSnap.exists()) setPointSystem(settingsSnap.data());else await setDoc(settingsRef, defaultSystem);\n        const usersRef = collection(db, \"users\");\n        const querySnapshot = await getDocs(usersRef);\n        const all = [];\n        const counts = {};\n        const today = new Date();\n        const nextDays = [];\n        for (let i = 0; i < 8; i++) {\n          const d = new Date(today);\n          d.setDate(today.getDate() + i);\n          const dateStr = d.toISOString().split(\"T\")[0];\n          nextDays.push(dateStr);\n          counts[dateStr] = {\n            breakfast: 0,\n            lunch: 0,\n            supper: 0\n          };\n        }\n        querySnapshot.forEach(docSnap => {\n          const data = docSnap.data();\n          all.push(data);\n          const userMeals = data.meals || {};\n          nextDays.forEach(day => {\n            const meals = userMeals[day];\n            if (meals) {\n              [\"breakfast\", \"lunch\", \"supper\"].forEach(meal => {\n                if (meals[meal]) counts[day][meal] += 1;\n              });\n            } else if (day > todayStr) {\n              counts[day].breakfast += 1;\n              counts[day].lunch += 1;\n              counts[day].supper += 1;\n            }\n          });\n        });\n        setAllUsers(all);\n        setMealCounts(counts);\n      } catch (err) {\n        console.error(\"Admin data error:\", err);\n      } finally {\n        setLoading(false);\n      }\n    };\n    fetchAll();\n  }, []);\n\n  // Load monthly users list\n  useEffect(() => {\n    const loadMonthlyUsers = async () => {\n      const ref = doc(db, \"monthlyUsers\", currentKey);\n      const snap = await getDoc(ref);\n      if (snap.exists()) setMonthlyUsers(snap.data().users || []);else setMonthlyUsers([]);\n    };\n    loadMonthlyUsers();\n  }, [year, month, currentKey]);\n\n  // Add user to month\n  const addUserToMonth = async email => {\n    try {\n      const ref = doc(db, \"monthlyUsers\", currentKey);\n      const snap = await getDoc(ref);\n      let users = snap.exists() ? snap.data().users || [] : [];\n      if (!users.includes(email)) users.push(email);\n      await setDoc(ref, {\n        users\n      });\n      setMonthlyUsers(users);\n      alert(`✅ Added ${email} to ${currentKey}`);\n    } catch (err) {\n      console.error(\"Error adding user to month:\", err);\n    }\n  };\n\n  // Download monthly users CSV\n  const downloadMonthlyUsers = async () => {\n    const ref = doc(db, \"monthlyUsers\", currentKey);\n    const snap = await getDoc(ref);\n    if (!snap.exists()) {\n      alert(\"⚠️ No users found for this month\");\n      return;\n    }\n    const users = snap.data().users || [];\n    const rows = [[\"Email\"]];\n    users.forEach(u => rows.push([u]));\n    const csvContent = rows.map(r => r.join(\",\")).join(\"\\n\");\n    const blob = new Blob([csvContent], {\n      type: \"text/csv;charset=utf-8;\"\n    });\n    const url = URL.createObjectURL(blob);\n    const a = document.createElement(\"a\");\n    a.href = url;\n    a.setAttribute(\"download\", `monthly_users_${currentKey}.csv`);\n    document.body.appendChild(a);\n    a.click();\n    document.body.removeChild(a);\n  };\n\n  // Helper\n  const buildDaysArray = (from, to) => {\n    const arr = [];\n    const s = new Date(from);\n    const e = new Date(to);\n    for (let d = new Date(s.getTime()); d.getTime() <= e.getTime(); d.setDate(d.getDate() + 1)) {\n      arr.push(d.toISOString().split(\"T\")[0]);\n    }\n    return arr;\n  };\n\n  // Generate report (only monthly users)\n  const generateReport = (f, t) => {\n    const from = f || fromDate;\n    const to = t || toDate;\n    if (!from || !to) {\n      alert(\"⚠️ Please select both From and To dates!\");\n      return;\n    }\n    if (monthlyUsers.length === 0) {\n      alert(\"⚠️ No users added for this month.\");\n      return;\n    }\n    const points = {};\n    const markings = {};\n    const days = buildDaysArray(from, to);\n    allUsers.forEach(user => {\n      if (!monthlyUsers.includes(user.email)) return;\n      const email = user.email || \"Unknown\";\n      const displayName = user.name || email;\n      const userMeals = user.meals || {};\n      let totalPoints = 0;\n      const userMarkings = {};\n      const mealDates = Object.keys(userMeals).sort();\n      const firstMealDate = mealDates.length > 0 ? mealDates[0] : todayStr;\n      days.forEach(day => {\n        var _pointSystem$key;\n        let meals = userMeals[day];\n        if (!meals) {\n          if (day > todayStr || day >= firstMealDate) {\n            meals = {\n              breakfast: true,\n              lunch: true,\n              supper: true\n            };\n          } else {\n            userMarkings[day] = \"0\";\n            return;\n          }\n        }\n        const arr = [];\n        if (meals.breakfast) arr.push(\"B\");\n        if (meals.lunch) arr.push(\"L\");\n        if (meals.supper) arr.push(\"S\");\n        let key = arr.length === 3 ? \"X\" : arr.length === 0 ? \"0\" : arr.join(\"/\");\n        totalPoints += (_pointSystem$key = pointSystem[key]) !== null && _pointSystem$key !== void 0 ? _pointSystem$key : 0;\n        userMarkings[day] = key;\n      });\n      points[displayName] = totalPoints.toFixed(2);\n      markings[displayName] = userMarkings;\n    });\n    setUserPoints(points);\n    setUserMarks(markings);\n    setGenerated(true);\n    setFromDate(from);\n    setToDate(to);\n    setGeneratedRange({\n      from,\n      to\n    });\n  };\n\n  // Export CSV (range)\n  const exportCSV = () => {\n    const from = generatedRange.from || fromDate;\n    const to = generatedRange.to || toDate;\n    if (!from || !to) {\n      alert(\"⚠️ Please generate a report first.\");\n      return;\n    }\n    const days = buildDaysArray(from, to);\n    const header = [\"Name\", ...days, \"Total Points\"];\n    const rows = [header];\n    Object.entries(userPoints).forEach(([name, pts]) => {\n      const marks = userMarks[name] || {};\n      const row = [name];\n      days.forEach(day => row.push(marks[day] || \"0\"));\n      row.push(pts);\n      rows.push(row);\n    });\n    const csvContent = rows.map(r => r.join(\",\")).join(\"\\n\");\n    const blob = new Blob([csvContent], {\n      type: \"text/csv;charset=utf-8;\"\n    });\n    const url = URL.createObjectURL(blob);\n    const a = document.createElement(\"a\");\n    a.href = url;\n    a.setAttribute(\"download\", `points_${from}_to_${to}.csv`);\n    document.body.appendChild(a);\n    a.click();\n    document.body.removeChild(a);\n  };\n\n  // Export daily CSV (unchanged from your code)\n  const exportDailyMarkingCSV = () => {\n    const day = String(dailyDay).padStart(2, \"0\");\n    const mon = String(month).padStart(2, \"0\");\n    const selectedDate = `${year}-${mon}-${day}`;\n    const rows = [[\"Name\", \"Marking\"]];\n    allUsers.forEach(user => {\n      var _user$meals;\n      if (!monthlyUsers.includes(user.email)) return;\n      const displayName = user.name || user.email || \"Unknown\";\n      const meals = (_user$meals = user.meals) === null || _user$meals === void 0 ? void 0 : _user$meals[selectedDate];\n      let key;\n      if (!meals) key = selectedDate > todayStr ? \"X\" : \"0\";else {\n        const arr = [];\n        if (meals.breakfast) arr.push(\"B\");\n        if (meals.lunch) arr.push(\"L\");\n        if (meals.supper) arr.push(\"S\");\n        key = arr.length === 3 ? \"X\" : arr.length === 0 ? \"0\" : arr.join(\"/\");\n      }\n      rows.push([displayName, key]);\n    });\n    const csvContent = rows.map(r => r.join(\",\")).join(\"\\n\");\n    const blob = new Blob([csvContent], {\n      type: \"text/csv;charset=utf-8;\"\n    });\n    const url = URL.createObjectURL(blob);\n    const a = document.createElement(\"a\");\n    a.href = url;\n    a.setAttribute(\"download\", `daily_marking_${selectedDate}.csv`);\n    document.body.appendChild(a);\n    a.click();\n    document.body.removeChild(a);\n  };\n  if (loading) return /*#__PURE__*/_jsxDEV(\"h2\", {\n    className: \"loading\",\n    children: \"Loading data...\"\n  }, void 0, false, {\n    fileName: _jsxFileName,\n    lineNumber: 291,\n    columnNumber: 23\n  }, this);\n\n  // Requests view\n  if (view === \"requests\") {\n    return /*#__PURE__*/_jsxDEV(\"div\", {\n      className: \"admin-container\",\n      children: [/*#__PURE__*/_jsxDEV(\"h2\", {\n        className: \"title\",\n        children: \"\\uD83C\\uDD95 Pending User Requests\"\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 297,\n        columnNumber: 9\n      }, this), /*#__PURE__*/_jsxDEV(\"table\", {\n        className: \"meal-table\",\n        children: [/*#__PURE__*/_jsxDEV(\"thead\", {\n          children: /*#__PURE__*/_jsxDEV(\"tr\", {\n            children: [/*#__PURE__*/_jsxDEV(\"th\", {\n              children: \"Name\"\n            }, void 0, false, {\n              fileName: _jsxFileName,\n              lineNumber: 301,\n              columnNumber: 15\n            }, this), /*#__PURE__*/_jsxDEV(\"th\", {\n              children: \"Email\"\n            }, void 0, false, {\n              fileName: _jsxFileName,\n              lineNumber: 301,\n              columnNumber: 28\n            }, this), /*#__PURE__*/_jsxDEV(\"th\", {\n              children: \"Year\"\n            }, void 0, false, {\n              fileName: _jsxFileName,\n              lineNumber: 301,\n              columnNumber: 42\n            }, this), /*#__PURE__*/_jsxDEV(\"th\", {\n              children: \"Branch\"\n            }, void 0, false, {\n              fileName: _jsxFileName,\n              lineNumber: 301,\n              columnNumber: 55\n            }, this), /*#__PURE__*/_jsxDEV(\"th\", {\n              children: \"Phone\"\n            }, void 0, false, {\n              fileName: _jsxFileName,\n              lineNumber: 301,\n              columnNumber: 70\n            }, this), /*#__PURE__*/_jsxDEV(\"th\", {\n              children: \"Hostel\"\n            }, void 0, false, {\n              fileName: _jsxFileName,\n              lineNumber: 301,\n              columnNumber: 84\n            }, this), /*#__PURE__*/_jsxDEV(\"th\", {\n              children: \"Actions\"\n            }, void 0, false, {\n              fileName: _jsxFileName,\n              lineNumber: 301,\n              columnNumber: 99\n            }, this)]\n          }, void 0, true, {\n            fileName: _jsxFileName,\n            lineNumber: 300,\n            columnNumber: 13\n          }, this)\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 299,\n          columnNumber: 11\n        }, this), /*#__PURE__*/_jsxDEV(\"tbody\", {\n          children: allUsers.filter(u => u.status === \"pending\").map(user => /*#__PURE__*/_jsxDEV(\"tr\", {\n            children: [/*#__PURE__*/_jsxDEV(\"td\", {\n              children: user.name\n            }, void 0, false, {\n              fileName: _jsxFileName,\n              lineNumber: 307,\n              columnNumber: 17\n            }, this), /*#__PURE__*/_jsxDEV(\"td\", {\n              children: user.email\n            }, void 0, false, {\n              fileName: _jsxFileName,\n              lineNumber: 308,\n              columnNumber: 17\n            }, this), /*#__PURE__*/_jsxDEV(\"td\", {\n              children: user.year\n            }, void 0, false, {\n              fileName: _jsxFileName,\n              lineNumber: 309,\n              columnNumber: 17\n            }, this), /*#__PURE__*/_jsxDEV(\"td\", {\n              children: user.branch\n            }, void 0, false, {\n              fileName: _jsxFileName,\n              lineNumber: 310,\n              columnNumber: 17\n            }, this), /*#__PURE__*/_jsxDEV(\"td\", {\n              children: user.phone\n            }, void 0, false, {\n              fileName: _jsxFileName,\n              lineNumber: 311,\n              columnNumber: 17\n            }, this), /*#__PURE__*/_jsxDEV(\"td\", {\n              children: user.mea\n            }, void 0, false, {\n              fileName: _jsxFileName,\n              lineNumber: 312,\n              columnNumber: 17\n            }, this), /*#__PURE__*/_jsxDEV(\"td\", {\n              children: [/*#__PURE__*/_jsxDEV(\"button\", {\n                className: \"btn\",\n                onClick: () => addUserToMonth(user.email),\n                children: [\"\\u2795 Add to \", currentKey]\n              }, void 0, true, {\n                fileName: _jsxFileName,\n                lineNumber: 314,\n                columnNumber: 19\n              }, this), /*#__PURE__*/_jsxDEV(\"button\", {\n                className: \"btn approve-btn\",\n                onClick: () => updateDoc(doc(db, \"users\", user.email), {\n                  status: \"approved\"\n                }),\n                children: \"\\u2705 Approve\"\n              }, void 0, false, {\n                fileName: _jsxFileName,\n                lineNumber: 315,\n                columnNumber: 19\n              }, this), /*#__PURE__*/_jsxDEV(\"button\", {\n                className: \"btn reject-btn\",\n                onClick: () => updateDoc(doc(db, \"users\", user.email), {\n                  status: \"rejected\"\n                }),\n                children: \"\\u274C Reject\"\n              }, void 0, false, {\n                fileName: _jsxFileName,\n                lineNumber: 316,\n                columnNumber: 19\n              }, this)]\n            }, void 0, true, {\n              fileName: _jsxFileName,\n              lineNumber: 313,\n              columnNumber: 17\n            }, this)]\n          }, user.email, true, {\n            fileName: _jsxFileName,\n            lineNumber: 306,\n            columnNumber: 15\n          }, this))\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 304,\n          columnNumber: 11\n        }, this)]\n      }, void 0, true, {\n        fileName: _jsxFileName,\n        lineNumber: 298,\n        columnNumber: 9\n      }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n        className: \"admin-actions\",\n        children: [/*#__PURE__*/_jsxDEV(\"button\", {\n          className: \"btn\",\n          onClick: () => setView(\"dashboard\"),\n          children: \"\\u2B05\\uFE0F Back\"\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 323,\n          columnNumber: 11\n        }, this), /*#__PURE__*/_jsxDEV(\"button\", {\n          className: \"logout-btn\",\n          onClick: onLogout,\n          children: \"Logout\"\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 324,\n          columnNumber: 11\n        }, this)]\n      }, void 0, true, {\n        fileName: _jsxFileName,\n        lineNumber: 322,\n        columnNumber: 9\n      }, this)]\n    }, void 0, true, {\n      fileName: _jsxFileName,\n      lineNumber: 296,\n      columnNumber: 7\n    }, this);\n  }\n\n  // Points view\n  if (view === \"points\") {\n    const daysInMonth = new Date(year, month, 0).getDate();\n    return /*#__PURE__*/_jsxDEV(\"div\", {\n      className: \"admin-container\",\n      children: [/*#__PURE__*/_jsxDEV(\"h2\", {\n        className: \"title\",\n        children: [\"\\uD83D\\uDCD1 Generate Points Report (\", currentKey, \")\"]\n      }, void 0, true, {\n        fileName: _jsxFileName,\n        lineNumber: 335,\n        columnNumber: 9\n      }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n        className: \"report-filters\",\n        children: [/*#__PURE__*/_jsxDEV(\"label\", {\n          children: [\"Month:\", /*#__PURE__*/_jsxDEV(\"select\", {\n            value: month,\n            onChange: e => setMonth(Number(e.target.value)),\n            children: [\"January\", \"February\", \"March\", \"April\", \"May\", \"June\", \"July\", \"August\", \"September\", \"October\", \"November\", \"December\"].map((m, i) => /*#__PURE__*/_jsxDEV(\"option\", {\n              value: i + 1,\n              children: m\n            }, i, false, {\n              fileName: _jsxFileName,\n              lineNumber: 340,\n              columnNumber: 17\n            }, this))\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 338,\n            columnNumber: 13\n          }, this)]\n        }, void 0, true, {\n          fileName: _jsxFileName,\n          lineNumber: 337,\n          columnNumber: 11\n        }, this), /*#__PURE__*/_jsxDEV(\"label\", {\n          children: [\"Year:\", /*#__PURE__*/_jsxDEV(\"select\", {\n            value: year,\n            onChange: e => setYear(Number(e.target.value)),\n            children: Array.from({\n              length: 6\n            }, (_, i) => 2023 + i).map(y => /*#__PURE__*/_jsxDEV(\"option\", {\n              value: y,\n              children: y\n            }, y, false, {\n              fileName: _jsxFileName,\n              lineNumber: 347,\n              columnNumber: 17\n            }, this))\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 345,\n            columnNumber: 13\n          }, this)]\n        }, void 0, true, {\n          fileName: _jsxFileName,\n          lineNumber: 344,\n          columnNumber: 11\n        }, this), /*#__PURE__*/_jsxDEV(\"label\", {\n          children: [\"From:\", /*#__PURE__*/_jsxDEV(\"select\", {\n            value: fromDay,\n            onChange: e => setFromDay(Number(e.target.value)),\n            children: Array.from({\n              length: daysInMonth\n            }, (_, i) => i + 1).map(d => /*#__PURE__*/_jsxDEV(\"option\", {\n              value: d,\n              children: d\n            }, d, false, {\n              fileName: _jsxFileName,\n              lineNumber: 354,\n              columnNumber: 17\n            }, this))\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 352,\n            columnNumber: 13\n          }, this)]\n        }, void 0, true, {\n          fileName: _jsxFileName,\n          lineNumber: 351,\n          columnNumber: 11\n        }, this), /*#__PURE__*/_jsxDEV(\"label\", {\n          children: [\"To:\", /*#__PURE__*/_jsxDEV(\"select\", {\n            value: toDay,\n            onChange: e => setToDay(Number(e.target.value)),\n            children: Array.from({\n              length: daysInMonth\n            }, (_, i) => i + 1).map(d => /*#__PURE__*/_jsxDEV(\"option\", {\n              value: d,\n              children: d\n            }, d, false, {\n              fileName: _jsxFileName,\n              lineNumber: 361,\n              columnNumber: 17\n            }, this))\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 359,\n            columnNumber: 13\n          }, this)]\n        }, void 0, true, {\n          fileName: _jsxFileName,\n          lineNumber: 358,\n          columnNumber: 11\n        }, this), /*#__PURE__*/_jsxDEV(\"button\", {\n          className: \"btn generate-btn\",\n          onClick: () => {\n            let fDay = fromDay,\n              tDay = toDay;\n            if (fromDay > toDay) {\n              fDay = toDay;\n              tDay = fromDay;\n              setFromDay(fDay);\n              setToDay(tDay);\n            }\n            const f = `${year}-${String(month).padStart(2, \"0\")}-${String(fDay).padStart(2, \"0\")}`;\n            const t = `${year}-${String(month).padStart(2, \"0\")}-${String(tDay).padStart(2, \"0\")}`;\n            generateReport(f, t);\n          },\n          children: \"Generate\"\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 365,\n          columnNumber: 11\n        }, this)]\n      }, void 0, true, {\n        fileName: _jsxFileName,\n        lineNumber: 336,\n        columnNumber: 9\n      }, this), generated && /*#__PURE__*/_jsxDEV(_Fragment, {\n        children: [/*#__PURE__*/_jsxDEV(\"table\", {\n          className: \"meal-table\",\n          children: [/*#__PURE__*/_jsxDEV(\"thead\", {\n            children: /*#__PURE__*/_jsxDEV(\"tr\", {\n              children: [/*#__PURE__*/_jsxDEV(\"th\", {\n                children: \"Name\"\n              }, void 0, false, {\n                fileName: _jsxFileName,\n                lineNumber: 376,\n                columnNumber: 26\n              }, this), /*#__PURE__*/_jsxDEV(\"th\", {\n                children: \"Total Points\"\n              }, void 0, false, {\n                fileName: _jsxFileName,\n                lineNumber: 376,\n                columnNumber: 39\n              }, this)]\n            }, void 0, true, {\n              fileName: _jsxFileName,\n              lineNumber: 376,\n              columnNumber: 22\n            }, this)\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 376,\n            columnNumber: 15\n          }, this), /*#__PURE__*/_jsxDEV(\"tbody\", {\n            children: Object.entries(userPoints).map(([name, pts]) => /*#__PURE__*/_jsxDEV(\"tr\", {\n              children: [/*#__PURE__*/_jsxDEV(\"td\", {\n                children: name\n              }, void 0, false, {\n                fileName: _jsxFileName,\n                lineNumber: 379,\n                columnNumber: 34\n              }, this), /*#__PURE__*/_jsxDEV(\"td\", {\n                children: pts\n              }, void 0, false, {\n                fileName: _jsxFileName,\n                lineNumber: 379,\n                columnNumber: 49\n              }, this)]\n            }, name, true, {\n              fileName: _jsxFileName,\n              lineNumber: 379,\n              columnNumber: 19\n            }, this))\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 377,\n            columnNumber: 15\n          }, this)]\n        }, void 0, true, {\n          fileName: _jsxFileName,\n          lineNumber: 375,\n          columnNumber: 13\n        }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n          style: {\n            display: \"flex\",\n            gap: 8,\n            marginTop: 10\n          },\n          children: [/*#__PURE__*/_jsxDEV(\"button\", {\n            className: \"btn export-btn\",\n            onClick: exportCSV,\n            children: \"\\u2B07\\uFE0F Download Range CSV\"\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 384,\n            columnNumber: 15\n          }, this), /*#__PURE__*/_jsxDEV(\"button\", {\n            className: \"btn export-btn\",\n            onClick: downloadMonthlyUsers,\n            children: \"\\u2B07\\uFE0F Download Monthly Users\"\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 385,\n            columnNumber: 15\n          }, this)]\n        }, void 0, true, {\n          fileName: _jsxFileName,\n          lineNumber: 383,\n          columnNumber: 13\n        }, this)]\n      }, void 0, true), /*#__PURE__*/_jsxDEV(\"div\", {\n        style: {\n          marginTop: 18,\n          borderTop: \"1px solid #ddd\",\n          paddingTop: 12\n        },\n        children: [/*#__PURE__*/_jsxDEV(\"h3\", {\n          children: \"\\uD83D\\uDCC5 Export Single-Day Markings\"\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 390,\n          columnNumber: 11\n        }, this), /*#__PURE__*/_jsxDEV(\"label\", {\n          className: \"single-day-label\",\n          children: [\"Day:\", /*#__PURE__*/_jsxDEV(\"select\", {\n            className: \"single-day-date\",\n            value: dailyDay,\n            onChange: e => setDailyDay(Number(e.target.value)),\n            children: Array.from({\n              length: daysInMonth\n            }, (_, i) => i + 1).map(d => /*#__PURE__*/_jsxDEV(\"option\", {\n              value: d,\n              children: d\n            }, d, false, {\n              fileName: _jsxFileName,\n              lineNumber: 395,\n              columnNumber: 17\n            }, this))\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 393,\n            columnNumber: 13\n          }, this)]\n        }, void 0, true, {\n          fileName: _jsxFileName,\n          lineNumber: 391,\n          columnNumber: 11\n        }, this), /*#__PURE__*/_jsxDEV(\"button\", {\n          className: \"btn export-btn\",\n          onClick: exportDailyMarkingCSV,\n          style: {\n            marginLeft: 10\n          },\n          children: \"\\u2B07\\uFE0F Download todays Marking\"\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 399,\n          columnNumber: 11\n        }, this)]\n      }, void 0, true, {\n        fileName: _jsxFileName,\n        lineNumber: 389,\n        columnNumber: 9\n      }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n        className: \"admin-actions\",\n        children: /*#__PURE__*/_jsxDEV(\"button\", {\n          className: \"btn\",\n          onClick: () => setView(\"dashboard\"),\n          children: \"\\u2B05\\uFE0F Back\"\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 402,\n          columnNumber: 11\n        }, this)\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 401,\n        columnNumber: 9\n      }, this)]\n    }, void 0, true, {\n      fileName: _jsxFileName,\n      lineNumber: 334,\n      columnNumber: 7\n    }, this);\n  }\n\n  // Meals view\n  if (view === \"meals\") {\n    return /*#__PURE__*/_jsxDEV(\"div\", {\n      className: \"admin-container\",\n      children: [/*#__PURE__*/_jsxDEV(\"h2\", {\n        className: \"title\",\n        children: \"\\uD83E\\uDD58 Meal Counts (Next 8 Days)\"\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 412,\n        columnNumber: 9\n      }, this), /*#__PURE__*/_jsxDEV(\"table\", {\n        className: \"meal-table\",\n        children: [/*#__PURE__*/_jsxDEV(\"thead\", {\n          children: /*#__PURE__*/_jsxDEV(\"tr\", {\n            children: [/*#__PURE__*/_jsxDEV(\"th\", {\n              children: \"Date\"\n            }, void 0, false, {\n              fileName: _jsxFileName,\n              lineNumber: 414,\n              columnNumber: 22\n            }, this), /*#__PURE__*/_jsxDEV(\"th\", {\n              children: \"Breakfast\"\n            }, void 0, false, {\n              fileName: _jsxFileName,\n              lineNumber: 414,\n              columnNumber: 35\n            }, this), /*#__PURE__*/_jsxDEV(\"th\", {\n              children: \"Lunch\"\n            }, void 0, false, {\n              fileName: _jsxFileName,\n              lineNumber: 414,\n              columnNumber: 53\n            }, this), /*#__PURE__*/_jsxDEV(\"th\", {\n              children: \"Supper\"\n            }, void 0, false, {\n              fileName: _jsxFileName,\n              lineNumber: 414,\n              columnNumber: 67\n            }, this)]\n          }, void 0, true, {\n            fileName: _jsxFileName,\n            lineNumber: 414,\n            columnNumber: 18\n          }, this)\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 414,\n          columnNumber: 11\n        }, this), /*#__PURE__*/_jsxDEV(\"tbody\", {\n          children: Object.entries(mealCounts).map(([day, meals]) => /*#__PURE__*/_jsxDEV(\"tr\", {\n            children: [/*#__PURE__*/_jsxDEV(\"td\", {\n              className: \"date-col\",\n              children: day\n            }, void 0, false, {\n              fileName: _jsxFileName,\n              lineNumber: 418,\n              columnNumber: 17\n            }, this), /*#__PURE__*/_jsxDEV(\"td\", {\n              className: day === todayStr ? \"today-col\" : \"\",\n              children: meals.breakfast\n            }, void 0, false, {\n              fileName: _jsxFileName,\n              lineNumber: 419,\n              columnNumber: 17\n            }, this), /*#__PURE__*/_jsxDEV(\"td\", {\n              className: day === todayStr ? \"today-col\" : \"\",\n              children: meals.lunch\n            }, void 0, false, {\n              fileName: _jsxFileName,\n              lineNumber: 420,\n              columnNumber: 17\n            }, this), /*#__PURE__*/_jsxDEV(\"td\", {\n              className: day === todayStr ? \"today-col\" : \"\",\n              children: meals.supper\n            }, void 0, false, {\n              fileName: _jsxFileName,\n              lineNumber: 421,\n              columnNumber: 17\n            }, this)]\n          }, day, true, {\n            fileName: _jsxFileName,\n            lineNumber: 417,\n            columnNumber: 15\n          }, this))\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 415,\n          columnNumber: 11\n        }, this)]\n      }, void 0, true, {\n        fileName: _jsxFileName,\n        lineNumber: 413,\n        columnNumber: 9\n      }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n        className: \"admin-actions\",\n        children: /*#__PURE__*/_jsxDEV(\"button\", {\n          className: \"btn\",\n          onClick: () => setView(\"dashboard\"),\n          children: \"\\u2B05\\uFE0F Back\"\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 427,\n          columnNumber: 11\n        }, this)\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 426,\n        columnNumber: 9\n      }, this)]\n    }, void 0, true, {\n      fileName: _jsxFileName,\n      lineNumber: 411,\n      columnNumber: 7\n    }, this);\n  }\n\n  // Dashboard\n  const todayMeals = mealCounts[todayStr] || {\n    breakfast: 0,\n    lunch: 0,\n    supper: 0\n  };\n  return /*#__PURE__*/_jsxDEV(\"div\", {\n    className: \"admin-container\",\n    children: [/*#__PURE__*/_jsxDEV(\"h2\", {\n      className: \"title\",\n      children: \"\\uD83D\\uDCCA Admin Dashboard\"\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 437,\n      columnNumber: 7\n    }, this), /*#__PURE__*/_jsxDEV(\"h3\", {\n      children: \"\\uD83C\\uDF7D\\uFE0F Today\\u2019s Meal Count\"\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 438,\n      columnNumber: 7\n    }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n      className: \"today-meals\",\n      children: [/*#__PURE__*/_jsxDEV(\"p\", {\n        children: [\"\\uD83C\\uDF73 Breakfast: \", /*#__PURE__*/_jsxDEV(\"strong\", {\n          children: todayMeals.breakfast\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 440,\n          columnNumber: 26\n        }, this)]\n      }, void 0, true, {\n        fileName: _jsxFileName,\n        lineNumber: 440,\n        columnNumber: 9\n      }, this), /*#__PURE__*/_jsxDEV(\"p\", {\n        children: [\"\\uD83E\\uDD57 Lunch: \", /*#__PURE__*/_jsxDEV(\"strong\", {\n          children: todayMeals.lunch\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 441,\n          columnNumber: 22\n        }, this)]\n      }, void 0, true, {\n        fileName: _jsxFileName,\n        lineNumber: 441,\n        columnNumber: 9\n      }, this), /*#__PURE__*/_jsxDEV(\"p\", {\n        children: [\"\\uD83C\\uDF5B Supper: \", /*#__PURE__*/_jsxDEV(\"strong\", {\n          children: todayMeals.supper\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 442,\n          columnNumber: 23\n        }, this)]\n      }, void 0, true, {\n        fileName: _jsxFileName,\n        lineNumber: 442,\n        columnNumber: 9\n      }, this)]\n    }, void 0, true, {\n      fileName: _jsxFileName,\n      lineNumber: 439,\n      columnNumber: 7\n    }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n      className: \"admin-actions\",\n      children: [/*#__PURE__*/_jsxDEV(\"button\", {\n        className: \"btn points-btn\",\n        onClick: goToPointSystem,\n        children: \"\\u2699\\uFE0F Point System\"\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 445,\n        columnNumber: 9\n      }, this), /*#__PURE__*/_jsxDEV(\"button\", {\n        className: \"btn points-btn\",\n        onClick: () => setView(\"points\"),\n        children: \"\\uD83D\\uDCD1 Points Report\"\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 446,\n        columnNumber: 9\n      }, this), /*#__PURE__*/_jsxDEV(\"button\", {\n        className: \"btn points-btn\",\n        onClick: () => setView(\"requests\"),\n        children: \"\\uD83D\\uDC65 User Requests\"\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 447,\n        columnNumber: 9\n      }, this), /*#__PURE__*/_jsxDEV(\"button\", {\n        className: \"btn points-btn\",\n        onClick: () => setView(\"meals\"),\n        children: \"\\uD83E\\uDD58 Meal Counts\"\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 448,\n        columnNumber: 9\n      }, this), /*#__PURE__*/_jsxDEV(\"button\", {\n        className: \"btn points-btn\",\n        onClick: downloadMonthlyUsers,\n        children: \"\\u2B07\\uFE0F Download Monthly Users\"\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 449,\n        columnNumber: 9\n      }, this), /*#__PURE__*/_jsxDEV(\"button\", {\n        className: \"logout-btn\",\n        onClick: onLogout,\n        children: \"Logout\"\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 450,\n        columnNumber: 9\n      }, this)]\n    }, void 0, true, {\n      fileName: _jsxFileName,\n      lineNumber: 444,\n      columnNumber: 7\n    }, this)]\n  }, void 0, true, {\n    fileName: _jsxFileName,\n    lineNumber: 436,\n    columnNumber: 5\n  }, this);\n}\n_s(AdminPage, \"/QWH8mO6U8Uzn6a3rv/Nbon6eTQ=\");\n_c = AdminPage;\nexport default AdminPage;\nvar _c;\n$RefreshReg$(_c, \"AdminPage\");","map":{"version":3,"names":["React","useEffect","useState","db","collection","getDocs","doc","getDoc","setDoc","updateDoc","query","where","jsxDEV","_jsxDEV","Fragment","_Fragment","AdminPage","onLogout","goToPointSystem","_s","mealCounts","setMealCounts","userPoints","setUserPoints","userMarks","setUserMarks","loading","setLoading","fromDate","setFromDate","toDate","setToDate","generated","setGenerated","allUsers","setAllUsers","view","setView","month","setMonth","Date","getMonth","year","setYear","getFullYear","fromDay","setFromDay","toDay","setToDay","dailyDay","setDailyDay","getDate","defaultSystem","X","B","L","S","pointSystem","setPointSystem","generatedRange","setGeneratedRange","from","to","todayStr","toISOString","split","monthlyUsers","setMonthlyUsers","currentKey","String","padStart","fetchAll","settingsRef","settingsSnap","exists","data","usersRef","querySnapshot","all","counts","today","nextDays","i","d","setDate","dateStr","push","breakfast","lunch","supper","forEach","docSnap","userMeals","meals","day","meal","err","console","error","loadMonthlyUsers","ref","snap","users","addUserToMonth","email","includes","alert","downloadMonthlyUsers","rows","u","csvContent","map","r","join","blob","Blob","type","url","URL","createObjectURL","a","document","createElement","href","setAttribute","body","appendChild","click","removeChild","buildDaysArray","arr","s","e","getTime","generateReport","f","t","length","points","markings","days","user","displayName","name","totalPoints","userMarkings","mealDates","Object","keys","sort","firstMealDate","_pointSystem$key","key","toFixed","exportCSV","header","entries","pts","marks","row","exportDailyMarkingCSV","mon","selectedDate","_user$meals","className","children","fileName","_jsxFileName","lineNumber","columnNumber","filter","status","branch","phone","mea","onClick","daysInMonth","value","onChange","Number","target","m","Array","_","y","fDay","tDay","style","display","gap","marginTop","borderTop","paddingTop","marginLeft","todayMeals","_c","$RefreshReg$"],"sources":["C:/Users/mohdn/OneDrive/Desktop/mess-app-starter/src/AdminPage.js"],"sourcesContent":["// AdminPage.js\r\nimport React, { useEffect, useState } from \"react\";\r\nimport { db } from \"./firebase\";\r\nimport {\r\n  collection,\r\n  getDocs,\r\n  doc,\r\n  getDoc,\r\n  setDoc,\r\n  updateDoc,\r\n  query,\r\n  where,\r\n} from \"firebase/firestore\";\r\nimport \"./AdminPage.css\";\r\n\r\nfunction AdminPage({ onLogout, goToPointSystem }) {\r\n  const [mealCounts, setMealCounts] = useState({});\r\n  const [userPoints, setUserPoints] = useState({});\r\n  const [userMarks, setUserMarks] = useState({});\r\n  const [loading, setLoading] = useState(true);\r\n\r\n  const [fromDate, setFromDate] = useState(\"\");\r\n  const [toDate, setToDate] = useState(\"\");\r\n  const [generated, setGenerated] = useState(false);\r\n\r\n  const [allUsers, setAllUsers] = useState([]);\r\n  const [view, setView] = useState(\"dashboard\");\r\n\r\n  const [month, setMonth] = useState(new Date().getMonth() + 1);\r\n  const [year, setYear] = useState(new Date().getFullYear());\r\n  const [fromDay, setFromDay] = useState(1);\r\n  const [toDay, setToDay] = useState(1);\r\n\r\n  const [dailyDay, setDailyDay] = useState(new Date().getDate());\r\n\r\n  const defaultSystem = {\r\n    X: 1,\r\n    \"0\": 0,\r\n    B: 0.25,\r\n    L: 0.35,\r\n    S: 0.45,\r\n    \"B/L\": 0.65,\r\n    \"B/S\": 0.75,\r\n    \"L/S\": 0.85,\r\n  };\r\n  const [pointSystem, setPointSystem] = useState(defaultSystem);\r\n\r\n  const [generatedRange, setGeneratedRange] = useState({ from: \"\", to: \"\" });\r\n\r\n  const todayStr = new Date().toISOString().split(\"T\")[0];\r\n\r\n  // --- monthly users state ---\r\n  const [monthlyUsers, setMonthlyUsers] = useState([]);\r\n  const currentKey = `${year}-${String(month).padStart(2, \"0\")}`;\r\n\r\n  // Fetch settings + users + meal counts\r\n  useEffect(() => {\r\n    const fetchAll = async () => {\r\n      try {\r\n        const settingsRef = doc(db, \"settings\", \"points\");\r\n        const settingsSnap = await getDoc(settingsRef);\r\n        if (settingsSnap.exists()) setPointSystem(settingsSnap.data());\r\n        else await setDoc(settingsRef, defaultSystem);\r\n\r\n        const usersRef = collection(db, \"users\");\r\n        const querySnapshot = await getDocs(usersRef);\r\n\r\n        const all = [];\r\n        const counts = {};\r\n        const today = new Date();\r\n\r\n        const nextDays = [];\r\n        for (let i = 0; i < 8; i++) {\r\n          const d = new Date(today);\r\n          d.setDate(today.getDate() + i);\r\n          const dateStr = d.toISOString().split(\"T\")[0];\r\n          nextDays.push(dateStr);\r\n          counts[dateStr] = { breakfast: 0, lunch: 0, supper: 0 };\r\n        }\r\n\r\n        querySnapshot.forEach((docSnap) => {\r\n          const data = docSnap.data();\r\n          all.push(data);\r\n\r\n          const userMeals = data.meals || {};\r\n          nextDays.forEach((day) => {\r\n            const meals = userMeals[day];\r\n            if (meals) {\r\n              [\"breakfast\", \"lunch\", \"supper\"].forEach((meal) => {\r\n                if (meals[meal]) counts[day][meal] += 1;\r\n              });\r\n            } else if (day > todayStr) {\r\n              counts[day].breakfast += 1;\r\n              counts[day].lunch += 1;\r\n              counts[day].supper += 1;\r\n            }\r\n          });\r\n        });\r\n\r\n        setAllUsers(all);\r\n        setMealCounts(counts);\r\n      } catch (err) {\r\n        console.error(\"Admin data error:\", err);\r\n      } finally {\r\n        setLoading(false);\r\n      }\r\n    };\r\n    fetchAll();\r\n  }, []);\r\n\r\n  // Load monthly users list\r\n  useEffect(() => {\r\n    const loadMonthlyUsers = async () => {\r\n      const ref = doc(db, \"monthlyUsers\", currentKey);\r\n      const snap = await getDoc(ref);\r\n      if (snap.exists()) setMonthlyUsers(snap.data().users || []);\r\n      else setMonthlyUsers([]);\r\n    };\r\n    loadMonthlyUsers();\r\n  }, [year, month, currentKey]);\r\n\r\n  // Add user to month\r\n  const addUserToMonth = async (email) => {\r\n    try {\r\n      const ref = doc(db, \"monthlyUsers\", currentKey);\r\n      const snap = await getDoc(ref);\r\n      let users = snap.exists() ? snap.data().users || [] : [];\r\n      if (!users.includes(email)) users.push(email);\r\n      await setDoc(ref, { users });\r\n      setMonthlyUsers(users);\r\n      alert(`✅ Added ${email} to ${currentKey}`);\r\n    } catch (err) {\r\n      console.error(\"Error adding user to month:\", err);\r\n    }\r\n  };\r\n\r\n  // Download monthly users CSV\r\n  const downloadMonthlyUsers = async () => {\r\n    const ref = doc(db, \"monthlyUsers\", currentKey);\r\n    const snap = await getDoc(ref);\r\n    if (!snap.exists()) {\r\n      alert(\"⚠️ No users found for this month\");\r\n      return;\r\n    }\r\n    const users = snap.data().users || [];\r\n    const rows = [[\"Email\"]];\r\n    users.forEach((u) => rows.push([u]));\r\n    const csvContent = rows.map((r) => r.join(\",\")).join(\"\\n\");\r\n    const blob = new Blob([csvContent], { type: \"text/csv;charset=utf-8;\" });\r\n    const url = URL.createObjectURL(blob);\r\n    const a = document.createElement(\"a\");\r\n    a.href = url;\r\n    a.setAttribute(\"download\", `monthly_users_${currentKey}.csv`);\r\n    document.body.appendChild(a);\r\n    a.click();\r\n    document.body.removeChild(a);\r\n  };\r\n\r\n  // Helper\r\n  const buildDaysArray = (from, to) => {\r\n    const arr = [];\r\n    const s = new Date(from);\r\n    const e = new Date(to);\r\n    for (let d = new Date(s.getTime()); d.getTime() <= e.getTime(); d.setDate(d.getDate() + 1)) {\r\n      arr.push(d.toISOString().split(\"T\")[0]);\r\n    }\r\n    return arr;\r\n  };\r\n\r\n  // Generate report (only monthly users)\r\n  const generateReport = (f, t) => {\r\n    const from = f || fromDate;\r\n    const to = t || toDate;\r\n    if (!from || !to) {\r\n      alert(\"⚠️ Please select both From and To dates!\");\r\n      return;\r\n    }\r\n    if (monthlyUsers.length === 0) {\r\n      alert(\"⚠️ No users added for this month.\");\r\n      return;\r\n    }\r\n\r\n    const points = {};\r\n    const markings = {};\r\n    const days = buildDaysArray(from, to);\r\n\r\n    allUsers.forEach((user) => {\r\n      if (!monthlyUsers.includes(user.email)) return;\r\n\r\n      const email = user.email || \"Unknown\";\r\n      const displayName = user.name || email;\r\n      const userMeals = user.meals || {};\r\n      let totalPoints = 0;\r\n      const userMarkings = {};\r\n\r\n      const mealDates = Object.keys(userMeals).sort();\r\n      const firstMealDate = mealDates.length > 0 ? mealDates[0] : todayStr;\r\n\r\n      days.forEach((day) => {\r\n        let meals = userMeals[day];\r\n        if (!meals) {\r\n          if (day > todayStr || day >= firstMealDate) {\r\n            meals = { breakfast: true, lunch: true, supper: true };\r\n          } else {\r\n            userMarkings[day] = \"0\";\r\n            return;\r\n          }\r\n        }\r\n        const arr = [];\r\n        if (meals.breakfast) arr.push(\"B\");\r\n        if (meals.lunch) arr.push(\"L\");\r\n        if (meals.supper) arr.push(\"S\");\r\n        let key = arr.length === 3 ? \"X\" : arr.length === 0 ? \"0\" : arr.join(\"/\");\r\n        totalPoints += pointSystem[key] ?? 0;\r\n        userMarkings[day] = key;\r\n      });\r\n\r\n      points[displayName] = totalPoints.toFixed(2);\r\n      markings[displayName] = userMarkings;\r\n    });\r\n\r\n    setUserPoints(points);\r\n    setUserMarks(markings);\r\n    setGenerated(true);\r\n    setFromDate(from);\r\n    setToDate(to);\r\n    setGeneratedRange({ from, to });\r\n  };\r\n\r\n  // Export CSV (range)\r\n  const exportCSV = () => {\r\n    const from = generatedRange.from || fromDate;\r\n    const to = generatedRange.to || toDate;\r\n    if (!from || !to) {\r\n      alert(\"⚠️ Please generate a report first.\");\r\n      return;\r\n    }\r\n    const days = buildDaysArray(from, to);\r\n    const header = [\"Name\", ...days, \"Total Points\"];\r\n    const rows = [header];\r\n    Object.entries(userPoints).forEach(([name, pts]) => {\r\n      const marks = userMarks[name] || {};\r\n      const row = [name];\r\n      days.forEach((day) => row.push(marks[day] || \"0\"));\r\n      row.push(pts);\r\n      rows.push(row);\r\n    });\r\n    const csvContent = rows.map((r) => r.join(\",\")).join(\"\\n\");\r\n    const blob = new Blob([csvContent], { type: \"text/csv;charset=utf-8;\" });\r\n    const url = URL.createObjectURL(blob);\r\n    const a = document.createElement(\"a\");\r\n    a.href = url;\r\n    a.setAttribute(\"download\", `points_${from}_to_${to}.csv`);\r\n    document.body.appendChild(a);\r\n    a.click();\r\n    document.body.removeChild(a);\r\n  };\r\n\r\n  // Export daily CSV (unchanged from your code)\r\n  const exportDailyMarkingCSV = () => {\r\n    const day = String(dailyDay).padStart(2, \"0\");\r\n    const mon = String(month).padStart(2, \"0\");\r\n    const selectedDate = `${year}-${mon}-${day}`;\r\n    const rows = [[\"Name\", \"Marking\"]];\r\n    allUsers.forEach((user) => {\r\n      if (!monthlyUsers.includes(user.email)) return;\r\n      const displayName = user.name || user.email || \"Unknown\";\r\n      const meals = user.meals?.[selectedDate];\r\n      let key;\r\n      if (!meals) key = selectedDate > todayStr ? \"X\" : \"0\";\r\n      else {\r\n        const arr = [];\r\n        if (meals.breakfast) arr.push(\"B\");\r\n        if (meals.lunch) arr.push(\"L\");\r\n        if (meals.supper) arr.push(\"S\");\r\n        key = arr.length === 3 ? \"X\" : arr.length === 0 ? \"0\" : arr.join(\"/\");\r\n      }\r\n      rows.push([displayName, key]);\r\n    });\r\n    const csvContent = rows.map((r) => r.join(\",\")).join(\"\\n\");\r\n    const blob = new Blob([csvContent], { type: \"text/csv;charset=utf-8;\" });\r\n    const url = URL.createObjectURL(blob);\r\n    const a = document.createElement(\"a\");\r\n    a.href = url;\r\n    a.setAttribute(\"download\", `daily_marking_${selectedDate}.csv`);\r\n    document.body.appendChild(a);\r\n    a.click();\r\n    document.body.removeChild(a);\r\n  };\r\n\r\n  if (loading) return <h2 className=\"loading\">Loading data...</h2>;\r\n\r\n  // Requests view\r\n  if (view === \"requests\") {\r\n    return (\r\n      <div className=\"admin-container\">\r\n        <h2 className=\"title\">🆕 Pending User Requests</h2>\r\n        <table className=\"meal-table\">\r\n          <thead>\r\n            <tr>\r\n              <th>Name</th><th>Email</th><th>Year</th><th>Branch</th><th>Phone</th><th>Hostel</th><th>Actions</th>\r\n            </tr>\r\n          </thead>\r\n          <tbody>\r\n            {allUsers.filter((u) => u.status === \"pending\").map((user) => (\r\n              <tr key={user.email}>\r\n                <td>{user.name}</td>\r\n                <td>{user.email}</td>\r\n                <td>{user.year}</td>\r\n                <td>{user.branch}</td>\r\n                <td>{user.phone}</td>\r\n                <td>{user.mea}</td>\r\n                <td>\r\n                  <button className=\"btn\" onClick={() => addUserToMonth(user.email)}>➕ Add to {currentKey}</button>\r\n                  <button className=\"btn approve-btn\" onClick={() => updateDoc(doc(db,\"users\",user.email),{status:\"approved\"})}>✅ Approve</button>\r\n                  <button className=\"btn reject-btn\" onClick={() => updateDoc(doc(db,\"users\",user.email),{status:\"rejected\"})}>❌ Reject</button>\r\n                </td>\r\n              </tr>\r\n            ))}\r\n          </tbody>\r\n        </table>\r\n        <div className=\"admin-actions\">\r\n          <button className=\"btn\" onClick={() => setView(\"dashboard\")}>⬅️ Back</button>\r\n          <button className=\"logout-btn\" onClick={onLogout}>Logout</button>\r\n        </div>\r\n      </div>\r\n    );\r\n  }\r\n\r\n  // Points view\r\n  if (view === \"points\") {\r\n    const daysInMonth = new Date(year, month, 0).getDate();\r\n    return (\r\n      <div className=\"admin-container\">\r\n        <h2 className=\"title\">📑 Generate Points Report ({currentKey})</h2>\r\n        <div className=\"report-filters\">\r\n          <label>Month:\r\n            <select value={month} onChange={(e) => setMonth(Number(e.target.value))}>\r\n              {[\"January\",\"February\",\"March\",\"April\",\"May\",\"June\",\"July\",\"August\",\"September\",\"October\",\"November\",\"December\"].map((m,i)=>(\r\n                <option key={i} value={i+1}>{m}</option>\r\n              ))}\r\n            </select>\r\n          </label>\r\n          <label>Year:\r\n            <select value={year} onChange={(e) => setYear(Number(e.target.value))}>\r\n              {Array.from({ length: 6 }, (_, i) => 2023+i).map((y)=>(\r\n                <option key={y} value={y}>{y}</option>\r\n              ))}\r\n            </select>\r\n          </label>\r\n          <label>From:\r\n            <select value={fromDay} onChange={(e) => setFromDay(Number(e.target.value))}>\r\n              {Array.from({ length: daysInMonth }, (_, i) => i+1).map((d)=>(\r\n                <option key={d} value={d}>{d}</option>\r\n              ))}\r\n            </select>\r\n          </label>\r\n          <label>To:\r\n            <select value={toDay} onChange={(e) => setToDay(Number(e.target.value))}>\r\n              {Array.from({ length: daysInMonth }, (_, i) => i+1).map((d)=>(\r\n                <option key={d} value={d}>{d}</option>\r\n              ))}\r\n            </select>\r\n          </label>\r\n          <button className=\"btn generate-btn\" onClick={()=>{\r\n            let fDay=fromDay,tDay=toDay;\r\n            if (fromDay>toDay){fDay=toDay;tDay=fromDay;setFromDay(fDay);setToDay(tDay);}\r\n            const f=`${year}-${String(month).padStart(2,\"0\")}-${String(fDay).padStart(2,\"0\")}`;\r\n            const t=`${year}-${String(month).padStart(2,\"0\")}-${String(tDay).padStart(2,\"0\")}`;\r\n            generateReport(f,t);\r\n          }}>Generate</button>\r\n        </div>\r\n        {generated && (\r\n          <>\r\n            <table className=\"meal-table\">\r\n              <thead><tr><th>Name</th><th>Total Points</th></tr></thead>\r\n              <tbody>\r\n                {Object.entries(userPoints).map(([name, pts])=>(\r\n                  <tr key={name}><td>{name}</td><td>{pts}</td></tr>\r\n                ))}\r\n              </tbody>\r\n            </table>\r\n            <div style={{display:\"flex\",gap:8,marginTop:10}}>\r\n              <button className=\"btn export-btn\" onClick={exportCSV}>⬇️ Download Range CSV</button>\r\n              <button className=\"btn export-btn\" onClick={downloadMonthlyUsers}>⬇️ Download Monthly Users</button>\r\n            </div>\r\n          </>\r\n        )}\r\n        <div style={{marginTop:18,borderTop:\"1px solid #ddd\",paddingTop:12}}>\r\n          <h3>📅 Export Single-Day Markings</h3>\r\n          <label className=\"single-day-label\">\r\n            Day:\r\n            <select className=\"single-day-date\" value={dailyDay} onChange={(e)=>setDailyDay(Number(e.target.value))}>\r\n              {Array.from({ length: daysInMonth }, (_, i) => i+1).map((d)=>(\r\n                <option key={d} value={d}>{d}</option>\r\n              ))}\r\n            </select>\r\n          </label>\r\n          <button className=\"btn export-btn\" onClick={exportDailyMarkingCSV} style={{marginLeft:10}}>⬇️ Download todays Marking</button>\r\n        </div>\r\n        <div className=\"admin-actions\">\r\n          <button className=\"btn\" onClick={()=>setView(\"dashboard\")}>⬅️ Back</button>\r\n        </div>\r\n      </div>\r\n    );\r\n  }\r\n\r\n  // Meals view\r\n  if (view === \"meals\") {\r\n    return (\r\n      <div className=\"admin-container\">\r\n        <h2 className=\"title\">🥘 Meal Counts (Next 8 Days)</h2>\r\n        <table className=\"meal-table\">\r\n          <thead><tr><th>Date</th><th>Breakfast</th><th>Lunch</th><th>Supper</th></tr></thead>\r\n          <tbody>\r\n            {Object.entries(mealCounts).map(([day, meals])=>(\r\n              <tr key={day}>\r\n                <td className=\"date-col\">{day}</td>\r\n                <td className={day===todayStr?\"today-col\":\"\"}>{meals.breakfast}</td>\r\n                <td className={day===todayStr?\"today-col\":\"\"}>{meals.lunch}</td>\r\n                <td className={day===todayStr?\"today-col\":\"\"}>{meals.supper}</td>\r\n              </tr>\r\n            ))}\r\n          </tbody>\r\n        </table>\r\n        <div className=\"admin-actions\">\r\n          <button className=\"btn\" onClick={()=>setView(\"dashboard\")}>⬅️ Back</button>\r\n        </div>\r\n      </div>\r\n    );\r\n  }\r\n\r\n  // Dashboard\r\n  const todayMeals = mealCounts[todayStr] || { breakfast:0, lunch:0, supper:0 };\r\n  return (\r\n    <div className=\"admin-container\">\r\n      <h2 className=\"title\">📊 Admin Dashboard</h2>\r\n      <h3>🍽️ Today’s Meal Count</h3>\r\n      <div className=\"today-meals\">\r\n        <p>🍳 Breakfast: <strong>{todayMeals.breakfast}</strong></p>\r\n        <p>🥗 Lunch: <strong>{todayMeals.lunch}</strong></p>\r\n        <p>🍛 Supper: <strong>{todayMeals.supper}</strong></p>\r\n      </div>\r\n      <div className=\"admin-actions\">\r\n        <button className=\"btn points-btn\" onClick={goToPointSystem}>⚙️ Point System</button>\r\n        <button className=\"btn points-btn\" onClick={()=>setView(\"points\")}>📑 Points Report</button>\r\n        <button className=\"btn points-btn\" onClick={()=>setView(\"requests\")}>👥 User Requests</button>\r\n        <button className=\"btn points-btn\" onClick={()=>setView(\"meals\")}>🥘 Meal Counts</button>\r\n        <button className=\"btn points-btn\" onClick={downloadMonthlyUsers}>⬇️ Download Monthly Users</button>\r\n        <button className=\"logout-btn\" onClick={onLogout}>Logout</button>\r\n      </div>\r\n    </div>\r\n  );\r\n}\r\n\r\nexport default AdminPage;"],"mappings":"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","ignoreList":[]},"metadata":{},"sourceType":"module","externalDependencies":[]}