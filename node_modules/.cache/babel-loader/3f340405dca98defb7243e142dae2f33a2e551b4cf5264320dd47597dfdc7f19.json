{"ast":null,"code":"var _jsxFileName = \"C:\\\\Users\\\\mohdn\\\\OneDrive\\\\Desktop\\\\mess-app-starter\\\\src\\\\AdminPage.js\",\n  _s = $RefreshSig$();\n// AdminPage.js\nimport React, { useEffect, useState } from \"react\";\nimport { db } from \"./firebase\";\nimport { collection, getDocs, doc, getDoc, setDoc, updateDoc, query, where } from \"firebase/firestore\";\nimport \"./AdminPage.css\";\nimport { jsxDEV as _jsxDEV, Fragment as _Fragment } from \"react/jsx-dev-runtime\";\nfunction AdminPage({\n  onLogout,\n  goToPointSystem\n}) {\n  _s();\n  const [mealCounts, setMealCounts] = useState({});\n  const [userPoints, setUserPoints] = useState({});\n  const [userMarks, setUserMarks] = useState({});\n  const [loading, setLoading] = useState(true);\n  const [fromDate, setFromDate] = useState(\"\");\n  const [toDate, setToDate] = useState(\"\");\n  const [generated, setGenerated] = useState(false);\n  const [allUsers, setAllUsers] = useState([]);\n  const [view, setView] = useState(\"dashboard\");\n  const [month, setMonth] = useState(new Date().getMonth() + 1);\n  const [year, setYear] = useState(new Date().getFullYear());\n  const [fromDay, setFromDay] = useState(1);\n  const [toDay, setToDay] = useState(1);\n  const defaultSystem = {\n    X: 1,\n    \"0\": 0,\n    B: 0.25,\n    L: 0.35,\n    S: 0.45,\n    \"B/L\": 0.65,\n    \"B/S\": 0.75,\n    \"L/S\": 0.85\n  };\n  const [pointSystem, setPointSystem] = useState(defaultSystem);\n  const todayStr = new Date().toISOString().split(\"T\")[0];\n\n  // Fetch settings + users + meals\n  useEffect(() => {\n    const fetchAll = async () => {\n      try {\n        const settingsRef = doc(db, \"settings\", \"points\");\n        const settingsSnap = await getDoc(settingsRef);\n        if (settingsSnap.exists()) {\n          setPointSystem(settingsSnap.data());\n        } else {\n          await setDoc(settingsRef, defaultSystem);\n        }\n        const usersRef = collection(db, \"users\");\n        const querySnapshot = await getDocs(usersRef);\n        const all = [];\n        const counts = {};\n        const today = new Date();\n        const nextDays = [];\n        for (let i = 0; i < 8; i++) {\n          const d = new Date(today);\n          d.setDate(today.getDate() + i);\n          const dateStr = d.toISOString().split(\"T\")[0];\n          nextDays.push(dateStr);\n          counts[dateStr] = {\n            breakfast: 0,\n            lunch: 0,\n            supper: 0\n          };\n        }\n        querySnapshot.forEach(docSnap => {\n          const data = docSnap.data();\n          all.push(data);\n          const userMeals = data.meals || {};\n          nextDays.forEach(day => {\n            const meals = userMeals[day];\n            if (meals) {\n              [\"breakfast\", \"lunch\", \"supper\"].forEach(meal => {\n                if (meals[meal]) counts[day][meal] += 1;\n              });\n            } else {\n              if (day > todayStr) {\n                counts[day].breakfast += 1;\n                counts[day].lunch += 1;\n                counts[day].supper += 1;\n              }\n            }\n          });\n        });\n        setAllUsers(all);\n        setMealCounts(counts);\n      } catch (err) {\n        console.error(\"Admin data error:\", err);\n      } finally {\n        setLoading(false);\n      }\n    };\n    fetchAll();\n  }, []);\n\n  // Update status\n  const updateUserStatus = async (email, newStatus) => {\n    try {\n      const usersRef = collection(db, \"users\");\n      const q = query(usersRef, where(\"email\", \"==\", email));\n      const snapshot = await getDocs(q);\n      snapshot.forEach(async docSnap => {\n        await updateDoc(doc(db, \"users\", docSnap.id), {\n          status: newStatus\n        });\n      });\n      alert(`✅ User ${email} marked as ${newStatus}`);\n      setAllUsers(prev => prev.map(u => u.email === email ? {\n        ...u,\n        status: newStatus\n      } : u));\n    } catch (err) {\n      console.error(\"Error updating status:\", err);\n    }\n  };\n\n  // Generate report\n  const generateReport = (f, t) => {\n    const from = f || fromDate;\n    const to = t || toDate;\n    if (!from || !to) {\n      alert(\"⚠️ Please select both From and To dates!\");\n      return;\n    }\n    const points = {};\n    const markings = {};\n    allUsers.forEach(user => {\n      if (user.status && user.status !== \"approved\") return;\n      const email = user.email || \"Unknown\";\n      const displayName = user.name || email;\n      const userMeals = user.meals || {};\n      let totalPoints = 0;\n      const userMarkings = {};\n      const mealDates = Object.keys(userMeals).sort();\n      const firstMealDate = mealDates.length > 0 ? mealDates[0] : todayStr;\n      const start = new Date(from);\n      const end = new Date(to);\n      start.setHours(0, 0, 0, 0);\n      end.setHours(0, 0, 0, 0);\n      for (let d = new Date(start.getTime()); d.getTime() <= end.getTime(); d.setDate(d.getDate() + 1)) {\n        var _pointSystem$key;\n        const day = d.toISOString().split(\"T\")[0];\n        let meals = userMeals[day];\n        if (!meals) {\n          if (day > todayStr) {\n            meals = {\n              breakfast: true,\n              lunch: true,\n              supper: true\n            };\n          } else if (day >= firstMealDate) {\n            meals = {\n              breakfast: true,\n              lunch: true,\n              supper: true\n            };\n          } else {\n            userMarkings[day] = \"0\";\n            continue;\n          }\n        }\n        const marked = {\n          B: !!meals.breakfast,\n          L: !!meals.lunch,\n          S: !!meals.supper\n        };\n        const markedArr = [\"B\", \"L\", \"S\"].filter(m => marked[m]);\n        let key;\n        if (markedArr.length === 3) key = \"X\";else if (markedArr.length === 0) key = \"0\";else key = markedArr.join(\"/\");\n        totalPoints += (_pointSystem$key = pointSystem[key]) !== null && _pointSystem$key !== void 0 ? _pointSystem$key : 0;\n        userMarkings[day] = key;\n      }\n      points[displayName] = totalPoints.toFixed(2);\n      markings[displayName] = userMarkings;\n    });\n    setUserPoints(points);\n    setUserMarks(markings);\n    setGenerated(true);\n  };\n\n  // Export CSV\n  const exportCSV = () => {\n    if (!fromDate || !toDate) {\n      alert(\"⚠️ Please generate report first!\");\n      return;\n    }\n    const start = new Date(fromDate);\n    const end = new Date(toDate);\n    const days = [];\n    for (let d = new Date(start.getTime()); d.getTime() <= end.getTime(); d.setDate(d.getDate() + 1)) {\n      days.push(d.toISOString().split(\"T\")[0]);\n    }\n    const rows = [[\"Name\", ...days, \"Total Points\"]];\n    Object.entries(userPoints).forEach(([name, pts]) => {\n      const marks = userMarks[name] || {};\n      const row = [name];\n      days.forEach(day => {\n        row.push(marks[day] || \"0\");\n      });\n      row.push(pts);\n      rows.push(row);\n    });\n    const csvContent = rows.map(r => r.join(\",\")).join(\"\\n\");\n    const blob = new Blob([csvContent], {\n      type: \"text/csv;charset=utf-8;\"\n    });\n    const url = URL.createObjectURL(blob);\n    const a = document.createElement(\"a\");\n    a.href = url;\n    a.setAttribute(\"download\", `points_${fromDate}_to_${toDate}.csv`);\n    document.body.appendChild(a);\n    a.click();\n    document.body.removeChild(a);\n  };\n  if (loading) return /*#__PURE__*/_jsxDEV(\"h2\", {\n    className: \"loading\",\n    children: \"Loading data...\"\n  }, void 0, false, {\n    fileName: _jsxFileName,\n    lineNumber: 245,\n    columnNumber: 23\n  }, this);\n\n  // Points Report Page\n  if (view === \"points\") {\n    return /*#__PURE__*/_jsxDEV(\"div\", {\n      className: \"admin-container\",\n      children: [/*#__PURE__*/_jsxDEV(\"h2\", {\n        className: \"title\",\n        children: \"\\uD83D\\uDCD1 Generate Points Report\"\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 251,\n        columnNumber: 9\n      }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n        className: \"report-filters\",\n        children: [/*#__PURE__*/_jsxDEV(\"label\", {\n          children: [\"Month:\", /*#__PURE__*/_jsxDEV(\"select\", {\n            value: month,\n            onChange: e => setMonth(Number(e.target.value)),\n            children: [\"January\", \"February\", \"March\", \"April\", \"May\", \"June\", \"July\", \"August\", \"September\", \"October\", \"November\", \"December\"].map((m, i) => /*#__PURE__*/_jsxDEV(\"option\", {\n              value: i + 1,\n              children: m\n            }, i, false, {\n              fileName: _jsxFileName,\n              lineNumber: 261,\n              columnNumber: 17\n            }, this))\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 256,\n            columnNumber: 13\n          }, this)]\n        }, void 0, true, {\n          fileName: _jsxFileName,\n          lineNumber: 254,\n          columnNumber: 11\n        }, this), /*#__PURE__*/_jsxDEV(\"label\", {\n          children: [\"Year:\", /*#__PURE__*/_jsxDEV(\"select\", {\n            value: year,\n            onChange: e => setYear(Number(e.target.value)),\n            children: Array.from({\n              length: 6\n            }, (_, i) => 2023 + i).map(y => /*#__PURE__*/_jsxDEV(\"option\", {\n              value: y,\n              children: y\n            }, y, false, {\n              fileName: _jsxFileName,\n              lineNumber: 270,\n              columnNumber: 17\n            }, this))\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 268,\n            columnNumber: 13\n          }, this)]\n        }, void 0, true, {\n          fileName: _jsxFileName,\n          lineNumber: 266,\n          columnNumber: 11\n        }, this), /*#__PURE__*/_jsxDEV(\"label\", {\n          children: [\"From:\", /*#__PURE__*/_jsxDEV(\"select\", {\n            value: fromDay,\n            onChange: e => setFromDay(Number(e.target.value)),\n            children: Array.from({\n              length: 31\n            }, (_, i) => i + 1).map(d => /*#__PURE__*/_jsxDEV(\"option\", {\n              value: d,\n              children: d\n            }, d, false, {\n              fileName: _jsxFileName,\n              lineNumber: 279,\n              columnNumber: 17\n            }, this))\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 277,\n            columnNumber: 13\n          }, this)]\n        }, void 0, true, {\n          fileName: _jsxFileName,\n          lineNumber: 275,\n          columnNumber: 11\n        }, this), /*#__PURE__*/_jsxDEV(\"label\", {\n          children: [\"To:\", /*#__PURE__*/_jsxDEV(\"select\", {\n            value: toDay,\n            onChange: e => setToDay(Number(e.target.value)),\n            children: Array.from({\n              length: 31\n            }, (_, i) => i + 1).map(d => /*#__PURE__*/_jsxDEV(\"option\", {\n              value: d,\n              children: d\n            }, d, false, {\n              fileName: _jsxFileName,\n              lineNumber: 288,\n              columnNumber: 17\n            }, this))\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 286,\n            columnNumber: 13\n          }, this)]\n        }, void 0, true, {\n          fileName: _jsxFileName,\n          lineNumber: 284,\n          columnNumber: 11\n        }, this), /*#__PURE__*/_jsxDEV(\"button\", {\n          className: \"btn generate-btn\",\n          onClick: () => {\n            const f = `${year}-${String(month).padStart(2, \"0\")}-${String(fromDay).padStart(2, \"0\")}`;\n            const t = `${year}-${String(month).padStart(2, \"0\")}-${String(toDay).padStart(2, \"0\")}`;\n            setFromDate(f);\n            setToDate(t);\n            generateReport(f, t); // ✅ no double click needed\n          },\n          children: \"Generate\"\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 293,\n          columnNumber: 11\n        }, this)]\n      }, void 0, true, {\n        fileName: _jsxFileName,\n        lineNumber: 253,\n        columnNumber: 9\n      }, this), generated && /*#__PURE__*/_jsxDEV(_Fragment, {\n        children: [/*#__PURE__*/_jsxDEV(\"table\", {\n          className: \"meal-table\",\n          children: [/*#__PURE__*/_jsxDEV(\"thead\", {\n            children: /*#__PURE__*/_jsxDEV(\"tr\", {\n              children: [/*#__PURE__*/_jsxDEV(\"th\", {\n                children: \"Name\"\n              }, void 0, false, {\n                fileName: _jsxFileName,\n                lineNumber: 311,\n                columnNumber: 21\n              }, this), /*#__PURE__*/_jsxDEV(\"th\", {\n                children: \"Total Points\"\n              }, void 0, false, {\n                fileName: _jsxFileName,\n                lineNumber: 311,\n                columnNumber: 34\n              }, this)]\n            }, void 0, true, {\n              fileName: _jsxFileName,\n              lineNumber: 311,\n              columnNumber: 17\n            }, this)\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 310,\n            columnNumber: 15\n          }, this), /*#__PURE__*/_jsxDEV(\"tbody\", {\n            children: Object.entries(userPoints).map(([name, points]) => /*#__PURE__*/_jsxDEV(\"tr\", {\n              children: [/*#__PURE__*/_jsxDEV(\"td\", {\n                children: name\n              }, void 0, false, {\n                fileName: _jsxFileName,\n                lineNumber: 315,\n                columnNumber: 34\n              }, this), /*#__PURE__*/_jsxDEV(\"td\", {\n                children: points\n              }, void 0, false, {\n                fileName: _jsxFileName,\n                lineNumber: 315,\n                columnNumber: 49\n              }, this)]\n            }, name, true, {\n              fileName: _jsxFileName,\n              lineNumber: 315,\n              columnNumber: 19\n            }, this))\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 313,\n            columnNumber: 15\n          }, this)]\n        }, void 0, true, {\n          fileName: _jsxFileName,\n          lineNumber: 309,\n          columnNumber: 13\n        }, this), /*#__PURE__*/_jsxDEV(\"button\", {\n          className: \"btn export-btn\",\n          onClick: exportCSV,\n          children: \"\\u2B07\\uFE0F Download CSV\"\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 319,\n          columnNumber: 13\n        }, this)]\n      }, void 0, true), /*#__PURE__*/_jsxDEV(\"div\", {\n        className: \"admin-actions\",\n        children: /*#__PURE__*/_jsxDEV(\"button\", {\n          className: \"btn\",\n          onClick: () => setView(\"dashboard\"),\n          children: \"\\u2B05\\uFE0F Back\"\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 324,\n          columnNumber: 11\n        }, this)\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 323,\n        columnNumber: 9\n      }, this)]\n    }, void 0, true, {\n      fileName: _jsxFileName,\n      lineNumber: 250,\n      columnNumber: 7\n    }, this);\n  }\n\n  // Keep your Meals, Requests, Dashboard code the same\n}\n_s(AdminPage, \"afNn8M3rJyiqR4KU4FpfZ7mxZWQ=\");\n_c = AdminPage;\nexport default AdminPage;\nvar _c;\n$RefreshReg$(_c, \"AdminPage\");","map":{"version":3,"names":["React","useEffect","useState","db","collection","getDocs","doc","getDoc","setDoc","updateDoc","query","where","jsxDEV","_jsxDEV","Fragment","_Fragment","AdminPage","onLogout","goToPointSystem","_s","mealCounts","setMealCounts","userPoints","setUserPoints","userMarks","setUserMarks","loading","setLoading","fromDate","setFromDate","toDate","setToDate","generated","setGenerated","allUsers","setAllUsers","view","setView","month","setMonth","Date","getMonth","year","setYear","getFullYear","fromDay","setFromDay","toDay","setToDay","defaultSystem","X","B","L","S","pointSystem","setPointSystem","todayStr","toISOString","split","fetchAll","settingsRef","settingsSnap","exists","data","usersRef","querySnapshot","all","counts","today","nextDays","i","d","setDate","getDate","dateStr","push","breakfast","lunch","supper","forEach","docSnap","userMeals","meals","day","meal","err","console","error","updateUserStatus","email","newStatus","q","snapshot","id","status","alert","prev","map","u","generateReport","f","t","from","to","points","markings","user","displayName","name","totalPoints","userMarkings","mealDates","Object","keys","sort","firstMealDate","length","start","end","setHours","getTime","_pointSystem$key","marked","markedArr","filter","m","key","join","toFixed","exportCSV","days","rows","entries","pts","marks","row","csvContent","r","blob","Blob","type","url","URL","createObjectURL","a","document","createElement","href","setAttribute","body","appendChild","click","removeChild","className","children","fileName","_jsxFileName","lineNumber","columnNumber","value","onChange","e","Number","target","Array","_","y","onClick","String","padStart","_c","$RefreshReg$"],"sources":["C:/Users/mohdn/OneDrive/Desktop/mess-app-starter/src/AdminPage.js"],"sourcesContent":["// AdminPage.js\r\nimport React, { useEffect, useState } from \"react\";\r\nimport { db } from \"./firebase\";\r\nimport {\r\n  collection,\r\n  getDocs,\r\n  doc,\r\n  getDoc,\r\n  setDoc,\r\n  updateDoc,\r\n  query,\r\n  where,\r\n} from \"firebase/firestore\";\r\nimport \"./AdminPage.css\";\r\n\r\nfunction AdminPage({ onLogout, goToPointSystem }) {\r\n  const [mealCounts, setMealCounts] = useState({});\r\n  const [userPoints, setUserPoints] = useState({});\r\n  const [userMarks, setUserMarks] = useState({});\r\n  const [loading, setLoading] = useState(true);\r\n\r\n  const [fromDate, setFromDate] = useState(\"\");\r\n  const [toDate, setToDate] = useState(\"\");\r\n  const [generated, setGenerated] = useState(false);\r\n\r\n  const [allUsers, setAllUsers] = useState([]);\r\n  const [view, setView] = useState(\"dashboard\");\r\n\r\n  const [month, setMonth] = useState(new Date().getMonth() + 1);\r\n  const [year, setYear] = useState(new Date().getFullYear());\r\n  const [fromDay, setFromDay] = useState(1);\r\n  const [toDay, setToDay] = useState(1);\r\n\r\n  const defaultSystem = {\r\n    X: 1,\r\n    \"0\": 0,\r\n    B: 0.25,\r\n    L: 0.35,\r\n    S: 0.45,\r\n    \"B/L\": 0.65,\r\n    \"B/S\": 0.75,\r\n    \"L/S\": 0.85,\r\n  };\r\n  const [pointSystem, setPointSystem] = useState(defaultSystem);\r\n\r\n  const todayStr = new Date().toISOString().split(\"T\")[0];\r\n\r\n  // Fetch settings + users + meals\r\n  useEffect(() => {\r\n    const fetchAll = async () => {\r\n      try {\r\n        const settingsRef = doc(db, \"settings\", \"points\");\r\n        const settingsSnap = await getDoc(settingsRef);\r\n        if (settingsSnap.exists()) {\r\n          setPointSystem(settingsSnap.data());\r\n        } else {\r\n          await setDoc(settingsRef, defaultSystem);\r\n        }\r\n\r\n        const usersRef = collection(db, \"users\");\r\n        const querySnapshot = await getDocs(usersRef);\r\n\r\n        const all = [];\r\n        const counts = {};\r\n        const today = new Date();\r\n\r\n        const nextDays = [];\r\n        for (let i = 0; i < 8; i++) {\r\n          const d = new Date(today);\r\n          d.setDate(today.getDate() + i);\r\n          const dateStr = d.toISOString().split(\"T\")[0];\r\n          nextDays.push(dateStr);\r\n          counts[dateStr] = { breakfast: 0, lunch: 0, supper: 0 };\r\n        }\r\n\r\n        querySnapshot.forEach((docSnap) => {\r\n          const data = docSnap.data();\r\n          all.push(data);\r\n\r\n          const userMeals = data.meals || {};\r\n          nextDays.forEach((day) => {\r\n            const meals = userMeals[day];\r\n            if (meals) {\r\n              [\"breakfast\", \"lunch\", \"supper\"].forEach((meal) => {\r\n                if (meals[meal]) counts[day][meal] += 1;\r\n              });\r\n            } else {\r\n              if (day > todayStr) {\r\n                counts[day].breakfast += 1;\r\n                counts[day].lunch += 1;\r\n                counts[day].supper += 1;\r\n              }\r\n            }\r\n          });\r\n        });\r\n\r\n        setAllUsers(all);\r\n        setMealCounts(counts);\r\n      } catch (err) {\r\n        console.error(\"Admin data error:\", err);\r\n      } finally {\r\n        setLoading(false);\r\n      }\r\n    };\r\n\r\n    fetchAll();\r\n  }, []);\r\n\r\n  // Update status\r\n  const updateUserStatus = async (email, newStatus) => {\r\n    try {\r\n      const usersRef = collection(db, \"users\");\r\n      const q = query(usersRef, where(\"email\", \"==\", email));\r\n      const snapshot = await getDocs(q);\r\n\r\n      snapshot.forEach(async (docSnap) => {\r\n        await updateDoc(doc(db, \"users\", docSnap.id), { status: newStatus });\r\n      });\r\n\r\n      alert(`✅ User ${email} marked as ${newStatus}`);\r\n      setAllUsers((prev) =>\r\n        prev.map((u) => (u.email === email ? { ...u, status: newStatus } : u))\r\n      );\r\n    } catch (err) {\r\n      console.error(\"Error updating status:\", err);\r\n    }\r\n  };\r\n\r\n  // Generate report\r\n  const generateReport = (f, t) => {\r\n    const from = f || fromDate;\r\n    const to = t || toDate;\r\n\r\n    if (!from || !to) {\r\n      alert(\"⚠️ Please select both From and To dates!\");\r\n      return;\r\n    }\r\n\r\n    const points = {};\r\n    const markings = {};\r\n\r\n    allUsers.forEach((user) => {\r\n      if (user.status && user.status !== \"approved\") return;\r\n\r\n      const email = user.email || \"Unknown\";\r\n      const displayName = user.name || email;\r\n      const userMeals = user.meals || {};\r\n      let totalPoints = 0;\r\n      const userMarkings = {};\r\n\r\n      const mealDates = Object.keys(userMeals).sort();\r\n      const firstMealDate = mealDates.length > 0 ? mealDates[0] : todayStr;\r\n\r\n      const start = new Date(from);\r\n      const end = new Date(to);\r\n      start.setHours(0, 0, 0, 0);\r\n      end.setHours(0, 0, 0, 0);\r\n\r\n      for (\r\n        let d = new Date(start.getTime());\r\n        d.getTime() <= end.getTime();\r\n        d.setDate(d.getDate() + 1)\r\n      ) {\r\n        const day = d.toISOString().split(\"T\")[0];\r\n\r\n        let meals = userMeals[day];\r\n        if (!meals) {\r\n          if (day > todayStr) {\r\n            meals = { breakfast: true, lunch: true, supper: true };\r\n          } else if (day >= firstMealDate) {\r\n            meals = { breakfast: true, lunch: true, supper: true };\r\n          } else {\r\n            userMarkings[day] = \"0\";\r\n            continue;\r\n          }\r\n        }\r\n\r\n        const marked = {\r\n          B: !!meals.breakfast,\r\n          L: !!meals.lunch,\r\n          S: !!meals.supper,\r\n        };\r\n        const markedArr = [\"B\", \"L\", \"S\"].filter((m) => marked[m]);\r\n\r\n        let key;\r\n        if (markedArr.length === 3) key = \"X\";\r\n        else if (markedArr.length === 0) key = \"0\";\r\n        else key = markedArr.join(\"/\");\r\n\r\n        totalPoints += pointSystem[key] ?? 0;\r\n        userMarkings[day] = key;\r\n      }\r\n\r\n      points[displayName] = totalPoints.toFixed(2);\r\n      markings[displayName] = userMarkings;\r\n    });\r\n\r\n    setUserPoints(points);\r\n    setUserMarks(markings);\r\n    setGenerated(true);\r\n  };\r\n\r\n  // Export CSV\r\n  const exportCSV = () => {\r\n    if (!fromDate || !toDate) {\r\n      alert(\"⚠️ Please generate report first!\");\r\n      return;\r\n    }\r\n\r\n    const start = new Date(fromDate);\r\n    const end = new Date(toDate);\r\n    const days = [];\r\n    for (\r\n      let d = new Date(start.getTime());\r\n      d.getTime() <= end.getTime();\r\n      d.setDate(d.getDate() + 1)\r\n    ) {\r\n      days.push(d.toISOString().split(\"T\")[0]);\r\n    }\r\n\r\n    const rows = [[\"Name\", ...days, \"Total Points\"]];\r\n\r\n    Object.entries(userPoints).forEach(([name, pts]) => {\r\n      const marks = userMarks[name] || {};\r\n      const row = [name];\r\n      days.forEach((day) => {\r\n        row.push(marks[day] || \"0\");\r\n      });\r\n      row.push(pts);\r\n      rows.push(row);\r\n    });\r\n\r\n    const csvContent = rows.map((r) => r.join(\",\")).join(\"\\n\");\r\n    const blob = new Blob([csvContent], { type: \"text/csv;charset=utf-8;\" });\r\n\r\n    const url = URL.createObjectURL(blob);\r\n    const a = document.createElement(\"a\");\r\n    a.href = url;\r\n    a.setAttribute(\"download\", `points_${fromDate}_to_${toDate}.csv`);\r\n    document.body.appendChild(a);\r\n    a.click();\r\n    document.body.removeChild(a);\r\n  };\r\n\r\n  if (loading) return <h2 className=\"loading\">Loading data...</h2>;\r\n\r\n  // Points Report Page\r\n  if (view === \"points\") {\r\n    return (\r\n      <div className=\"admin-container\">\r\n        <h2 className=\"title\">📑 Generate Points Report</h2>\r\n\r\n        <div className=\"report-filters\">\r\n          <label>\r\n            Month:\r\n            <select value={month} onChange={(e) => setMonth(Number(e.target.value))}>\r\n              {[\r\n                \"January\",\"February\",\"March\",\"April\",\"May\",\"June\",\r\n                \"July\",\"August\",\"September\",\"October\",\"November\",\"December\"\r\n              ].map((m, i) => (\r\n                <option key={i} value={i+1}>{m}</option>\r\n              ))}\r\n            </select>\r\n          </label>\r\n\r\n          <label>\r\n            Year:\r\n            <select value={year} onChange={(e) => setYear(Number(e.target.value))}>\r\n              {Array.from({length: 6}, (_,i) => 2023+i).map((y) => (\r\n                <option key={y} value={y}>{y}</option>\r\n              ))}\r\n            </select>\r\n          </label>\r\n\r\n          <label>\r\n            From:\r\n            <select value={fromDay} onChange={(e) => setFromDay(Number(e.target.value))}>\r\n              {Array.from({length: 31}, (_,i) => i+1).map((d) => (\r\n                <option key={d} value={d}>{d}</option>\r\n              ))}\r\n            </select>\r\n          </label>\r\n\r\n          <label>\r\n            To:\r\n            <select value={toDay} onChange={(e) => setToDay(Number(e.target.value))}>\r\n              {Array.from({length: 31}, (_,i) => i+1).map((d) => (\r\n                <option key={d} value={d}>{d}</option>\r\n              ))}\r\n            </select>\r\n          </label>\r\n\r\n          <button\r\n            className=\"btn generate-btn\"\r\n            onClick={() => {\r\n              const f = `${year}-${String(month).padStart(2,\"0\")}-${String(fromDay).padStart(2,\"0\")}`;\r\n              const t = `${year}-${String(month).padStart(2,\"0\")}-${String(toDay).padStart(2,\"0\")}`;\r\n              setFromDate(f);\r\n              setToDate(t);\r\n              generateReport(f, t); // ✅ no double click needed\r\n            }}\r\n          >\r\n            Generate\r\n          </button>\r\n        </div>\r\n\r\n        {generated && (\r\n          <>\r\n            <table className=\"meal-table\">\r\n              <thead>\r\n                <tr><th>Name</th><th>Total Points</th></tr>\r\n              </thead>\r\n              <tbody>\r\n                {Object.entries(userPoints).map(([name, points]) => (\r\n                  <tr key={name}><td>{name}</td><td>{points}</td></tr>\r\n                ))}\r\n              </tbody>\r\n            </table>\r\n            <button className=\"btn export-btn\" onClick={exportCSV}>⬇️ Download CSV</button>\r\n          </>\r\n        )}\r\n\r\n        <div className=\"admin-actions\">\r\n          <button className=\"btn\" onClick={() => setView(\"dashboard\")}>⬅️ Back</button>\r\n        </div>\r\n      </div>\r\n    );\r\n  }\r\n\r\n  // Keep your Meals, Requests, Dashboard code the same\r\n}\r\n\r\nexport default AdminPage;\r\n"],"mappings":"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","ignoreList":[]},"metadata":{},"sourceType":"module","externalDependencies":[]}