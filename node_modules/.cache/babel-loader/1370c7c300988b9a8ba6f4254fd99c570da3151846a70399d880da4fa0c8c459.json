{"ast":null,"code":"var _jsxFileName = \"C:\\\\Users\\\\mohdn\\\\OneDrive\\\\Desktop\\\\mess-app-starter\\\\src\\\\App.js\",\n  _s = $RefreshSig$();\nimport { useState, useEffect } from \"react\";\nimport { auth, db } from \"./firebase\";\nimport { signOut, onAuthStateChanged, sendPasswordResetEmail } from \"firebase/auth\";\nimport { doc, getDoc } from \"firebase/firestore\";\nimport LoginPage from \"./LoginPage\";\nimport SignupPage from \"./SignupPage\";\nimport AdminPage from \"./AdminPage\";\nimport StudentPage from \"./StudentPage\";\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\nfunction App() {\n  _s();\n  const [currentUser, setCurrentUser] = useState(null);\n  const [userRole, setUserRole] = useState(null);\n  const [loading, setLoading] = useState(true);\n  const [showSignup, setShowSignup] = useState(false);\n\n  // ðŸ”¹ Listen for login state\n  useEffect(() => {\n    const unsubscribe = onAuthStateChanged(auth, async user => {\n      if (user) {\n        setCurrentUser(user);\n\n        // get role from Firestore\n        const docRef = doc(db, \"users\", user.uid);\n        const docSnap = await getDoc(docRef);\n        if (docSnap.exists()) {\n          setUserRole(docSnap.data().role || \"student\");\n        } else {\n          setUserRole(\"student\");\n        }\n      } else {\n        setCurrentUser(null);\n        setUserRole(null);\n      }\n      setLoading(false);\n    });\n    return () => unsubscribe();\n  }, []);\n\n  // ðŸ”¹ Handle Logout\n  const handleLogout = async () => {\n    await signOut(auth);\n  };\n\n  // ðŸ”¹ Forgot Password\n  const handleForgotPassword = async email => {\n    try {\n      await sendPasswordResetEmail(auth, email);\n      alert(\"Password reset email sent!\");\n    } catch (err) {\n      alert(err.message);\n    }\n  };\n\n  // ðŸ”¹ Loading screen\n  if (loading) {\n    return /*#__PURE__*/_jsxDEV(\"h2\", {\n      children: \"Loading...\"\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 61,\n      columnNumber: 12\n    }, this);\n  }\n\n  // ðŸ”¹ If not logged in â†’ Show Login / Signup\n  if (!currentUser) {\n    return showSignup ? /*#__PURE__*/_jsxDEV(SignupPage, {\n      onSignupSuccess: () => setShowSignup(false),\n      goToLogin: () => setShowSignup(false)\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 67,\n      columnNumber: 7\n    }, this) : /*#__PURE__*/_jsxDEV(LoginPage, {\n      onLoginSuccess: () => {},\n      goToSignup: () => setShowSignup(true),\n      onForgotPassword: handleForgotPassword\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 72,\n      columnNumber: 7\n    }, this);\n  }\n\n  // ðŸ”¹ If logged in as Admin â†’ Show AdminPage\n  if (userRole === \"admin\") {\n    return /*#__PURE__*/_jsxDEV(\"div\", {\n      children: /*#__PURE__*/_jsxDEV(AdminPage, {}, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 84,\n        columnNumber: 9\n      }, this)\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 83,\n      columnNumber: 7\n    }, this);\n  }\n\n  // ðŸ”¹ If logged in as Student â†’ Show StudentPage\n  return /*#__PURE__*/_jsxDEV(\"div\", {\n    children: [/*#__PURE__*/_jsxDEV(StudentPage, {\n      currentUser: currentUser\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 92,\n      columnNumber: 7\n    }, this), /*#__PURE__*/_jsxDEV(\"button\", {\n      onClick: handleLogout,\n      children: \"Logout\"\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 93,\n      columnNumber: 7\n    }, this)]\n  }, void 0, true, {\n    fileName: _jsxFileName,\n    lineNumber: 91,\n    columnNumber: 5\n  }, this);\n}\n_s(App, \"Y4Uv8VsGiHYiYZjaDhwTw6kTlec=\");\n_c = App;\nexport default App;\nvar _c;\n$RefreshReg$(_c, \"App\");","map":{"version":3,"names":["useState","useEffect","auth","db","signOut","onAuthStateChanged","sendPasswordResetEmail","doc","getDoc","LoginPage","SignupPage","AdminPage","StudentPage","jsxDEV","_jsxDEV","App","_s","currentUser","setCurrentUser","userRole","setUserRole","loading","setLoading","showSignup","setShowSignup","unsubscribe","user","docRef","uid","docSnap","exists","data","role","handleLogout","handleForgotPassword","email","alert","err","message","children","fileName","_jsxFileName","lineNumber","columnNumber","onSignupSuccess","goToLogin","onLoginSuccess","goToSignup","onForgotPassword","onClick","_c","$RefreshReg$"],"sources":["C:/Users/mohdn/OneDrive/Desktop/mess-app-starter/src/App.js"],"sourcesContent":["import { useState, useEffect } from \"react\";\r\nimport { auth, db } from \"./firebase\";\r\nimport {\r\n  signOut,\r\n  onAuthStateChanged,\r\n  sendPasswordResetEmail,\r\n} from \"firebase/auth\";\r\nimport { doc, getDoc } from \"firebase/firestore\";\r\nimport LoginPage from \"./LoginPage\";\r\nimport SignupPage from \"./SignupPage\";\r\nimport AdminPage from \"./AdminPage\";\r\nimport StudentPage from \"./StudentPage\";\r\n\r\nfunction App() {\r\n  const [currentUser, setCurrentUser] = useState(null);\r\n  const [userRole, setUserRole] = useState(null);\r\n  const [loading, setLoading] = useState(true);\r\n  const [showSignup, setShowSignup] = useState(false);\r\n\r\n  // ðŸ”¹ Listen for login state\r\n  useEffect(() => {\r\n    const unsubscribe = onAuthStateChanged(auth, async (user) => {\r\n      if (user) {\r\n        setCurrentUser(user);\r\n\r\n        // get role from Firestore\r\n        const docRef = doc(db, \"users\", user.uid);\r\n        const docSnap = await getDoc(docRef);\r\n\r\n        if (docSnap.exists()) {\r\n          setUserRole(docSnap.data().role || \"student\");\r\n        } else {\r\n          setUserRole(\"student\");\r\n        }\r\n      } else {\r\n        setCurrentUser(null);\r\n        setUserRole(null);\r\n      }\r\n      setLoading(false);\r\n    });\r\n    return () => unsubscribe();\r\n  }, []);\r\n\r\n  // ðŸ”¹ Handle Logout\r\n  const handleLogout = async () => {\r\n    await signOut(auth);\r\n  };\r\n\r\n  // ðŸ”¹ Forgot Password\r\n  const handleForgotPassword = async (email) => {\r\n    try {\r\n      await sendPasswordResetEmail(auth, email);\r\n      alert(\"Password reset email sent!\");\r\n    } catch (err) {\r\n      alert(err.message);\r\n    }\r\n  };\r\n\r\n  // ðŸ”¹ Loading screen\r\n  if (loading) {\r\n    return <h2>Loading...</h2>;\r\n  }\r\n\r\n  // ðŸ”¹ If not logged in â†’ Show Login / Signup\r\n  if (!currentUser) {\r\n    return showSignup ? (\r\n      <SignupPage\r\n        onSignupSuccess={() => setShowSignup(false)}\r\n        goToLogin={() => setShowSignup(false)}\r\n      />\r\n    ) : (\r\n      <LoginPage\r\n        onLoginSuccess={() => {}}\r\n        goToSignup={() => setShowSignup(true)}\r\n        onForgotPassword={handleForgotPassword}\r\n      />\r\n    );\r\n  }\r\n\r\n  // ðŸ”¹ If logged in as Admin â†’ Show AdminPage\r\n  if (userRole === \"admin\") {\r\n    return (\r\n      <div>\r\n        <AdminPage />\r\n      </div>\r\n    );\r\n  }\r\n\r\n  // ðŸ”¹ If logged in as Student â†’ Show StudentPage\r\n  return (\r\n    <div>\r\n      <StudentPage currentUser={currentUser} />\r\n      <button onClick={handleLogout}>Logout</button>\r\n    </div>\r\n  );\r\n}\r\n\r\nexport default App;\r\n"],"mappings":"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","ignoreList":[]},"metadata":{},"sourceType":"module","externalDependencies":[]}