{"ast":null,"code":"var _jsxFileName = \"C:\\\\Users\\\\mohdn\\\\OneDrive\\\\Desktop\\\\mess-app-starter\\\\src\\\\AdminPage.js\",\n  _s = $RefreshSig$();\n// AdminPage.js\nimport React, { useEffect, useState } from \"react\";\nimport { db } from \"./firebase\";\nimport { collection, getDocs, doc, getDoc, setDoc, updateDoc, query, where } from \"firebase/firestore\";\nimport \"./AdminPage.css\";\nimport { jsxDEV as _jsxDEV, Fragment as _Fragment } from \"react/jsx-dev-runtime\";\nfunction AdminPage({\n  onLogout,\n  goToPointSystem\n}) {\n  _s();\n  const [mealCounts, setMealCounts] = useState({});\n  const [userPoints, setUserPoints] = useState({});\n  const [loading, setLoading] = useState(true);\n  const [month, setMonth] = useState(\"September\");\n  const [fromDate, setFromDate] = useState(1);\n  const [toDate, setToDate] = useState(30);\n  const [year, setYear] = useState(new Date().getFullYear());\n  const [generated, setGenerated] = useState(false);\n  const [allUsers, setAllUsers] = useState([]);\n  const [view, setView] = useState(\"dashboard\");\n  const defaultSystem = {\n    X: 1,\n    \"0\": 0,\n    B: 0.25,\n    L: 0.35,\n    S: 0.45,\n    \"B/L\": 0.65,\n    \"B/S\": 0.75,\n    \"L/S\": 0.85\n  };\n  const [pointSystem, setPointSystem] = useState(defaultSystem);\n\n  // fetch settings + users + meal counts\n  useEffect(() => {\n    const fetchAll = async () => {\n      try {\n        const settingsRef = doc(db, \"settings\", \"points\");\n        const settingsSnap = await getDoc(settingsRef);\n        if (settingsSnap.exists()) {\n          setPointSystem(settingsSnap.data());\n        } else {\n          await setDoc(settingsRef, defaultSystem);\n        }\n        const usersRef = collection(db, \"users\");\n        const querySnapshot = await getDocs(usersRef);\n        const all = [];\n        const counts = {};\n        const today = new Date();\n        const nextDays = [];\n        for (let i = 0; i < 8; i++) {\n          const d = new Date(today);\n          d.setDate(today.getDate() + i);\n          const dateStr = d.toISOString().split(\"T\")[0];\n          nextDays.push(dateStr);\n          counts[dateStr] = {\n            breakfast: 0,\n            lunch: 0,\n            supper: 0\n          };\n        }\n        querySnapshot.forEach(docSnap => {\n          const data = docSnap.data();\n          all.push(data);\n          const userMeals = data.meals || {};\n          nextDays.forEach(day => {\n            const meals = userMeals[day];\n            if (meals) {\n              [\"breakfast\", \"lunch\", \"supper\"].forEach(meal => {\n                if (meals[meal]) counts[day][meal] += 1;\n              });\n            } else {\n              const todayStr = new Date().toISOString().split(\"T\")[0];\n              if (day > todayStr) {\n                counts[day].breakfast += 1;\n                counts[day].lunch += 1;\n                counts[day].supper += 1;\n              }\n            }\n          });\n        });\n        setAllUsers(all);\n        setMealCounts(counts);\n      } catch (err) {\n        console.error(\"Admin data error:\", err);\n      } finally {\n        setLoading(false);\n      }\n    };\n    fetchAll();\n  }, []);\n  const updateUserStatus = async (email, newStatus) => {\n    try {\n      const usersRef = collection(db, \"users\");\n      const q = query(usersRef, where(\"email\", \"==\", email));\n      const snapshot = await getDocs(q);\n      snapshot.forEach(async docSnap => {\n        await updateDoc(doc(db, \"users\", docSnap.id), {\n          status: newStatus\n        });\n      });\n      alert(`✅ User ${email} marked as ${newStatus}`);\n      setAllUsers(prev => prev.map(u => u.email === email ? {\n        ...u,\n        status: newStatus\n      } : u));\n    } catch (err) {\n      console.error(\"Error updating status:\", err);\n    }\n  };\n  const generateReport = () => {\n    if (!fromDate || !toDate) {\n      alert(\"⚠️ Please select both From and To dates!\");\n      return;\n    }\n    const points = {};\n    const todayStr = new Date().toISOString().split(\"T\")[0];\n\n    // month name → index\n    const monthIndex = [\"January\", \"February\", \"March\", \"April\", \"May\", \"June\", \"July\", \"August\", \"September\", \"October\", \"November\", \"December\"].indexOf(month);\n    const start = new Date(year, monthIndex, fromDate);\n    const end = new Date(year, monthIndex, toDate);\n    start.setHours(0, 0, 0, 0);\n    end.setHours(0, 0, 0, 0);\n    allUsers.forEach(user => {\n      if (user.status && user.status !== \"approved\") return;\n      const email = user.email || \"Unknown\";\n      const userMeals = user.meals || {};\n      let totalPoints = 0;\n      const mealDates = Object.keys(userMeals).sort();\n      const firstMealDate = mealDates.length > 0 ? mealDates[0] : todayStr;\n      for (let d = new Date(start.getTime()); d.getTime() <= end.getTime(); d.setDate(d.getDate() + 1)) {\n        var _pointSystem$key;\n        const day = d.toISOString().split(\"T\")[0];\n        let meals = userMeals[day];\n        if (!meals) {\n          if (day > todayStr) {\n            meals = {\n              breakfast: true,\n              lunch: true,\n              supper: true\n            };\n          } else if (day >= firstMealDate) {\n            meals = {\n              breakfast: true,\n              lunch: true,\n              supper: true\n            };\n          } else {\n            continue;\n          }\n        }\n        const marked = {\n          B: !!meals.breakfast,\n          L: !!meals.lunch,\n          S: !!meals.supper\n        };\n        const markedArr = [\"B\", \"L\", \"S\"].filter(m => marked[m]);\n        let key;\n        if (markedArr.length === 3) key = \"X\";else if (markedArr.length === 0) key = \"0\";else key = markedArr.join(\"/\");\n        totalPoints += (_pointSystem$key = pointSystem[key]) !== null && _pointSystem$key !== void 0 ? _pointSystem$key : 0;\n      }\n      points[email] = totalPoints.toFixed(2);\n    });\n    setUserPoints(points);\n    setGenerated(true);\n  };\n  const exportCSV = () => {\n    const rows = [[\"Email\", \"Points\"]];\n    Object.entries(userPoints).forEach(([email, pts]) => {\n      rows.push([email, pts]);\n    });\n    const csvContent = rows.map(r => r.join(\",\")).join(\"\\n\");\n    const blob = new Blob([csvContent], {\n      type: \"text/csv;charset=utf-8;\"\n    });\n    const url = URL.createObjectURL(blob);\n    const a = document.createElement(\"a\");\n    a.href = url;\n    a.setAttribute(\"download\", `points_${month}_${fromDate}_to_${toDate}_${year}.csv`);\n    document.body.appendChild(a);\n    a.click();\n    document.body.removeChild(a);\n  };\n  if (loading) return /*#__PURE__*/_jsxDEV(\"h2\", {\n    className: \"loading\",\n    children: \"Loading data...\"\n  }, void 0, false, {\n    fileName: _jsxFileName,\n    lineNumber: 215,\n    columnNumber: 23\n  }, this);\n\n  // Points report page\n  if (view === \"points\") {\n    return /*#__PURE__*/_jsxDEV(\"div\", {\n      className: \"admin-container\",\n      children: [/*#__PURE__*/_jsxDEV(\"h2\", {\n        className: \"title\",\n        children: \"\\uD83D\\uDCD1 Generate Points Report\"\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 221,\n        columnNumber: 9\n      }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n        className: \"report-filters\",\n        children: [/*#__PURE__*/_jsxDEV(\"select\", {\n          value: month,\n          onChange: e => setMonth(e.target.value),\n          children: [\"January\", \"February\", \"March\", \"April\", \"May\", \"June\", \"July\", \"August\", \"September\", \"October\", \"November\", \"December\"].map(m => /*#__PURE__*/_jsxDEV(\"option\", {\n            value: m,\n            children: m\n          }, m, false, {\n            fileName: _jsxFileName,\n            lineNumber: 229,\n            columnNumber: 15\n          }, this))\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 224,\n          columnNumber: 11\n        }, this), /*#__PURE__*/_jsxDEV(\"select\", {\n          value: fromDate,\n          onChange: e => setFromDate(Number(e.target.value)),\n          children: Array.from({\n            length: 31\n          }, (_, i) => /*#__PURE__*/_jsxDEV(\"option\", {\n            value: i + 1,\n            children: i + 1\n          }, i + 1, false, {\n            fileName: _jsxFileName,\n            lineNumber: 236,\n            columnNumber: 15\n          }, this))\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 234,\n          columnNumber: 11\n        }, this), /*#__PURE__*/_jsxDEV(\"select\", {\n          value: toDate,\n          onChange: e => setToDate(Number(e.target.value)),\n          children: Array.from({\n            length: 31\n          }, (_, i) => /*#__PURE__*/_jsxDEV(\"option\", {\n            value: i + 1,\n            children: i + 1\n          }, i + 1, false, {\n            fileName: _jsxFileName,\n            lineNumber: 243,\n            columnNumber: 15\n          }, this))\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 241,\n          columnNumber: 11\n        }, this), /*#__PURE__*/_jsxDEV(\"select\", {\n          value: year,\n          onChange: e => setYear(Number(e.target.value)),\n          children: Array.from({\n            length: 6\n          }, (_, i) => {\n            const y = 2023 + i;\n            return /*#__PURE__*/_jsxDEV(\"option\", {\n              value: y,\n              children: y\n            }, y, false, {\n              fileName: _jsxFileName,\n              lineNumber: 251,\n              columnNumber: 22\n            }, this);\n          })\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 248,\n          columnNumber: 11\n        }, this), /*#__PURE__*/_jsxDEV(\"button\", {\n          className: \"btn generate-btn\",\n          onClick: generateReport,\n          children: \"Generate\"\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 255,\n          columnNumber: 11\n        }, this)]\n      }, void 0, true, {\n        fileName: _jsxFileName,\n        lineNumber: 222,\n        columnNumber: 9\n      }, this), generated && /*#__PURE__*/_jsxDEV(_Fragment, {\n        children: [/*#__PURE__*/_jsxDEV(\"table\", {\n          className: \"meal-table\",\n          children: [/*#__PURE__*/_jsxDEV(\"thead\", {\n            children: /*#__PURE__*/_jsxDEV(\"tr\", {\n              children: [/*#__PURE__*/_jsxDEV(\"th\", {\n                children: \"Email\"\n              }, void 0, false, {\n                fileName: _jsxFileName,\n                lineNumber: 263,\n                columnNumber: 21\n              }, this), /*#__PURE__*/_jsxDEV(\"th\", {\n                children: \"Total Points\"\n              }, void 0, false, {\n                fileName: _jsxFileName,\n                lineNumber: 263,\n                columnNumber: 35\n              }, this)]\n            }, void 0, true, {\n              fileName: _jsxFileName,\n              lineNumber: 263,\n              columnNumber: 17\n            }, this)\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 262,\n            columnNumber: 15\n          }, this), /*#__PURE__*/_jsxDEV(\"tbody\", {\n            children: Object.entries(userPoints).map(([email, points]) => /*#__PURE__*/_jsxDEV(\"tr\", {\n              children: [/*#__PURE__*/_jsxDEV(\"td\", {\n                children: email\n              }, void 0, false, {\n                fileName: _jsxFileName,\n                lineNumber: 267,\n                columnNumber: 35\n              }, this), /*#__PURE__*/_jsxDEV(\"td\", {\n                children: points\n              }, void 0, false, {\n                fileName: _jsxFileName,\n                lineNumber: 267,\n                columnNumber: 51\n              }, this)]\n            }, email, true, {\n              fileName: _jsxFileName,\n              lineNumber: 267,\n              columnNumber: 19\n            }, this))\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 265,\n            columnNumber: 15\n          }, this)]\n        }, void 0, true, {\n          fileName: _jsxFileName,\n          lineNumber: 261,\n          columnNumber: 13\n        }, this), /*#__PURE__*/_jsxDEV(\"button\", {\n          className: \"btn export-btn\",\n          onClick: exportCSV,\n          children: \"\\u2B07\\uFE0F Download CSV\"\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 271,\n          columnNumber: 13\n        }, this)]\n      }, void 0, true), /*#__PURE__*/_jsxDEV(\"div\", {\n        className: \"admin-actions\",\n        children: /*#__PURE__*/_jsxDEV(\"button\", {\n          className: \"btn\",\n          onClick: () => setView(\"dashboard\"),\n          children: \"\\u2B05\\uFE0F Back\"\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 277,\n          columnNumber: 11\n        }, this)\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 276,\n        columnNumber: 9\n      }, this)]\n    }, void 0, true, {\n      fileName: _jsxFileName,\n      lineNumber: 220,\n      columnNumber: 7\n    }, this);\n  }\n\n  // Requests + Meals + Dashboard remain same…\n  // (kept unchanged from your code above)\n\n  const todayStr = new Date().toISOString().split(\"T\")[0];\n  const todayMeals = mealCounts[todayStr] || {\n    breakfast: 0,\n    lunch: 0,\n    supper: 0\n  };\n  return /*#__PURE__*/_jsxDEV(\"div\", {\n    className: \"admin-container\",\n    children: [/*#__PURE__*/_jsxDEV(\"h2\", {\n      className: \"title\",\n      children: \"\\uD83D\\uDCCA Admin Dashboard\"\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 293,\n      columnNumber: 7\n    }, this), /*#__PURE__*/_jsxDEV(\"h3\", {\n      children: \"\\uD83C\\uDF7D\\uFE0F Today\\u2019s Meal Count\"\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 295,\n      columnNumber: 7\n    }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n      className: \"today-meals\",\n      children: [/*#__PURE__*/_jsxDEV(\"p\", {\n        children: [\"\\uD83C\\uDF73 Breakfast: \", /*#__PURE__*/_jsxDEV(\"strong\", {\n          children: todayMeals.breakfast\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 297,\n          columnNumber: 26\n        }, this)]\n      }, void 0, true, {\n        fileName: _jsxFileName,\n        lineNumber: 297,\n        columnNumber: 9\n      }, this), /*#__PURE__*/_jsxDEV(\"p\", {\n        children: [\"\\uD83E\\uDD57 Lunch: \", /*#__PURE__*/_jsxDEV(\"strong\", {\n          children: todayMeals.lunch\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 298,\n          columnNumber: 22\n        }, this)]\n      }, void 0, true, {\n        fileName: _jsxFileName,\n        lineNumber: 298,\n        columnNumber: 9\n      }, this), /*#__PURE__*/_jsxDEV(\"p\", {\n        children: [\"\\uD83C\\uDF5B Supper: \", /*#__PURE__*/_jsxDEV(\"strong\", {\n          children: todayMeals.supper\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 299,\n          columnNumber: 23\n        }, this)]\n      }, void 0, true, {\n        fileName: _jsxFileName,\n        lineNumber: 299,\n        columnNumber: 9\n      }, this)]\n    }, void 0, true, {\n      fileName: _jsxFileName,\n      lineNumber: 296,\n      columnNumber: 7\n    }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n      className: \"admin-actions\",\n      children: [/*#__PURE__*/_jsxDEV(\"button\", {\n        className: \"btn points-btn\",\n        onClick: goToPointSystem,\n        children: \"\\u2699\\uFE0F Point System\"\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 303,\n        columnNumber: 9\n      }, this), /*#__PURE__*/_jsxDEV(\"button\", {\n        className: \"btn\",\n        onClick: () => setView(\"points\"),\n        children: \"\\uD83D\\uDCD1 Points Report\"\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 304,\n        columnNumber: 9\n      }, this), /*#__PURE__*/_jsxDEV(\"button\", {\n        className: \"btn\",\n        onClick: () => setView(\"requests\"),\n        children: \"\\uD83D\\uDC65 User Requests\"\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 305,\n        columnNumber: 9\n      }, this), /*#__PURE__*/_jsxDEV(\"button\", {\n        className: \"btn\",\n        onClick: () => setView(\"meals\"),\n        children: \"\\uD83E\\uDD58 Meal Counts\"\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 306,\n        columnNumber: 9\n      }, this), /*#__PURE__*/_jsxDEV(\"button\", {\n        className: \"logout-btn\",\n        onClick: onLogout,\n        children: \"Logout\"\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 307,\n        columnNumber: 9\n      }, this)]\n    }, void 0, true, {\n      fileName: _jsxFileName,\n      lineNumber: 302,\n      columnNumber: 7\n    }, this)]\n  }, void 0, true, {\n    fileName: _jsxFileName,\n    lineNumber: 292,\n    columnNumber: 5\n  }, this);\n}\n_s(AdminPage, \"A4a4cxQHaLGK/5fBU1VLzy/15nw=\");\n_c = AdminPage;\nexport default AdminPage;\nvar _c;\n$RefreshReg$(_c, \"AdminPage\");","map":{"version":3,"names":["React","useEffect","useState","db","collection","getDocs","doc","getDoc","setDoc","updateDoc","query","where","jsxDEV","_jsxDEV","Fragment","_Fragment","AdminPage","onLogout","goToPointSystem","_s","mealCounts","setMealCounts","userPoints","setUserPoints","loading","setLoading","month","setMonth","fromDate","setFromDate","toDate","setToDate","year","setYear","Date","getFullYear","generated","setGenerated","allUsers","setAllUsers","view","setView","defaultSystem","X","B","L","S","pointSystem","setPointSystem","fetchAll","settingsRef","settingsSnap","exists","data","usersRef","querySnapshot","all","counts","today","nextDays","i","d","setDate","getDate","dateStr","toISOString","split","push","breakfast","lunch","supper","forEach","docSnap","userMeals","meals","day","meal","todayStr","err","console","error","updateUserStatus","email","newStatus","q","snapshot","id","status","alert","prev","map","u","generateReport","points","monthIndex","indexOf","start","end","setHours","user","totalPoints","mealDates","Object","keys","sort","firstMealDate","length","getTime","_pointSystem$key","marked","markedArr","filter","m","key","join","toFixed","exportCSV","rows","entries","pts","csvContent","r","blob","Blob","type","url","URL","createObjectURL","a","document","createElement","href","setAttribute","body","appendChild","click","removeChild","className","children","fileName","_jsxFileName","lineNumber","columnNumber","value","onChange","e","target","Number","Array","from","_","y","onClick","todayMeals","_c","$RefreshReg$"],"sources":["C:/Users/mohdn/OneDrive/Desktop/mess-app-starter/src/AdminPage.js"],"sourcesContent":["// AdminPage.js\r\nimport React, { useEffect, useState } from \"react\";\r\nimport { db } from \"./firebase\";\r\nimport {\r\n  collection,\r\n  getDocs,\r\n  doc,\r\n  getDoc,\r\n  setDoc,\r\n  updateDoc,\r\n  query,\r\n  where,\r\n} from \"firebase/firestore\";\r\nimport \"./AdminPage.css\";\r\n\r\nfunction AdminPage({ onLogout, goToPointSystem }) {\r\n  const [mealCounts, setMealCounts] = useState({});\r\n  const [userPoints, setUserPoints] = useState({});\r\n  const [loading, setLoading] = useState(true);\r\n\r\n  const [month, setMonth] = useState(\"September\");\r\n  const [fromDate, setFromDate] = useState(1);\r\n  const [toDate, setToDate] = useState(30);\r\n  const [year, setYear] = useState(new Date().getFullYear());\r\n  const [generated, setGenerated] = useState(false);\r\n\r\n  const [allUsers, setAllUsers] = useState([]);\r\n  const [view, setView] = useState(\"dashboard\");\r\n\r\n  const defaultSystem = {\r\n    X: 1,\r\n    \"0\": 0,\r\n    B: 0.25,\r\n    L: 0.35,\r\n    S: 0.45,\r\n    \"B/L\": 0.65,\r\n    \"B/S\": 0.75,\r\n    \"L/S\": 0.85,\r\n  };\r\n  const [pointSystem, setPointSystem] = useState(defaultSystem);\r\n\r\n  // fetch settings + users + meal counts\r\n  useEffect(() => {\r\n    const fetchAll = async () => {\r\n      try {\r\n        const settingsRef = doc(db, \"settings\", \"points\");\r\n        const settingsSnap = await getDoc(settingsRef);\r\n        if (settingsSnap.exists()) {\r\n          setPointSystem(settingsSnap.data());\r\n        } else {\r\n          await setDoc(settingsRef, defaultSystem);\r\n        }\r\n\r\n        const usersRef = collection(db, \"users\");\r\n        const querySnapshot = await getDocs(usersRef);\r\n\r\n        const all = [];\r\n        const counts = {};\r\n        const today = new Date();\r\n\r\n        const nextDays = [];\r\n        for (let i = 0; i < 8; i++) {\r\n          const d = new Date(today);\r\n          d.setDate(today.getDate() + i);\r\n          const dateStr = d.toISOString().split(\"T\")[0];\r\n          nextDays.push(dateStr);\r\n          counts[dateStr] = { breakfast: 0, lunch: 0, supper: 0 };\r\n        }\r\n\r\n        querySnapshot.forEach((docSnap) => {\r\n          const data = docSnap.data();\r\n          all.push(data);\r\n\r\n          const userMeals = data.meals || {};\r\n          nextDays.forEach((day) => {\r\n            const meals = userMeals[day];\r\n            if (meals) {\r\n              [\"breakfast\", \"lunch\", \"supper\"].forEach((meal) => {\r\n                if (meals[meal]) counts[day][meal] += 1;\r\n              });\r\n            } else {\r\n              const todayStr = new Date().toISOString().split(\"T\")[0];\r\n              if (day > todayStr) {\r\n                counts[day].breakfast += 1;\r\n                counts[day].lunch += 1;\r\n                counts[day].supper += 1;\r\n              }\r\n            }\r\n          });\r\n        });\r\n\r\n        setAllUsers(all);\r\n        setMealCounts(counts);\r\n      } catch (err) {\r\n        console.error(\"Admin data error:\", err);\r\n      } finally {\r\n        setLoading(false);\r\n      }\r\n    };\r\n\r\n    fetchAll();\r\n  }, []);\r\n\r\n  const updateUserStatus = async (email, newStatus) => {\r\n    try {\r\n      const usersRef = collection(db, \"users\");\r\n      const q = query(usersRef, where(\"email\", \"==\", email));\r\n      const snapshot = await getDocs(q);\r\n\r\n      snapshot.forEach(async (docSnap) => {\r\n        await updateDoc(doc(db, \"users\", docSnap.id), { status: newStatus });\r\n      });\r\n\r\n      alert(`✅ User ${email} marked as ${newStatus}`);\r\n      setAllUsers((prev) =>\r\n        prev.map((u) => (u.email === email ? { ...u, status: newStatus } : u))\r\n      );\r\n    } catch (err) {\r\n      console.error(\"Error updating status:\", err);\r\n    }\r\n  };\r\n\r\n  const generateReport = () => {\r\n    if (!fromDate || !toDate) {\r\n      alert(\"⚠️ Please select both From and To dates!\");\r\n      return;\r\n    }\r\n\r\n    const points = {};\r\n    const todayStr = new Date().toISOString().split(\"T\")[0];\r\n\r\n    // month name → index\r\n    const monthIndex = [\r\n      \"January\",\"February\",\"March\",\"April\",\"May\",\"June\",\r\n      \"July\",\"August\",\"September\",\"October\",\"November\",\"December\"\r\n    ].indexOf(month);\r\n\r\n    const start = new Date(year, monthIndex, fromDate);\r\n    const end = new Date(year, monthIndex, toDate);\r\n\r\n    start.setHours(0, 0, 0, 0);\r\n    end.setHours(0, 0, 0, 0);\r\n\r\n    allUsers.forEach((user) => {\r\n      if (user.status && user.status !== \"approved\") return;\r\n\r\n      const email = user.email || \"Unknown\";\r\n      const userMeals = user.meals || {};\r\n      let totalPoints = 0;\r\n\r\n      const mealDates = Object.keys(userMeals).sort();\r\n      const firstMealDate = mealDates.length > 0 ? mealDates[0] : todayStr;\r\n\r\n      for (\r\n        let d = new Date(start.getTime());\r\n        d.getTime() <= end.getTime();\r\n        d.setDate(d.getDate() + 1)\r\n      ) {\r\n        const day = d.toISOString().split(\"T\")[0];\r\n\r\n        let meals = userMeals[day];\r\n        if (!meals) {\r\n          if (day > todayStr) {\r\n            meals = { breakfast: true, lunch: true, supper: true };\r\n          } else if (day >= firstMealDate) {\r\n            meals = { breakfast: true, lunch: true, supper: true };\r\n          } else {\r\n            continue;\r\n          }\r\n        }\r\n\r\n        const marked = {\r\n          B: !!meals.breakfast,\r\n          L: !!meals.lunch,\r\n          S: !!meals.supper,\r\n        };\r\n        const markedArr = [\"B\", \"L\", \"S\"].filter((m) => marked[m]);\r\n\r\n        let key;\r\n        if (markedArr.length === 3) key = \"X\";\r\n        else if (markedArr.length === 0) key = \"0\";\r\n        else key = markedArr.join(\"/\");\r\n\r\n        totalPoints += pointSystem[key] ?? 0;\r\n      }\r\n\r\n      points[email] = totalPoints.toFixed(2);\r\n    });\r\n\r\n    setUserPoints(points);\r\n    setGenerated(true);\r\n  };\r\n\r\n  const exportCSV = () => {\r\n    const rows = [[\"Email\", \"Points\"]];\r\n    Object.entries(userPoints).forEach(([email, pts]) => {\r\n      rows.push([email, pts]);\r\n    });\r\n\r\n    const csvContent = rows.map((r) => r.join(\",\")).join(\"\\n\");\r\n    const blob = new Blob([csvContent], { type: \"text/csv;charset=utf-8;\" });\r\n\r\n    const url = URL.createObjectURL(blob);\r\n    const a = document.createElement(\"a\");\r\n    a.href = url;\r\n    a.setAttribute(\r\n      \"download\",\r\n      `points_${month}_${fromDate}_to_${toDate}_${year}.csv`\r\n    );\r\n    document.body.appendChild(a);\r\n    a.click();\r\n    document.body.removeChild(a);\r\n  };\r\n\r\n  if (loading) return <h2 className=\"loading\">Loading data...</h2>;\r\n\r\n  // Points report page\r\n  if (view === \"points\") {\r\n    return (\r\n      <div className=\"admin-container\">\r\n        <h2 className=\"title\">📑 Generate Points Report</h2>\r\n        <div className=\"report-filters\">\r\n          {/* Month Selector */}\r\n          <select value={month} onChange={(e) => setMonth(e.target.value)}>\r\n            {[\r\n              \"January\",\"February\",\"March\",\"April\",\"May\",\"June\",\r\n              \"July\",\"August\",\"September\",\"October\",\"November\",\"December\"\r\n            ].map((m) => (\r\n              <option key={m} value={m}>{m}</option>\r\n            ))}\r\n          </select>\r\n\r\n          {/* From Day */}\r\n          <select value={fromDate} onChange={(e) => setFromDate(Number(e.target.value))}>\r\n            {Array.from({ length: 31 }, (_, i) => (\r\n              <option key={i + 1} value={i + 1}>{i + 1}</option>\r\n            ))}\r\n          </select>\r\n\r\n          {/* To Day */}\r\n          <select value={toDate} onChange={(e) => setToDate(Number(e.target.value))}>\r\n            {Array.from({ length: 31 }, (_, i) => (\r\n              <option key={i + 1} value={i + 1}>{i + 1}</option>\r\n            ))}\r\n          </select>\r\n\r\n          {/* Year Selector */}\r\n          <select value={year} onChange={(e) => setYear(Number(e.target.value))}>\r\n            {Array.from({ length: 6 }, (_, i) => {\r\n              const y = 2023 + i;\r\n              return <option key={y} value={y}>{y}</option>;\r\n            })}\r\n          </select>\r\n\r\n          <button className=\"btn generate-btn\" onClick={generateReport}>\r\n            Generate\r\n          </button>\r\n        </div>\r\n        {generated && (\r\n          <>\r\n            <table className=\"meal-table\">\r\n              <thead>\r\n                <tr><th>Email</th><th>Total Points</th></tr>\r\n              </thead>\r\n              <tbody>\r\n                {Object.entries(userPoints).map(([email, points]) => (\r\n                  <tr key={email}><td>{email}</td><td>{points}</td></tr>\r\n                ))}\r\n              </tbody>\r\n            </table>\r\n            <button className=\"btn export-btn\" onClick={exportCSV}>\r\n              ⬇️ Download CSV\r\n            </button>\r\n          </>\r\n        )}\r\n        <div className=\"admin-actions\">\r\n          <button className=\"btn\" onClick={() => setView(\"dashboard\")}>\r\n            ⬅️ Back\r\n          </button>\r\n        </div>\r\n      </div>\r\n    );\r\n  }\r\n\r\n  // Requests + Meals + Dashboard remain same…\r\n  // (kept unchanged from your code above)\r\n\r\n  const todayStr = new Date().toISOString().split(\"T\")[0];\r\n  const todayMeals = mealCounts[todayStr] || { breakfast: 0, lunch: 0, supper: 0 };\r\n\r\n  return (\r\n    <div className=\"admin-container\">\r\n      <h2 className=\"title\">📊 Admin Dashboard</h2>\r\n\r\n      <h3>🍽️ Today’s Meal Count</h3>\r\n      <div className=\"today-meals\">\r\n        <p>🍳 Breakfast: <strong>{todayMeals.breakfast}</strong></p>\r\n        <p>🥗 Lunch: <strong>{todayMeals.lunch}</strong></p>\r\n        <p>🍛 Supper: <strong>{todayMeals.supper}</strong></p>\r\n      </div>\r\n\r\n      <div className=\"admin-actions\">\r\n        <button className=\"btn points-btn\" onClick={goToPointSystem}>⚙️ Point System</button>\r\n        <button className=\"btn\" onClick={() => setView(\"points\")}>📑 Points Report</button>\r\n        <button className=\"btn\" onClick={() => setView(\"requests\")}>👥 User Requests</button>\r\n        <button className=\"btn\" onClick={() => setView(\"meals\")}>🥘 Meal Counts</button>\r\n        <button className=\"logout-btn\" onClick={onLogout}>Logout</button>\r\n      </div>\r\n    </div>\r\n  );\r\n}\r\n\r\nexport default AdminPage;\r\n"],"mappings":"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","ignoreList":[]},"metadata":{},"sourceType":"module","externalDependencies":[]}