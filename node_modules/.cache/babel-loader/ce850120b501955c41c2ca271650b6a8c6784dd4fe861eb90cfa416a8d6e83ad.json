{"ast":null,"code":"var _jsxFileName = \"C:\\\\Users\\\\mohdn\\\\OneDrive\\\\Desktop\\\\mess-app-starter\\\\src\\\\AdminPage.js\",\n  _s = $RefreshSig$();\n// AdminPage.js\nimport React, { useEffect, useState } from \"react\";\nimport { db } from \"./firebase\";\nimport { collection, getDocs, doc, getDoc, setDoc } from \"firebase/firestore\";\nimport \"./AdminPage.css\";\nimport { jsxDEV as _jsxDEV, Fragment as _Fragment } from \"react/jsx-dev-runtime\";\nfunction AdminPage({\n  onLogout,\n  goToPointSystem\n}) {\n  _s();\n  const [mealCounts, setMealCounts] = useState({});\n  const [userPoints, setUserPoints] = useState({});\n  const [loading, setLoading] = useState(true);\n  const [fromDate, setFromDate] = useState(\"\");\n  const [toDate, setToDate] = useState(\"\");\n  const [generated, setGenerated] = useState(false);\n\n  // default rules\n  const defaultSystem = {\n    X: 1,\n    \"0\": 0,\n    B: 0.25,\n    L: 0.35,\n    S: 0.45,\n    \"B/L\": 0.65,\n    \"B/S\": 0.75,\n    \"L/S\": 0.85\n  };\n\n  // normalized point system (numbers, both-order combos).\n  const [pointSystem, setPointSystem] = useState(() => normalizePointSystem(defaultSystem));\n  const [allUsers, setAllUsers] = useState([]);\n\n  // --- helper: normalize raw map (strings -> numbers) and add permutations\n  function normalizePointSystem(raw = {}) {\n    const base = {\n      ...defaultSystem,\n      ...raw\n    }; // fallback to defaults for missing keys\n    const norm = {};\n\n    // ensure numeric\n    Object.keys(base).forEach(k => {\n      const v = base[k];\n      norm[k] = typeof v === \"number\" ? v : parseFloat(v) || 0;\n    });\n\n    // ensure permutations for pairs (B/L and L/B etc)\n    const addPerm = (a, b) => {\n      var _norm$key;\n      const key = `${a}/${b}`;\n      const val = (_norm$key = norm[key]) !== null && _norm$key !== void 0 ? _norm$key : 0;\n      norm[`${b}/${a}`] = val; // add reversed order too\n    };\n    addPerm(\"B\", \"L\");\n    addPerm(\"B\", \"S\");\n    addPerm(\"L\", \"S\");\n    return norm;\n  }\n\n  // load point settings + users + meal counts (next 8 days)\n  useEffect(() => {\n    const fetchAll = async () => {\n      try {\n        // load point system from Firestore\n        const settingsRef = doc(db, \"settings\", \"points\");\n        const settingsSnap = await getDoc(settingsRef);\n        let loadedSettings = null;\n        if (settingsSnap.exists()) {\n          loadedSettings = settingsSnap.data();\n        } else {\n          // write defaults once (numbers)\n          await setDoc(settingsRef, defaultSystem);\n          loadedSettings = defaultSystem;\n        }\n        const normalized = normalizePointSystem(loadedSettings);\n        setPointSystem(normalized);\n\n        // load users\n        const usersRef = collection(db, \"users\");\n        const querySnapshot = await getDocs(usersRef);\n        const all = [];\n        const counts = {};\n        const today = new Date();\n\n        // next 8 days (today + next 7)\n        const nextDays = [];\n        for (let i = 0; i < 8; i++) {\n          const d = new Date(today);\n          d.setDate(today.getDate() + i);\n          const dateStr = d.toISOString().split(\"T\")[0];\n          nextDays.push(dateStr);\n          counts[dateStr] = {\n            breakfast: 0,\n            lunch: 0,\n            supper: 0\n          };\n        }\n        querySnapshot.forEach(docSnap => {\n          const data = docSnap.data();\n          all.push(data);\n          const userMeals = data.meals || {};\n          // count marks for the nextDays using actual stored values (no default override)\n          nextDays.forEach(day => {\n            const meals = userMeals[day];\n            if (meals) {\n              [\"breakfast\", \"lunch\", \"supper\"].forEach(meal => {\n                if (meals[meal]) counts[day][meal] += 1;\n              });\n            } else {\n              // If there is no stored doc for that day, assume default = MARKED for future days\n              // but **only** for counting overall totals we want total users, not just logged-in users\n              // you told that counts should reflect total number of users => we will add +1 for each user assuming \"marked\" on future days\n              // BUT to reflect your requirement \"even if they didn't login the count should include them as marked in future\", add:\n              const todayStr = new Date().toISOString().split(\"T\")[0];\n              if (day > todayStr) {\n                // treat as marked for users with no explicit entry for that day\n                counts[day].breakfast += 1;\n                counts[day].lunch += 1;\n                counts[day].supper += 1;\n              }\n            }\n          });\n        });\n        setAllUsers(all);\n        setMealCounts(counts);\n      } catch (err) {\n        console.error(\"Admin data error:\", err);\n      } finally {\n        setLoading(false);\n      }\n    };\n    fetchAll();\n  }, []); // run once on mount\n\n  // generate points for a date range (uses normalized pointSystem)\n  const generateReport = () => {\n    if (!fromDate || !toDate) {\n      alert(\"⚠️ Please select both From and To dates!\");\n      return;\n    }\n    const points = {};\n    const todayStr = new Date().toISOString().split(\"T\")[0];\n\n    // loop every user and every date in range\n    allUsers.forEach(user => {\n      const email = user.email || \"Unknown\";\n      const userMeals = user.meals || {};\n      let totalPoints = 0;\n      const start = new Date(fromDate);\n      const end = new Date(toDate);\n      // normalize time to midnight for safe iteration\n      start.setHours(0, 0, 0, 0);\n      end.setHours(0, 0, 0, 0);\n      for (let d = new Date(start); d <= end; d.setDate(d.getDate() + 1)) {\n        var _ref, _pointSystem$key;\n        const day = d.toISOString().split(\"T\")[0];\n\n        // Use Firestore value if present; otherwise fallback:\n        // - future days (relative to today) => assume marked (true)\n        // - past days & today => assume unmarked (false)\n        let meals = userMeals[day];\n        if (!meals) {\n          meals = day > todayStr ? {\n            breakfast: true,\n            lunch: true,\n            supper: true\n          } : {\n            breakfast: false,\n            lunch: false,\n            supper: false\n          };\n        }\n\n        // canonical order: B, L, S\n        const marked = {\n          B: !!meals.breakfast,\n          L: !!meals.lunch,\n          S: !!meals.supper\n        };\n        const unmarked = [\"B\", \"L\", \"S\"].filter(m => !marked[m]);\n        let key;\n        if (unmarked.length === 3) key = \"X\"; // all unmarked\n        else if (unmarked.length === 0) key = \"0\"; // all marked/present\n        else key = unmarked.join(\"/\"); // B/L, B/S or L/S in canonical order\n\n        // retrieve number from normalized point system, fallback to defaultSystem if missing\n        const addVal = (_ref = (_pointSystem$key = pointSystem[key]) !== null && _pointSystem$key !== void 0 ? _pointSystem$key : defaultSystem[key]) !== null && _ref !== void 0 ? _ref : 0;\n        totalPoints += addVal;\n      }\n      points[email] = totalPoints.toFixed(2);\n    });\n    setUserPoints(points);\n    setGenerated(true);\n  };\n\n  // export CSV\n  const exportCSV = () => {\n    const rows = [[\"Email\", \"Points\"]];\n    Object.entries(userPoints).forEach(([email, pts]) => {\n      rows.push([email, pts]);\n    });\n    let csvContent = rows.map(r => r.join(\",\")).join(\"\\n\");\n    const blob = new Blob([csvContent], {\n      type: \"text/csv;charset=utf-8;\"\n    });\n    const url = URL.createObjectURL(blob);\n    const a = document.createElement(\"a\");\n    a.href = url;\n    a.setAttribute(\"download\", `points_${fromDate}_to_${toDate}.csv`);\n    document.body.appendChild(a);\n    a.click();\n    document.body.removeChild(a);\n  };\n  if (loading) return /*#__PURE__*/_jsxDEV(\"h2\", {\n    className: \"loading\",\n    children: \"Loading data...\"\n  }, void 0, false, {\n    fileName: _jsxFileName,\n    lineNumber: 210,\n    columnNumber: 23\n  }, this);\n  return /*#__PURE__*/_jsxDEV(\"div\", {\n    className: \"admin-container\",\n    children: [/*#__PURE__*/_jsxDEV(\"h2\", {\n      className: \"title\",\n      children: \"\\uD83D\\uDCCA Admin Dashboard\"\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 214,\n      columnNumber: 7\n    }, this), /*#__PURE__*/_jsxDEV(\"h3\", {\n      children: \"\\uD83E\\uDD58 Meal Counts (Next 8 Days)\"\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 216,\n      columnNumber: 7\n    }, this), /*#__PURE__*/_jsxDEV(\"table\", {\n      className: \"meal-table\",\n      children: [/*#__PURE__*/_jsxDEV(\"thead\", {\n        children: /*#__PURE__*/_jsxDEV(\"tr\", {\n          children: [/*#__PURE__*/_jsxDEV(\"th\", {\n            className: \"date-col\",\n            children: \"Date\"\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 220,\n            columnNumber: 13\n          }, this), /*#__PURE__*/_jsxDEV(\"th\", {\n            children: \"\\uD83C\\uDF73 Breakfast\"\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 221,\n            columnNumber: 13\n          }, this), /*#__PURE__*/_jsxDEV(\"th\", {\n            children: \"\\uD83E\\uDD57 Lunch\"\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 222,\n            columnNumber: 13\n          }, this), /*#__PURE__*/_jsxDEV(\"th\", {\n            children: \"\\uD83C\\uDF5B Supper\"\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 223,\n            columnNumber: 13\n          }, this)]\n        }, void 0, true, {\n          fileName: _jsxFileName,\n          lineNumber: 219,\n          columnNumber: 11\n        }, this)\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 218,\n        columnNumber: 9\n      }, this), /*#__PURE__*/_jsxDEV(\"tbody\", {\n        children: Object.entries(mealCounts).map(([day, meals]) => /*#__PURE__*/_jsxDEV(\"tr\", {\n          children: [/*#__PURE__*/_jsxDEV(\"td\", {\n            className: \"date-col\",\n            children: day\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 229,\n            columnNumber: 15\n          }, this), /*#__PURE__*/_jsxDEV(\"td\", {\n            className: day === new Date().toISOString().split(\"T\")[0] ? \"today-col\" : \"\",\n            children: meals.breakfast\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 230,\n            columnNumber: 15\n          }, this), /*#__PURE__*/_jsxDEV(\"td\", {\n            className: day === new Date().toISOString().split(\"T\")[0] ? \"today-col\" : \"\",\n            children: meals.lunch\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 233,\n            columnNumber: 15\n          }, this), /*#__PURE__*/_jsxDEV(\"td\", {\n            className: day === new Date().toISOString().split(\"T\")[0] ? \"today-col\" : \"\",\n            children: meals.supper\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 236,\n            columnNumber: 15\n          }, this)]\n        }, day, true, {\n          fileName: _jsxFileName,\n          lineNumber: 228,\n          columnNumber: 13\n        }, this))\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 226,\n        columnNumber: 9\n      }, this)]\n    }, void 0, true, {\n      fileName: _jsxFileName,\n      lineNumber: 217,\n      columnNumber: 7\n    }, this), /*#__PURE__*/_jsxDEV(\"h3\", {\n      children: \"Generate Points Report\"\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 244,\n      columnNumber: 7\n    }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n      className: \"report-filters\",\n      children: [/*#__PURE__*/_jsxDEV(\"label\", {\n        children: [\"From:\", \" \", /*#__PURE__*/_jsxDEV(\"input\", {\n          type: \"date\",\n          value: fromDate,\n          onChange: e => setFromDate(e.target.value)\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 248,\n          columnNumber: 11\n        }, this)]\n      }, void 0, true, {\n        fileName: _jsxFileName,\n        lineNumber: 246,\n        columnNumber: 9\n      }, this), /*#__PURE__*/_jsxDEV(\"label\", {\n        children: [\"To:\", \" \", /*#__PURE__*/_jsxDEV(\"input\", {\n          type: \"date\",\n          value: toDate,\n          onChange: e => setToDate(e.target.value)\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 252,\n          columnNumber: 11\n        }, this)]\n      }, void 0, true, {\n        fileName: _jsxFileName,\n        lineNumber: 250,\n        columnNumber: 9\n      }, this), /*#__PURE__*/_jsxDEV(\"button\", {\n        className: \"btn generate-btn\",\n        onClick: generateReport,\n        children: \"Generate\"\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 254,\n        columnNumber: 9\n      }, this)]\n    }, void 0, true, {\n      fileName: _jsxFileName,\n      lineNumber: 245,\n      columnNumber: 7\n    }, this), generated && /*#__PURE__*/_jsxDEV(_Fragment, {\n      children: [/*#__PURE__*/_jsxDEV(\"table\", {\n        className: \"meal-table\",\n        children: [/*#__PURE__*/_jsxDEV(\"thead\", {\n          children: /*#__PURE__*/_jsxDEV(\"tr\", {\n            children: [/*#__PURE__*/_jsxDEV(\"th\", {\n              children: \"Email\"\n            }, void 0, false, {\n              fileName: _jsxFileName,\n              lineNumber: 264,\n              columnNumber: 17\n            }, this), /*#__PURE__*/_jsxDEV(\"th\", {\n              children: \"Total Points\"\n            }, void 0, false, {\n              fileName: _jsxFileName,\n              lineNumber: 265,\n              columnNumber: 17\n            }, this)]\n          }, void 0, true, {\n            fileName: _jsxFileName,\n            lineNumber: 263,\n            columnNumber: 15\n          }, this)\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 262,\n          columnNumber: 13\n        }, this), /*#__PURE__*/_jsxDEV(\"tbody\", {\n          children: Object.entries(userPoints).map(([email, points]) => /*#__PURE__*/_jsxDEV(\"tr\", {\n            children: [/*#__PURE__*/_jsxDEV(\"td\", {\n              children: email\n            }, void 0, false, {\n              fileName: _jsxFileName,\n              lineNumber: 271,\n              columnNumber: 19\n            }, this), /*#__PURE__*/_jsxDEV(\"td\", {\n              children: points\n            }, void 0, false, {\n              fileName: _jsxFileName,\n              lineNumber: 272,\n              columnNumber: 19\n            }, this)]\n          }, email, true, {\n            fileName: _jsxFileName,\n            lineNumber: 270,\n            columnNumber: 17\n          }, this))\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 268,\n          columnNumber: 13\n        }, this)]\n      }, void 0, true, {\n        fileName: _jsxFileName,\n        lineNumber: 261,\n        columnNumber: 11\n      }, this), /*#__PURE__*/_jsxDEV(\"button\", {\n        className: \"btn export-btn\",\n        onClick: exportCSV,\n        children: \"\\u2B07\\uFE0F Download CSV\"\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 278,\n        columnNumber: 11\n      }, this)]\n    }, void 0, true), /*#__PURE__*/_jsxDEV(\"div\", {\n      className: \"admin-actions\",\n      children: [/*#__PURE__*/_jsxDEV(\"button\", {\n        className: \"btn points-btn\",\n        onClick: goToPointSystem,\n        children: \"\\u2699\\uFE0F Point System\"\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 285,\n        columnNumber: 9\n      }, this), /*#__PURE__*/_jsxDEV(\"button\", {\n        className: \"logout-btn\",\n        onClick: onLogout,\n        children: \"Logout\"\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 288,\n        columnNumber: 9\n      }, this)]\n    }, void 0, true, {\n      fileName: _jsxFileName,\n      lineNumber: 284,\n      columnNumber: 7\n    }, this)]\n  }, void 0, true, {\n    fileName: _jsxFileName,\n    lineNumber: 213,\n    columnNumber: 5\n  }, this);\n}\n_s(AdminPage, \"rqMJQ52XqJxO+dKviytrR6zReXU=\");\n_c = AdminPage;\nexport default AdminPage;\nvar _c;\n$RefreshReg$(_c, \"AdminPage\");","map":{"version":3,"names":["React","useEffect","useState","db","collection","getDocs","doc","getDoc","setDoc","jsxDEV","_jsxDEV","Fragment","_Fragment","AdminPage","onLogout","goToPointSystem","_s","mealCounts","setMealCounts","userPoints","setUserPoints","loading","setLoading","fromDate","setFromDate","toDate","setToDate","generated","setGenerated","defaultSystem","X","B","L","S","pointSystem","setPointSystem","normalizePointSystem","allUsers","setAllUsers","raw","base","norm","Object","keys","forEach","k","v","parseFloat","addPerm","a","b","_norm$key","key","val","fetchAll","settingsRef","settingsSnap","loadedSettings","exists","data","normalized","usersRef","querySnapshot","all","counts","today","Date","nextDays","i","d","setDate","getDate","dateStr","toISOString","split","push","breakfast","lunch","supper","docSnap","userMeals","meals","day","meal","todayStr","err","console","error","generateReport","alert","points","user","email","totalPoints","start","end","setHours","_ref","_pointSystem$key","marked","unmarked","filter","m","length","join","addVal","toFixed","exportCSV","rows","entries","pts","csvContent","map","r","blob","Blob","type","url","URL","createObjectURL","document","createElement","href","setAttribute","body","appendChild","click","removeChild","className","children","fileName","_jsxFileName","lineNumber","columnNumber","value","onChange","e","target","onClick","_c","$RefreshReg$"],"sources":["C:/Users/mohdn/OneDrive/Desktop/mess-app-starter/src/AdminPage.js"],"sourcesContent":["// AdminPage.js\r\nimport React, { useEffect, useState } from \"react\";\r\nimport { db } from \"./firebase\";\r\nimport { collection, getDocs, doc, getDoc, setDoc } from \"firebase/firestore\";\r\nimport \"./AdminPage.css\";\r\n\r\nfunction AdminPage({ onLogout, goToPointSystem }) {\r\n  const [mealCounts, setMealCounts] = useState({});\r\n  const [userPoints, setUserPoints] = useState({});\r\n  const [loading, setLoading] = useState(true);\r\n\r\n  const [fromDate, setFromDate] = useState(\"\");\r\n  const [toDate, setToDate] = useState(\"\");\r\n  const [generated, setGenerated] = useState(false);\r\n\r\n  // default rules\r\n  const defaultSystem = {\r\n    X: 1,\r\n    \"0\": 0,\r\n    B: 0.25,\r\n    L: 0.35,\r\n    S: 0.45,\r\n    \"B/L\": 0.65,\r\n    \"B/S\": 0.75,\r\n    \"L/S\": 0.85,\r\n  };\r\n\r\n  // normalized point system (numbers, both-order combos).\r\n  const [pointSystem, setPointSystem] = useState(() => normalizePointSystem(defaultSystem));\r\n  const [allUsers, setAllUsers] = useState([]);\r\n\r\n  // --- helper: normalize raw map (strings -> numbers) and add permutations\r\n  function normalizePointSystem(raw = {}) {\r\n    const base = { ...defaultSystem, ...raw }; // fallback to defaults for missing keys\r\n    const norm = {};\r\n\r\n    // ensure numeric\r\n    Object.keys(base).forEach((k) => {\r\n      const v = base[k];\r\n      norm[k] = typeof v === \"number\" ? v : parseFloat(v) || 0;\r\n    });\r\n\r\n    // ensure permutations for pairs (B/L and L/B etc)\r\n    const addPerm = (a, b) => {\r\n      const key = `${a}/${b}`;\r\n      const val = norm[key] ?? 0;\r\n      norm[`${b}/${a}`] = val; // add reversed order too\r\n    };\r\n    addPerm(\"B\", \"L\");\r\n    addPerm(\"B\", \"S\");\r\n    addPerm(\"L\", \"S\");\r\n\r\n    return norm;\r\n  }\r\n\r\n  // load point settings + users + meal counts (next 8 days)\r\n  useEffect(() => {\r\n    const fetchAll = async () => {\r\n      try {\r\n        // load point system from Firestore\r\n        const settingsRef = doc(db, \"settings\", \"points\");\r\n        const settingsSnap = await getDoc(settingsRef);\r\n\r\n        let loadedSettings = null;\r\n        if (settingsSnap.exists()) {\r\n          loadedSettings = settingsSnap.data();\r\n        } else {\r\n          // write defaults once (numbers)\r\n          await setDoc(settingsRef, defaultSystem);\r\n          loadedSettings = defaultSystem;\r\n        }\r\n\r\n        const normalized = normalizePointSystem(loadedSettings);\r\n        setPointSystem(normalized);\r\n\r\n        // load users\r\n        const usersRef = collection(db, \"users\");\r\n        const querySnapshot = await getDocs(usersRef);\r\n\r\n        const all = [];\r\n        const counts = {};\r\n        const today = new Date();\r\n\r\n        // next 8 days (today + next 7)\r\n        const nextDays = [];\r\n        for (let i = 0; i < 8; i++) {\r\n          const d = new Date(today);\r\n          d.setDate(today.getDate() + i);\r\n          const dateStr = d.toISOString().split(\"T\")[0];\r\n          nextDays.push(dateStr);\r\n          counts[dateStr] = { breakfast: 0, lunch: 0, supper: 0 };\r\n        }\r\n\r\n        querySnapshot.forEach((docSnap) => {\r\n          const data = docSnap.data();\r\n          all.push(data);\r\n\r\n          const userMeals = data.meals || {};\r\n          // count marks for the nextDays using actual stored values (no default override)\r\n          nextDays.forEach((day) => {\r\n            const meals = userMeals[day];\r\n            if (meals) {\r\n              [\"breakfast\", \"lunch\", \"supper\"].forEach((meal) => {\r\n                if (meals[meal]) counts[day][meal] += 1;\r\n              });\r\n            } else {\r\n              // If there is no stored doc for that day, assume default = MARKED for future days\r\n              // but **only** for counting overall totals we want total users, not just logged-in users\r\n              // you told that counts should reflect total number of users => we will add +1 for each user assuming \"marked\" on future days\r\n              // BUT to reflect your requirement \"even if they didn't login the count should include them as marked in future\", add:\r\n              const todayStr = new Date().toISOString().split(\"T\")[0];\r\n              if (day > todayStr) {\r\n                // treat as marked for users with no explicit entry for that day\r\n                counts[day].breakfast += 1;\r\n                counts[day].lunch += 1;\r\n                counts[day].supper += 1;\r\n              }\r\n            }\r\n          });\r\n        });\r\n\r\n        setAllUsers(all);\r\n        setMealCounts(counts);\r\n      } catch (err) {\r\n        console.error(\"Admin data error:\", err);\r\n      } finally {\r\n        setLoading(false);\r\n      }\r\n    };\r\n\r\n    fetchAll();\r\n  }, []); // run once on mount\r\n\r\n  // generate points for a date range (uses normalized pointSystem)\r\n  const generateReport = () => {\r\n    if (!fromDate || !toDate) {\r\n      alert(\"⚠️ Please select both From and To dates!\");\r\n      return;\r\n    }\r\n\r\n    const points = {};\r\n    const todayStr = new Date().toISOString().split(\"T\")[0];\r\n\r\n    // loop every user and every date in range\r\n    allUsers.forEach((user) => {\r\n      const email = user.email || \"Unknown\";\r\n      const userMeals = user.meals || {};\r\n      let totalPoints = 0;\r\n\r\n      const start = new Date(fromDate);\r\n      const end = new Date(toDate);\r\n      // normalize time to midnight for safe iteration\r\n      start.setHours(0, 0, 0, 0);\r\n      end.setHours(0, 0, 0, 0);\r\n\r\n      for (let d = new Date(start); d <= end; d.setDate(d.getDate() + 1)) {\r\n        const day = d.toISOString().split(\"T\")[0];\r\n\r\n        // Use Firestore value if present; otherwise fallback:\r\n        // - future days (relative to today) => assume marked (true)\r\n        // - past days & today => assume unmarked (false)\r\n        let meals = userMeals[day];\r\n        if (!meals) {\r\n          meals =\r\n            day > todayStr\r\n              ? { breakfast: true, lunch: true, supper: true }\r\n              : { breakfast: false, lunch: false, supper: false };\r\n        }\r\n\r\n        // canonical order: B, L, S\r\n        const marked = { B: !!meals.breakfast, L: !!meals.lunch, S: !!meals.supper };\r\n        const unmarked = [\"B\", \"L\", \"S\"].filter((m) => !marked[m]);\r\n\r\n        let key;\r\n        if (unmarked.length === 3) key = \"X\"; // all unmarked\r\n        else if (unmarked.length === 0) key = \"0\"; // all marked/present\r\n        else key = unmarked.join(\"/\"); // B/L, B/S or L/S in canonical order\r\n\r\n        // retrieve number from normalized point system, fallback to defaultSystem if missing\r\n        const addVal = pointSystem[key] ?? defaultSystem[key] ?? 0;\r\n        totalPoints += addVal;\r\n      }\r\n\r\n      points[email] = totalPoints.toFixed(2);\r\n    });\r\n\r\n    setUserPoints(points);\r\n    setGenerated(true);\r\n  };\r\n\r\n  // export CSV\r\n  const exportCSV = () => {\r\n    const rows = [[\"Email\", \"Points\"]];\r\n    Object.entries(userPoints).forEach(([email, pts]) => {\r\n      rows.push([email, pts]);\r\n    });\r\n\r\n    let csvContent = rows.map((r) => r.join(\",\")).join(\"\\n\");\r\n    const blob = new Blob([csvContent], { type: \"text/csv;charset=utf-8;\" });\r\n\r\n    const url = URL.createObjectURL(blob);\r\n    const a = document.createElement(\"a\");\r\n    a.href = url;\r\n    a.setAttribute(\"download\", `points_${fromDate}_to_${toDate}.csv`);\r\n    document.body.appendChild(a);\r\n    a.click();\r\n    document.body.removeChild(a);\r\n  };\r\n\r\n  if (loading) return <h2 className=\"loading\">Loading data...</h2>;\r\n\r\n  return (\r\n    <div className=\"admin-container\">\r\n      <h2 className=\"title\">📊 Admin Dashboard</h2>\r\n\r\n      <h3>🥘 Meal Counts (Next 8 Days)</h3>\r\n      <table className=\"meal-table\">\r\n        <thead>\r\n          <tr>\r\n            <th className=\"date-col\">Date</th>\r\n            <th>🍳 Breakfast</th>\r\n            <th>🥗 Lunch</th>\r\n            <th>🍛 Supper</th>\r\n          </tr>\r\n        </thead>\r\n        <tbody>\r\n          {Object.entries(mealCounts).map(([day, meals]) => (\r\n            <tr key={day}>\r\n              <td className=\"date-col\">{day}</td>\r\n              <td className={day === new Date().toISOString().split(\"T\")[0] ? \"today-col\" : \"\"}>\r\n                {meals.breakfast}\r\n              </td>\r\n              <td className={day === new Date().toISOString().split(\"T\")[0] ? \"today-col\" : \"\"}>\r\n                {meals.lunch}\r\n              </td>\r\n              <td className={day === new Date().toISOString().split(\"T\")[0] ? \"today-col\" : \"\"}>\r\n                {meals.supper}\r\n              </td>\r\n            </tr>\r\n          ))}\r\n        </tbody>\r\n      </table>\r\n\r\n      <h3>Generate Points Report</h3>\r\n      <div className=\"report-filters\">\r\n        <label>\r\n          From:{\" \"}\r\n          <input type=\"date\" value={fromDate} onChange={(e) => setFromDate(e.target.value)} />\r\n        </label>\r\n        <label>\r\n          To:{\" \"}\r\n          <input type=\"date\" value={toDate} onChange={(e) => setToDate(e.target.value)} />\r\n        </label>\r\n        <button className=\"btn generate-btn\" onClick={generateReport}>\r\n          Generate\r\n        </button>\r\n      </div>\r\n\r\n      {generated && (\r\n        <>\r\n          <table className=\"meal-table\">\r\n            <thead>\r\n              <tr>\r\n                <th>Email</th>\r\n                <th>Total Points</th>\r\n              </tr>\r\n            </thead>\r\n            <tbody>\r\n              {Object.entries(userPoints).map(([email, points]) => (\r\n                <tr key={email}>\r\n                  <td>{email}</td>\r\n                  <td>{points}</td>\r\n                </tr>\r\n              ))}\r\n            </tbody>\r\n          </table>\r\n\r\n          <button className=\"btn export-btn\" onClick={exportCSV}>\r\n            ⬇️ Download CSV\r\n          </button>\r\n        </>\r\n      )}\r\n\r\n      <div className=\"admin-actions\">\r\n        <button className=\"btn points-btn\" onClick={goToPointSystem}>\r\n          ⚙️ Point System\r\n        </button>\r\n        <button className=\"logout-btn\" onClick={onLogout}>\r\n          Logout\r\n        </button>\r\n      </div>\r\n    </div>\r\n  );\r\n}\r\n\r\nexport default AdminPage;\r\n"],"mappings":";;AAAA;AACA,OAAOA,KAAK,IAAIC,SAAS,EAAEC,QAAQ,QAAQ,OAAO;AAClD,SAASC,EAAE,QAAQ,YAAY;AAC/B,SAASC,UAAU,EAAEC,OAAO,EAAEC,GAAG,EAAEC,MAAM,EAAEC,MAAM,QAAQ,oBAAoB;AAC7E,OAAO,iBAAiB;AAAC,SAAAC,MAAA,IAAAC,OAAA,EAAAC,QAAA,IAAAC,SAAA;AAEzB,SAASC,SAASA,CAAC;EAAEC,QAAQ;EAAEC;AAAgB,CAAC,EAAE;EAAAC,EAAA;EAChD,MAAM,CAACC,UAAU,EAAEC,aAAa,CAAC,GAAGhB,QAAQ,CAAC,CAAC,CAAC,CAAC;EAChD,MAAM,CAACiB,UAAU,EAAEC,aAAa,CAAC,GAAGlB,QAAQ,CAAC,CAAC,CAAC,CAAC;EAChD,MAAM,CAACmB,OAAO,EAAEC,UAAU,CAAC,GAAGpB,QAAQ,CAAC,IAAI,CAAC;EAE5C,MAAM,CAACqB,QAAQ,EAAEC,WAAW,CAAC,GAAGtB,QAAQ,CAAC,EAAE,CAAC;EAC5C,MAAM,CAACuB,MAAM,EAAEC,SAAS,CAAC,GAAGxB,QAAQ,CAAC,EAAE,CAAC;EACxC,MAAM,CAACyB,SAAS,EAAEC,YAAY,CAAC,GAAG1B,QAAQ,CAAC,KAAK,CAAC;;EAEjD;EACA,MAAM2B,aAAa,GAAG;IACpBC,CAAC,EAAE,CAAC;IACJ,GAAG,EAAE,CAAC;IACNC,CAAC,EAAE,IAAI;IACPC,CAAC,EAAE,IAAI;IACPC,CAAC,EAAE,IAAI;IACP,KAAK,EAAE,IAAI;IACX,KAAK,EAAE,IAAI;IACX,KAAK,EAAE;EACT,CAAC;;EAED;EACA,MAAM,CAACC,WAAW,EAAEC,cAAc,CAAC,GAAGjC,QAAQ,CAAC,MAAMkC,oBAAoB,CAACP,aAAa,CAAC,CAAC;EACzF,MAAM,CAACQ,QAAQ,EAAEC,WAAW,CAAC,GAAGpC,QAAQ,CAAC,EAAE,CAAC;;EAE5C;EACA,SAASkC,oBAAoBA,CAACG,GAAG,GAAG,CAAC,CAAC,EAAE;IACtC,MAAMC,IAAI,GAAG;MAAE,GAAGX,aAAa;MAAE,GAAGU;IAAI,CAAC,CAAC,CAAC;IAC3C,MAAME,IAAI,GAAG,CAAC,CAAC;;IAEf;IACAC,MAAM,CAACC,IAAI,CAACH,IAAI,CAAC,CAACI,OAAO,CAAEC,CAAC,IAAK;MAC/B,MAAMC,CAAC,GAAGN,IAAI,CAACK,CAAC,CAAC;MACjBJ,IAAI,CAACI,CAAC,CAAC,GAAG,OAAOC,CAAC,KAAK,QAAQ,GAAGA,CAAC,GAAGC,UAAU,CAACD,CAAC,CAAC,IAAI,CAAC;IAC1D,CAAC,CAAC;;IAEF;IACA,MAAME,OAAO,GAAGA,CAACC,CAAC,EAAEC,CAAC,KAAK;MAAA,IAAAC,SAAA;MACxB,MAAMC,GAAG,GAAG,GAAGH,CAAC,IAAIC,CAAC,EAAE;MACvB,MAAMG,GAAG,IAAAF,SAAA,GAAGV,IAAI,CAACW,GAAG,CAAC,cAAAD,SAAA,cAAAA,SAAA,GAAI,CAAC;MAC1BV,IAAI,CAAC,GAAGS,CAAC,IAAID,CAAC,EAAE,CAAC,GAAGI,GAAG,CAAC,CAAC;IAC3B,CAAC;IACDL,OAAO,CAAC,GAAG,EAAE,GAAG,CAAC;IACjBA,OAAO,CAAC,GAAG,EAAE,GAAG,CAAC;IACjBA,OAAO,CAAC,GAAG,EAAE,GAAG,CAAC;IAEjB,OAAOP,IAAI;EACb;;EAEA;EACAxC,SAAS,CAAC,MAAM;IACd,MAAMqD,QAAQ,GAAG,MAAAA,CAAA,KAAY;MAC3B,IAAI;QACF;QACA,MAAMC,WAAW,GAAGjD,GAAG,CAACH,EAAE,EAAE,UAAU,EAAE,QAAQ,CAAC;QACjD,MAAMqD,YAAY,GAAG,MAAMjD,MAAM,CAACgD,WAAW,CAAC;QAE9C,IAAIE,cAAc,GAAG,IAAI;QACzB,IAAID,YAAY,CAACE,MAAM,CAAC,CAAC,EAAE;UACzBD,cAAc,GAAGD,YAAY,CAACG,IAAI,CAAC,CAAC;QACtC,CAAC,MAAM;UACL;UACA,MAAMnD,MAAM,CAAC+C,WAAW,EAAE1B,aAAa,CAAC;UACxC4B,cAAc,GAAG5B,aAAa;QAChC;QAEA,MAAM+B,UAAU,GAAGxB,oBAAoB,CAACqB,cAAc,CAAC;QACvDtB,cAAc,CAACyB,UAAU,CAAC;;QAE1B;QACA,MAAMC,QAAQ,GAAGzD,UAAU,CAACD,EAAE,EAAE,OAAO,CAAC;QACxC,MAAM2D,aAAa,GAAG,MAAMzD,OAAO,CAACwD,QAAQ,CAAC;QAE7C,MAAME,GAAG,GAAG,EAAE;QACd,MAAMC,MAAM,GAAG,CAAC,CAAC;QACjB,MAAMC,KAAK,GAAG,IAAIC,IAAI,CAAC,CAAC;;QAExB;QACA,MAAMC,QAAQ,GAAG,EAAE;QACnB,KAAK,IAAIC,CAAC,GAAG,CAAC,EAAEA,CAAC,GAAG,CAAC,EAAEA,CAAC,EAAE,EAAE;UAC1B,MAAMC,CAAC,GAAG,IAAIH,IAAI,CAACD,KAAK,CAAC;UACzBI,CAAC,CAACC,OAAO,CAACL,KAAK,CAACM,OAAO,CAAC,CAAC,GAAGH,CAAC,CAAC;UAC9B,MAAMI,OAAO,GAAGH,CAAC,CAACI,WAAW,CAAC,CAAC,CAACC,KAAK,CAAC,GAAG,CAAC,CAAC,CAAC,CAAC;UAC7CP,QAAQ,CAACQ,IAAI,CAACH,OAAO,CAAC;UACtBR,MAAM,CAACQ,OAAO,CAAC,GAAG;YAAEI,SAAS,EAAE,CAAC;YAAEC,KAAK,EAAE,CAAC;YAAEC,MAAM,EAAE;UAAE,CAAC;QACzD;QAEAhB,aAAa,CAAClB,OAAO,CAAEmC,OAAO,IAAK;UACjC,MAAMpB,IAAI,GAAGoB,OAAO,CAACpB,IAAI,CAAC,CAAC;UAC3BI,GAAG,CAACY,IAAI,CAAChB,IAAI,CAAC;UAEd,MAAMqB,SAAS,GAAGrB,IAAI,CAACsB,KAAK,IAAI,CAAC,CAAC;UAClC;UACAd,QAAQ,CAACvB,OAAO,CAAEsC,GAAG,IAAK;YACxB,MAAMD,KAAK,GAAGD,SAAS,CAACE,GAAG,CAAC;YAC5B,IAAID,KAAK,EAAE;cACT,CAAC,WAAW,EAAE,OAAO,EAAE,QAAQ,CAAC,CAACrC,OAAO,CAAEuC,IAAI,IAAK;gBACjD,IAAIF,KAAK,CAACE,IAAI,CAAC,EAAEnB,MAAM,CAACkB,GAAG,CAAC,CAACC,IAAI,CAAC,IAAI,CAAC;cACzC,CAAC,CAAC;YACJ,CAAC,MAAM;cACL;cACA;cACA;cACA;cACA,MAAMC,QAAQ,GAAG,IAAIlB,IAAI,CAAC,CAAC,CAACO,WAAW,CAAC,CAAC,CAACC,KAAK,CAAC,GAAG,CAAC,CAAC,CAAC,CAAC;cACvD,IAAIQ,GAAG,GAAGE,QAAQ,EAAE;gBAClB;gBACApB,MAAM,CAACkB,GAAG,CAAC,CAACN,SAAS,IAAI,CAAC;gBAC1BZ,MAAM,CAACkB,GAAG,CAAC,CAACL,KAAK,IAAI,CAAC;gBACtBb,MAAM,CAACkB,GAAG,CAAC,CAACJ,MAAM,IAAI,CAAC;cACzB;YACF;UACF,CAAC,CAAC;QACJ,CAAC,CAAC;QAEFxC,WAAW,CAACyB,GAAG,CAAC;QAChB7C,aAAa,CAAC8C,MAAM,CAAC;MACvB,CAAC,CAAC,OAAOqB,GAAG,EAAE;QACZC,OAAO,CAACC,KAAK,CAAC,mBAAmB,EAAEF,GAAG,CAAC;MACzC,CAAC,SAAS;QACR/D,UAAU,CAAC,KAAK,CAAC;MACnB;IACF,CAAC;IAEDgC,QAAQ,CAAC,CAAC;EACZ,CAAC,EAAE,EAAE,CAAC,CAAC,CAAC;;EAER;EACA,MAAMkC,cAAc,GAAGA,CAAA,KAAM;IAC3B,IAAI,CAACjE,QAAQ,IAAI,CAACE,MAAM,EAAE;MACxBgE,KAAK,CAAC,0CAA0C,CAAC;MACjD;IACF;IAEA,MAAMC,MAAM,GAAG,CAAC,CAAC;IACjB,MAAMN,QAAQ,GAAG,IAAIlB,IAAI,CAAC,CAAC,CAACO,WAAW,CAAC,CAAC,CAACC,KAAK,CAAC,GAAG,CAAC,CAAC,CAAC,CAAC;;IAEvD;IACArC,QAAQ,CAACO,OAAO,CAAE+C,IAAI,IAAK;MACzB,MAAMC,KAAK,GAAGD,IAAI,CAACC,KAAK,IAAI,SAAS;MACrC,MAAMZ,SAAS,GAAGW,IAAI,CAACV,KAAK,IAAI,CAAC,CAAC;MAClC,IAAIY,WAAW,GAAG,CAAC;MAEnB,MAAMC,KAAK,GAAG,IAAI5B,IAAI,CAAC3C,QAAQ,CAAC;MAChC,MAAMwE,GAAG,GAAG,IAAI7B,IAAI,CAACzC,MAAM,CAAC;MAC5B;MACAqE,KAAK,CAACE,QAAQ,CAAC,CAAC,EAAE,CAAC,EAAE,CAAC,EAAE,CAAC,CAAC;MAC1BD,GAAG,CAACC,QAAQ,CAAC,CAAC,EAAE,CAAC,EAAE,CAAC,EAAE,CAAC,CAAC;MAExB,KAAK,IAAI3B,CAAC,GAAG,IAAIH,IAAI,CAAC4B,KAAK,CAAC,EAAEzB,CAAC,IAAI0B,GAAG,EAAE1B,CAAC,CAACC,OAAO,CAACD,CAAC,CAACE,OAAO,CAAC,CAAC,GAAG,CAAC,CAAC,EAAE;QAAA,IAAA0B,IAAA,EAAAC,gBAAA;QAClE,MAAMhB,GAAG,GAAGb,CAAC,CAACI,WAAW,CAAC,CAAC,CAACC,KAAK,CAAC,GAAG,CAAC,CAAC,CAAC,CAAC;;QAEzC;QACA;QACA;QACA,IAAIO,KAAK,GAAGD,SAAS,CAACE,GAAG,CAAC;QAC1B,IAAI,CAACD,KAAK,EAAE;UACVA,KAAK,GACHC,GAAG,GAAGE,QAAQ,GACV;YAAER,SAAS,EAAE,IAAI;YAAEC,KAAK,EAAE,IAAI;YAAEC,MAAM,EAAE;UAAK,CAAC,GAC9C;YAAEF,SAAS,EAAE,KAAK;YAAEC,KAAK,EAAE,KAAK;YAAEC,MAAM,EAAE;UAAM,CAAC;QACzD;;QAEA;QACA,MAAMqB,MAAM,GAAG;UAAEpE,CAAC,EAAE,CAAC,CAACkD,KAAK,CAACL,SAAS;UAAE5C,CAAC,EAAE,CAAC,CAACiD,KAAK,CAACJ,KAAK;UAAE5C,CAAC,EAAE,CAAC,CAACgD,KAAK,CAACH;QAAO,CAAC;QAC5E,MAAMsB,QAAQ,GAAG,CAAC,GAAG,EAAE,GAAG,EAAE,GAAG,CAAC,CAACC,MAAM,CAAEC,CAAC,IAAK,CAACH,MAAM,CAACG,CAAC,CAAC,CAAC;QAE1D,IAAIlD,GAAG;QACP,IAAIgD,QAAQ,CAACG,MAAM,KAAK,CAAC,EAAEnD,GAAG,GAAG,GAAG,CAAC,CAAC;QAAA,KACjC,IAAIgD,QAAQ,CAACG,MAAM,KAAK,CAAC,EAAEnD,GAAG,GAAG,GAAG,CAAC,CAAC;QAAA,KACtCA,GAAG,GAAGgD,QAAQ,CAACI,IAAI,CAAC,GAAG,CAAC,CAAC,CAAC;;QAE/B;QACA,MAAMC,MAAM,IAAAR,IAAA,IAAAC,gBAAA,GAAGhE,WAAW,CAACkB,GAAG,CAAC,cAAA8C,gBAAA,cAAAA,gBAAA,GAAIrE,aAAa,CAACuB,GAAG,CAAC,cAAA6C,IAAA,cAAAA,IAAA,GAAI,CAAC;QAC1DJ,WAAW,IAAIY,MAAM;MACvB;MAEAf,MAAM,CAACE,KAAK,CAAC,GAAGC,WAAW,CAACa,OAAO,CAAC,CAAC,CAAC;IACxC,CAAC,CAAC;IAEFtF,aAAa,CAACsE,MAAM,CAAC;IACrB9D,YAAY,CAAC,IAAI,CAAC;EACpB,CAAC;;EAED;EACA,MAAM+E,SAAS,GAAGA,CAAA,KAAM;IACtB,MAAMC,IAAI,GAAG,CAAC,CAAC,OAAO,EAAE,QAAQ,CAAC,CAAC;IAClClE,MAAM,CAACmE,OAAO,CAAC1F,UAAU,CAAC,CAACyB,OAAO,CAAC,CAAC,CAACgD,KAAK,EAAEkB,GAAG,CAAC,KAAK;MACnDF,IAAI,CAACjC,IAAI,CAAC,CAACiB,KAAK,EAAEkB,GAAG,CAAC,CAAC;IACzB,CAAC,CAAC;IAEF,IAAIC,UAAU,GAAGH,IAAI,CAACI,GAAG,CAAEC,CAAC,IAAKA,CAAC,CAACT,IAAI,CAAC,GAAG,CAAC,CAAC,CAACA,IAAI,CAAC,IAAI,CAAC;IACxD,MAAMU,IAAI,GAAG,IAAIC,IAAI,CAAC,CAACJ,UAAU,CAAC,EAAE;MAAEK,IAAI,EAAE;IAA0B,CAAC,CAAC;IAExE,MAAMC,GAAG,GAAGC,GAAG,CAACC,eAAe,CAACL,IAAI,CAAC;IACrC,MAAMjE,CAAC,GAAGuE,QAAQ,CAACC,aAAa,CAAC,GAAG,CAAC;IACrCxE,CAAC,CAACyE,IAAI,GAAGL,GAAG;IACZpE,CAAC,CAAC0E,YAAY,CAAC,UAAU,EAAE,UAAUpG,QAAQ,OAAOE,MAAM,MAAM,CAAC;IACjE+F,QAAQ,CAACI,IAAI,CAACC,WAAW,CAAC5E,CAAC,CAAC;IAC5BA,CAAC,CAAC6E,KAAK,CAAC,CAAC;IACTN,QAAQ,CAACI,IAAI,CAACG,WAAW,CAAC9E,CAAC,CAAC;EAC9B,CAAC;EAED,IAAI5B,OAAO,EAAE,oBAAOX,OAAA;IAAIsH,SAAS,EAAC,SAAS;IAAAC,QAAA,EAAC;EAAe;IAAAC,QAAA,EAAAC,YAAA;IAAAC,UAAA;IAAAC,YAAA;EAAA,OAAI,CAAC;EAEhE,oBACE3H,OAAA;IAAKsH,SAAS,EAAC,iBAAiB;IAAAC,QAAA,gBAC9BvH,OAAA;MAAIsH,SAAS,EAAC,OAAO;MAAAC,QAAA,EAAC;IAAkB;MAAAC,QAAA,EAAAC,YAAA;MAAAC,UAAA;MAAAC,YAAA;IAAA,OAAI,CAAC,eAE7C3H,OAAA;MAAAuH,QAAA,EAAI;IAA4B;MAAAC,QAAA,EAAAC,YAAA;MAAAC,UAAA;MAAAC,YAAA;IAAA,OAAI,CAAC,eACrC3H,OAAA;MAAOsH,SAAS,EAAC,YAAY;MAAAC,QAAA,gBAC3BvH,OAAA;QAAAuH,QAAA,eACEvH,OAAA;UAAAuH,QAAA,gBACEvH,OAAA;YAAIsH,SAAS,EAAC,UAAU;YAAAC,QAAA,EAAC;UAAI;YAAAC,QAAA,EAAAC,YAAA;YAAAC,UAAA;YAAAC,YAAA;UAAA,OAAI,CAAC,eAClC3H,OAAA;YAAAuH,QAAA,EAAI;UAAY;YAAAC,QAAA,EAAAC,YAAA;YAAAC,UAAA;YAAAC,YAAA;UAAA,OAAI,CAAC,eACrB3H,OAAA;YAAAuH,QAAA,EAAI;UAAQ;YAAAC,QAAA,EAAAC,YAAA;YAAAC,UAAA;YAAAC,YAAA;UAAA,OAAI,CAAC,eACjB3H,OAAA;YAAAuH,QAAA,EAAI;UAAS;YAAAC,QAAA,EAAAC,YAAA;YAAAC,UAAA;YAAAC,YAAA;UAAA,OAAI,CAAC;QAAA;UAAAH,QAAA,EAAAC,YAAA;UAAAC,UAAA;UAAAC,YAAA;QAAA,OAChB;MAAC;QAAAH,QAAA,EAAAC,YAAA;QAAAC,UAAA;QAAAC,YAAA;MAAA,OACA,CAAC,eACR3H,OAAA;QAAAuH,QAAA,EACGvF,MAAM,CAACmE,OAAO,CAAC5F,UAAU,CAAC,CAAC+F,GAAG,CAAC,CAAC,CAAC9B,GAAG,EAAED,KAAK,CAAC,kBAC3CvE,OAAA;UAAAuH,QAAA,gBACEvH,OAAA;YAAIsH,SAAS,EAAC,UAAU;YAAAC,QAAA,EAAE/C;UAAG;YAAAgD,QAAA,EAAAC,YAAA;YAAAC,UAAA;YAAAC,YAAA;UAAA,OAAK,CAAC,eACnC3H,OAAA;YAAIsH,SAAS,EAAE9C,GAAG,KAAK,IAAIhB,IAAI,CAAC,CAAC,CAACO,WAAW,CAAC,CAAC,CAACC,KAAK,CAAC,GAAG,CAAC,CAAC,CAAC,CAAC,GAAG,WAAW,GAAG,EAAG;YAAAuD,QAAA,EAC9EhD,KAAK,CAACL;UAAS;YAAAsD,QAAA,EAAAC,YAAA;YAAAC,UAAA;YAAAC,YAAA;UAAA,OACd,CAAC,eACL3H,OAAA;YAAIsH,SAAS,EAAE9C,GAAG,KAAK,IAAIhB,IAAI,CAAC,CAAC,CAACO,WAAW,CAAC,CAAC,CAACC,KAAK,CAAC,GAAG,CAAC,CAAC,CAAC,CAAC,GAAG,WAAW,GAAG,EAAG;YAAAuD,QAAA,EAC9EhD,KAAK,CAACJ;UAAK;YAAAqD,QAAA,EAAAC,YAAA;YAAAC,UAAA;YAAAC,YAAA;UAAA,OACV,CAAC,eACL3H,OAAA;YAAIsH,SAAS,EAAE9C,GAAG,KAAK,IAAIhB,IAAI,CAAC,CAAC,CAACO,WAAW,CAAC,CAAC,CAACC,KAAK,CAAC,GAAG,CAAC,CAAC,CAAC,CAAC,GAAG,WAAW,GAAG,EAAG;YAAAuD,QAAA,EAC9EhD,KAAK,CAACH;UAAM;YAAAoD,QAAA,EAAAC,YAAA;YAAAC,UAAA;YAAAC,YAAA;UAAA,OACX,CAAC;QAAA,GAVEnD,GAAG;UAAAgD,QAAA,EAAAC,YAAA;UAAAC,UAAA;UAAAC,YAAA;QAAA,OAWR,CACL;MAAC;QAAAH,QAAA,EAAAC,YAAA;QAAAC,UAAA;QAAAC,YAAA;MAAA,OACG,CAAC;IAAA;MAAAH,QAAA,EAAAC,YAAA;MAAAC,UAAA;MAAAC,YAAA;IAAA,OACH,CAAC,eAER3H,OAAA;MAAAuH,QAAA,EAAI;IAAsB;MAAAC,QAAA,EAAAC,YAAA;MAAAC,UAAA;MAAAC,YAAA;IAAA,OAAI,CAAC,eAC/B3H,OAAA;MAAKsH,SAAS,EAAC,gBAAgB;MAAAC,QAAA,gBAC7BvH,OAAA;QAAAuH,QAAA,GAAO,OACA,EAAC,GAAG,eACTvH,OAAA;UAAO0G,IAAI,EAAC,MAAM;UAACkB,KAAK,EAAE/G,QAAS;UAACgH,QAAQ,EAAGC,CAAC,IAAKhH,WAAW,CAACgH,CAAC,CAACC,MAAM,CAACH,KAAK;QAAE;UAAAJ,QAAA,EAAAC,YAAA;UAAAC,UAAA;UAAAC,YAAA;QAAA,OAAE,CAAC;MAAA;QAAAH,QAAA,EAAAC,YAAA;QAAAC,UAAA;QAAAC,YAAA;MAAA,OAC/E,CAAC,eACR3H,OAAA;QAAAuH,QAAA,GAAO,KACF,EAAC,GAAG,eACPvH,OAAA;UAAO0G,IAAI,EAAC,MAAM;UAACkB,KAAK,EAAE7G,MAAO;UAAC8G,QAAQ,EAAGC,CAAC,IAAK9G,SAAS,CAAC8G,CAAC,CAACC,MAAM,CAACH,KAAK;QAAE;UAAAJ,QAAA,EAAAC,YAAA;UAAAC,UAAA;UAAAC,YAAA;QAAA,OAAE,CAAC;MAAA;QAAAH,QAAA,EAAAC,YAAA;QAAAC,UAAA;QAAAC,YAAA;MAAA,OAC3E,CAAC,eACR3H,OAAA;QAAQsH,SAAS,EAAC,kBAAkB;QAACU,OAAO,EAAElD,cAAe;QAAAyC,QAAA,EAAC;MAE9D;QAAAC,QAAA,EAAAC,YAAA;QAAAC,UAAA;QAAAC,YAAA;MAAA,OAAQ,CAAC;IAAA;MAAAH,QAAA,EAAAC,YAAA;MAAAC,UAAA;MAAAC,YAAA;IAAA,OACN,CAAC,EAEL1G,SAAS,iBACRjB,OAAA,CAAAE,SAAA;MAAAqH,QAAA,gBACEvH,OAAA;QAAOsH,SAAS,EAAC,YAAY;QAAAC,QAAA,gBAC3BvH,OAAA;UAAAuH,QAAA,eACEvH,OAAA;YAAAuH,QAAA,gBACEvH,OAAA;cAAAuH,QAAA,EAAI;YAAK;cAAAC,QAAA,EAAAC,YAAA;cAAAC,UAAA;cAAAC,YAAA;YAAA,OAAI,CAAC,eACd3H,OAAA;cAAAuH,QAAA,EAAI;YAAY;cAAAC,QAAA,EAAAC,YAAA;cAAAC,UAAA;cAAAC,YAAA;YAAA,OAAI,CAAC;UAAA;YAAAH,QAAA,EAAAC,YAAA;YAAAC,UAAA;YAAAC,YAAA;UAAA,OACnB;QAAC;UAAAH,QAAA,EAAAC,YAAA;UAAAC,UAAA;UAAAC,YAAA;QAAA,OACA,CAAC,eACR3H,OAAA;UAAAuH,QAAA,EACGvF,MAAM,CAACmE,OAAO,CAAC1F,UAAU,CAAC,CAAC6F,GAAG,CAAC,CAAC,CAACpB,KAAK,EAAEF,MAAM,CAAC,kBAC9ChF,OAAA;YAAAuH,QAAA,gBACEvH,OAAA;cAAAuH,QAAA,EAAKrC;YAAK;cAAAsC,QAAA,EAAAC,YAAA;cAAAC,UAAA;cAAAC,YAAA;YAAA,OAAK,CAAC,eAChB3H,OAAA;cAAAuH,QAAA,EAAKvC;YAAM;cAAAwC,QAAA,EAAAC,YAAA;cAAAC,UAAA;cAAAC,YAAA;YAAA,OAAK,CAAC;UAAA,GAFVzC,KAAK;YAAAsC,QAAA,EAAAC,YAAA;YAAAC,UAAA;YAAAC,YAAA;UAAA,OAGV,CACL;QAAC;UAAAH,QAAA,EAAAC,YAAA;UAAAC,UAAA;UAAAC,YAAA;QAAA,OACG,CAAC;MAAA;QAAAH,QAAA,EAAAC,YAAA;QAAAC,UAAA;QAAAC,YAAA;MAAA,OACH,CAAC,eAER3H,OAAA;QAAQsH,SAAS,EAAC,gBAAgB;QAACU,OAAO,EAAE/B,SAAU;QAAAsB,QAAA,EAAC;MAEvD;QAAAC,QAAA,EAAAC,YAAA;QAAAC,UAAA;QAAAC,YAAA;MAAA,OAAQ,CAAC;IAAA,eACT,CACH,eAED3H,OAAA;MAAKsH,SAAS,EAAC,eAAe;MAAAC,QAAA,gBAC5BvH,OAAA;QAAQsH,SAAS,EAAC,gBAAgB;QAACU,OAAO,EAAE3H,eAAgB;QAAAkH,QAAA,EAAC;MAE7D;QAAAC,QAAA,EAAAC,YAAA;QAAAC,UAAA;QAAAC,YAAA;MAAA,OAAQ,CAAC,eACT3H,OAAA;QAAQsH,SAAS,EAAC,YAAY;QAACU,OAAO,EAAE5H,QAAS;QAAAmH,QAAA,EAAC;MAElD;QAAAC,QAAA,EAAAC,YAAA;QAAAC,UAAA;QAAAC,YAAA;MAAA,OAAQ,CAAC;IAAA;MAAAH,QAAA,EAAAC,YAAA;MAAAC,UAAA;MAAAC,YAAA;IAAA,OACN,CAAC;EAAA;IAAAH,QAAA,EAAAC,YAAA;IAAAC,UAAA;IAAAC,YAAA;EAAA,OACH,CAAC;AAEV;AAACrH,EAAA,CA/RQH,SAAS;AAAA8H,EAAA,GAAT9H,SAAS;AAiSlB,eAAeA,SAAS;AAAC,IAAA8H,EAAA;AAAAC,YAAA,CAAAD,EAAA","ignoreList":[]},"metadata":{},"sourceType":"module","externalDependencies":[]}