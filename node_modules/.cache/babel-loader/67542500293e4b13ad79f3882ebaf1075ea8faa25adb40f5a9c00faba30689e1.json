{"ast":null,"code":"var _jsxFileName = \"C:\\\\Users\\\\mohdn\\\\OneDrive\\\\Desktop\\\\mess-app-starter\\\\src\\\\AdminPage.js\",\n  _s = $RefreshSig$();\n// AdminPage.js\nimport React, { useEffect, useState } from \"react\";\nimport { db } from \"./firebase\";\nimport { collection, getDocs, doc, getDoc, setDoc, updateDoc, query, where } from \"firebase/firestore\";\nimport \"./AdminPage.css\";\nimport { jsxDEV as _jsxDEV, Fragment as _Fragment } from \"react/jsx-dev-runtime\";\nfunction AdminPage({\n  onLogout,\n  goToPointSystem\n}) {\n  _s();\n  const [mealCounts, setMealCounts] = useState({});\n  const [userPoints, setUserPoints] = useState({});\n  const [userMarks, setUserMarks] = useState({});\n  const [loading, setLoading] = useState(true);\n  const [fromDate, setFromDate] = useState(\"\");\n  const [toDate, setToDate] = useState(\"\");\n  const [generated, setGenerated] = useState(false);\n  const [allUsers, setAllUsers] = useState([]);\n  const [view, setView] = useState(\"dashboard\"); // dashboard | requests | points | meals | monthly\n\n  const [month, setMonth] = useState(new Date().getMonth() + 1);\n  const [year, setYear] = useState(new Date().getFullYear());\n  const [fromDay, setFromDay] = useState(1);\n  const [toDay, setToDay] = useState(1);\n  const [dailyDay, setDailyDay] = useState(new Date().getDate());\n  const defaultSystem = {\n    X: 1,\n    \"0\": 0,\n    B: 0.25,\n    L: 0.35,\n    S: 0.45,\n    \"B/L\": 0.65,\n    \"B/S\": 0.75,\n    \"L/S\": 0.85\n  };\n  const [pointSystem, setPointSystem] = useState(defaultSystem);\n  const [generatedRange, setGeneratedRange] = useState({\n    from: \"\",\n    to: \"\"\n  });\n  const todayStr = new Date().toISOString().split(\"T\")[0];\n\n  // --- monthly users state ---\n  const [monthlyUsers, setMonthlyUsers] = useState([]); // array of emails\n  const currentKey = `${year}-${String(month).padStart(2, \"0\")}`;\n  const [exceptions, setExceptions] = useState([]); // [{email, from, to}]\n  const [exceptionUser, setExceptionUser] = useState(\"\");\n  const [exceptionFrom, setExceptionFrom] = useState(\"\");\n  const [exceptionTo, setExceptionTo] = useState(\"\");\n\n  // fetch settings + users + meal counts\n  useEffect(() => {\n    const fetchAll = async () => {\n      try {\n        // load point system settings (if exists)\n        const settingsRef = doc(db, \"settings\", \"points\");\n        const settingsSnap = await getDoc(settingsRef);\n        if (settingsSnap.exists()) {\n          setPointSystem(settingsSnap.data());\n        } else {\n          // create default if missing\n          await setDoc(settingsRef, defaultSystem);\n        }\n\n        // load users\n        const usersRef = collection(db, \"users\");\n        const querySnapshot = await getDocs(usersRef);\n        const all = [];\n        // meal counts for next 8 days\n        const counts = {};\n        const today = new Date();\n        const nextDays = [];\n        for (let i = 0; i < 8; i++) {\n          const d = new Date(today);\n          d.setDate(today.getDate() + i);\n          const dateStr = d.toISOString().split(\"T\")[0];\n          nextDays.push(dateStr);\n          counts[dateStr] = {\n            breakfast: 0,\n            lunch: 0,\n            supper: 0\n          };\n        }\n        querySnapshot.forEach(docSnap => {\n          const data = docSnap.data();\n          // Save full doc data (note: we keep doc id unavailable here; updates use query)\n          all.push(data);\n          const userMeals = data.meals || {};\n          nextDays.forEach(day => {\n            const meals = userMeals[day];\n            if (meals) {\n              [\"breakfast\", \"lunch\", \"supper\"].forEach(meal => {\n                if (meals[meal]) counts[day][meal] += 1;\n              });\n            } else if (day > todayStr) {\n              // future days default to assuming they will take meal (legacy behavior)\n              counts[day].breakfast += 1;\n              counts[day].lunch += 1;\n              counts[day].supper += 1;\n            }\n          });\n        });\n        setAllUsers(all);\n        setMealCounts(counts);\n      } catch (err) {\n        console.error(\"Admin data error:\", err);\n      } finally {\n        setLoading(false);\n      }\n    };\n    fetchAll();\n  }, []); // run once\n\n  // load monthly users whenever currentKey changes\n  useEffect(() => {\n    const loadMonthlyUsers = async () => {\n      try {\n        const ref = doc(db, \"monthlyUsers\", currentKey);\n        const snap = await getDoc(ref);\n        if (snap.exists()) setMonthlyUsers(snap.data().users || []);else setMonthlyUsers([]);\n      } catch (err) {\n        console.error(\"Error loading monthly users:\", err);\n        setMonthlyUsers([]);\n      }\n    };\n    loadMonthlyUsers();\n  }, [currentKey]);\n\n  // --- update user status (approve/reject) ---\n  // uses query to find the user doc(s) with matching email and updates them\n  const updateUserStatus = async (email, newStatus) => {\n    try {\n      const usersRef = collection(db, \"users\");\n      const q = query(usersRef, where(\"email\", \"==\", email));\n      const snapshot = await getDocs(q);\n      if (snapshot.empty) {\n        alert(`⚠️ User with email ${email} not found.`);\n        return;\n      }\n      const updates = [];\n      snapshot.forEach(docSnap => {\n        updates.push(updateDoc(doc(db, \"users\", docSnap.id), {\n          status: newStatus\n        }));\n      });\n      await Promise.all(updates);\n\n      // update local list\n      setAllUsers(prev => prev.map(u => u.email === email ? {\n        ...u,\n        status: newStatus\n      } : u));\n      alert(`✅ User ${email} marked as ${newStatus}`);\n    } catch (err) {\n      console.error(\"Error updating status:\", err);\n      alert(\"⚠️ Error updating user status. See console.\");\n    }\n  };\n\n  // --- Add or toggle an approved user for the current month (manage monthly list) ---\n  const toggleUserForMonth = async email => {\n    try {\n      // ensure only approved users can be toggled (defensive)\n      const user = allUsers.find(u => u.email === email);\n      if (!user || user.status && user.status !== \"approved\") {\n        alert(\"⚠️ Only approved users can be added to the monthly list.\");\n        return;\n      }\n      const ref = doc(db, \"monthlyUsers\", currentKey);\n      const snap = await getDoc(ref);\n      let users = snap.exists() ? snap.data().users || [] : [];\n      if (users.includes(email)) {\n        users = users.filter(u => u !== email);\n      } else {\n        users.push(email);\n      }\n      await setDoc(ref, {\n        users\n      });\n      setMonthlyUsers(users);\n    } catch (err) {\n      console.error(\"Error updating monthly users:\", err);\n      alert(\"⚠️ Could not update monthly users. See console.\");\n    }\n  };\n\n  // --- Download monthly users as CSV ---\n  const downloadMonthlyUsers = async () => {\n    try {\n      const ref = doc(db, \"monthlyUsers\", currentKey);\n      const snap = await getDoc(ref);\n      if (!snap.exists()) {\n        alert(\"⚠️ No users found for this month\");\n        return;\n      }\n      const users = snap.data().users || [];\n      const rows = [[\"Email\"]];\n      users.forEach(u => rows.push([u]));\n      const csvContent = rows.map(r => r.join(\",\")).join(\"\\n\");\n      const blob = new Blob([csvContent], {\n        type: \"text/csv;charset=utf-8;\"\n      });\n      const url = URL.createObjectURL(blob);\n      const a = document.createElement(\"a\");\n      a.href = url;\n      a.setAttribute(\"download\", `monthly_users_${currentKey}.csv`);\n      document.body.appendChild(a);\n      a.click();\n      document.body.removeChild(a);\n    } catch (err) {\n      console.error(\"Error downloading monthly users:\", err);\n      alert(\"⚠️ Could not download monthly users. See console.\");\n    }\n  };\n\n  // --- helpers ---\n  const buildDaysArray = (from, to) => {\n    const arr = [];\n    const s = new Date(from);\n    const e = new Date(to);\n    for (let d = new Date(s.getTime()); d.getTime() <= e.getTime(); d.setDate(d.getDate() + 1)) {\n      arr.push(d.toISOString().split(\"T\")[0]);\n    }\n    return arr;\n  };\n\n  // --- Generate report: only users present in monthlyUsers for currentKey ---\n  const generateReport = (f, t) => {\n    const from = f || fromDate;\n    const to = t || toDate;\n    if (!from || !to) {\n      alert(\"⚠️ Please select both From and To dates!\");\n      return;\n    }\n    if (!monthlyUsers || monthlyUsers.length === 0) {\n      alert(\"⚠️ No users added for this month. Use Manage Monthly Users to add approved users.\");\n      return;\n    }\n    const points = {};\n    const markings = {};\n    const days = buildDaysArray(from, to);\n    let daysToCalculate = days;\n\n    // check if user has an exception\n    const userException = exceptions.find(ex => ex.email === user.email);\n    if (userException) {\n      daysToCalculate = buildDaysArray(userException.from, userException.to);\n    }\n    daysToCalculate.forEach(day => {\n      var _pointSystem$key;\n      let meals = userMeals[day];\n      if (!meals) {\n        if (day > todayStr || day >= firstMealDate) {\n          meals = {\n            breakfast: true,\n            lunch: true,\n            supper: true\n          };\n        } else {\n          userMarkings[day] = \"0\";\n          return;\n        }\n      }\n      const arr = [];\n      if (meals.breakfast) arr.push(\"B\");\n      if (meals.lunch) arr.push(\"L\");\n      if (meals.supper) arr.push(\"S\");\n      let key = arr.length === 3 ? \"X\" : arr.length === 0 ? \"0\" : arr.join(\"/\");\n      totalPoints += (_pointSystem$key = pointSystem[key]) !== null && _pointSystem$key !== void 0 ? _pointSystem$key : 0;\n      userMarkings[day] = key;\n    });\n    setUserPoints(points);\n    setUserMarks(markings);\n    setGenerated(true);\n    setFromDate(from);\n    setToDate(to);\n    setGeneratedRange({\n      from,\n      to\n    });\n  };\n\n  // --- Export CSV (range) ---\n  const exportCSV = () => {\n    const from = generatedRange.from || fromDate;\n    const to = generatedRange.to || toDate;\n    if (!from || !to) {\n      alert(\"⚠️ Please generate a report first (use Generate).\");\n      return;\n    }\n    const days = buildDaysArray(from, to);\n    const header = [\"Name\", ...days, \"Total Points\"];\n    const rows = [header];\n    Object.entries(userPoints).forEach(([name, pts]) => {\n      const marks = userMarks[name] || {};\n      const row = [name];\n      days.forEach(day => {\n        row.push(marks[day] || \"0\");\n      });\n      row.push(pts);\n      rows.push(row);\n    });\n    const csvContent = rows.map(r => r.join(\",\")).join(\"\\n\");\n    const blob = new Blob([csvContent], {\n      type: \"text/csv;charset=utf-8;\"\n    });\n    const url = URL.createObjectURL(blob);\n    const a = document.createElement(\"a\");\n    a.href = url;\n    a.setAttribute(\"download\", `points_${from}_to_${to}.csv`);\n    document.body.appendChild(a);\n    a.click();\n    document.body.removeChild(a);\n  };\n\n  // --- Export single-day marking CSV (only monthly users)\n  const exportDailyMarkingCSV = () => {\n    const day = String(dailyDay).padStart(2, \"0\");\n    const mon = String(month).padStart(2, \"0\");\n    const selectedDate = `${year}-${mon}-${day}`;\n    const rows = [[\"Name\", \"Marking\"]];\n    allUsers.forEach(user => {\n      var _user$meals;\n      // only include monthly users\n      if (!monthlyUsers.includes(user.email)) return;\n      const displayName = user.name || user.email || \"Unknown\";\n      const meals = (_user$meals = user.meals) === null || _user$meals === void 0 ? void 0 : _user$meals[selectedDate];\n      let key;\n      if (!meals) {\n        if (selectedDate > todayStr) {\n          key = \"X\";\n        } else {\n          key = \"0\";\n        }\n      } else {\n        const arr = [];\n        if (meals.breakfast) arr.push(\"B\");\n        if (meals.lunch) arr.push(\"L\");\n        if (meals.supper) arr.push(\"S\");\n        if (arr.length === 3) key = \"X\";else if (arr.length === 0) key = \"0\";else key = arr.join(\"/\");\n      }\n      rows.push([displayName, key]);\n    });\n    const csvContent = rows.map(r => r.join(\",\")).join(\"\\n\");\n    const blob = new Blob([csvContent], {\n      type: \"text/csv;charset=utf-8;\"\n    });\n    const url = URL.createObjectURL(blob);\n    const a = document.createElement(\"a\");\n    a.href = url;\n    a.setAttribute(\"download\", `daily_marking_${selectedDate}.csv`);\n    document.body.appendChild(a);\n    a.click();\n    document.body.removeChild(a);\n  };\n  if (loading) return /*#__PURE__*/_jsxDEV(\"h2\", {\n    className: \"loading\",\n    children: \"Loading data...\"\n  }, void 0, false, {\n    fileName: _jsxFileName,\n    lineNumber: 376,\n    columnNumber: 23\n  }, this);\n\n  // ---------- Requests view (pending users awaiting approval) ----------\n  if (view === \"requests\") {\n    return /*#__PURE__*/_jsxDEV(\"div\", {\n      className: \"admin-container\",\n      children: [/*#__PURE__*/_jsxDEV(\"h2\", {\n        className: \"title\",\n        children: \"\\uD83C\\uDD95 Pending User Requests\"\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 382,\n        columnNumber: 9\n      }, this), /*#__PURE__*/_jsxDEV(\"table\", {\n        className: \"meal-table\",\n        children: [/*#__PURE__*/_jsxDEV(\"thead\", {\n          children: /*#__PURE__*/_jsxDEV(\"tr\", {\n            children: [/*#__PURE__*/_jsxDEV(\"th\", {\n              children: \"Name\"\n            }, void 0, false, {\n              fileName: _jsxFileName,\n              lineNumber: 386,\n              columnNumber: 15\n            }, this), /*#__PURE__*/_jsxDEV(\"th\", {\n              children: \"Email\"\n            }, void 0, false, {\n              fileName: _jsxFileName,\n              lineNumber: 386,\n              columnNumber: 28\n            }, this), /*#__PURE__*/_jsxDEV(\"th\", {\n              children: \"Year\"\n            }, void 0, false, {\n              fileName: _jsxFileName,\n              lineNumber: 386,\n              columnNumber: 42\n            }, this), /*#__PURE__*/_jsxDEV(\"th\", {\n              children: \"Branch\"\n            }, void 0, false, {\n              fileName: _jsxFileName,\n              lineNumber: 386,\n              columnNumber: 55\n            }, this), /*#__PURE__*/_jsxDEV(\"th\", {\n              children: \"Phone\"\n            }, void 0, false, {\n              fileName: _jsxFileName,\n              lineNumber: 386,\n              columnNumber: 70\n            }, this), /*#__PURE__*/_jsxDEV(\"th\", {\n              children: \"Hostel\"\n            }, void 0, false, {\n              fileName: _jsxFileName,\n              lineNumber: 386,\n              columnNumber: 84\n            }, this), /*#__PURE__*/_jsxDEV(\"th\", {\n              children: \"Actions\"\n            }, void 0, false, {\n              fileName: _jsxFileName,\n              lineNumber: 386,\n              columnNumber: 99\n            }, this)]\n          }, void 0, true, {\n            fileName: _jsxFileName,\n            lineNumber: 385,\n            columnNumber: 13\n          }, this)\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 384,\n          columnNumber: 11\n        }, this), /*#__PURE__*/_jsxDEV(\"tbody\", {\n          children: allUsers.filter(u => u.status === \"pending\").map(user => /*#__PURE__*/_jsxDEV(\"tr\", {\n            children: [/*#__PURE__*/_jsxDEV(\"td\", {\n              children: user.name\n            }, void 0, false, {\n              fileName: _jsxFileName,\n              lineNumber: 392,\n              columnNumber: 17\n            }, this), /*#__PURE__*/_jsxDEV(\"td\", {\n              children: user.email\n            }, void 0, false, {\n              fileName: _jsxFileName,\n              lineNumber: 393,\n              columnNumber: 17\n            }, this), /*#__PURE__*/_jsxDEV(\"td\", {\n              children: user.year\n            }, void 0, false, {\n              fileName: _jsxFileName,\n              lineNumber: 394,\n              columnNumber: 17\n            }, this), /*#__PURE__*/_jsxDEV(\"td\", {\n              children: user.branch\n            }, void 0, false, {\n              fileName: _jsxFileName,\n              lineNumber: 395,\n              columnNumber: 17\n            }, this), /*#__PURE__*/_jsxDEV(\"td\", {\n              children: user.phone\n            }, void 0, false, {\n              fileName: _jsxFileName,\n              lineNumber: 396,\n              columnNumber: 17\n            }, this), /*#__PURE__*/_jsxDEV(\"td\", {\n              children: user.mea\n            }, void 0, false, {\n              fileName: _jsxFileName,\n              lineNumber: 397,\n              columnNumber: 17\n            }, this), /*#__PURE__*/_jsxDEV(\"td\", {\n              children: [/*#__PURE__*/_jsxDEV(\"button\", {\n                className: \"btn approve-btn\",\n                onClick: () => updateUserStatus(user.email, \"approved\"),\n                children: \"\\u2705 Approve\"\n              }, void 0, false, {\n                fileName: _jsxFileName,\n                lineNumber: 399,\n                columnNumber: 19\n              }, this), /*#__PURE__*/_jsxDEV(\"button\", {\n                className: \"btn reject-btn\",\n                onClick: () => updateUserStatus(user.email, \"rejected\"),\n                children: \"\\u274C Reject\"\n              }, void 0, false, {\n                fileName: _jsxFileName,\n                lineNumber: 400,\n                columnNumber: 19\n              }, this)]\n            }, void 0, true, {\n              fileName: _jsxFileName,\n              lineNumber: 398,\n              columnNumber: 17\n            }, this)]\n          }, user.email, true, {\n            fileName: _jsxFileName,\n            lineNumber: 391,\n            columnNumber: 15\n          }, this))\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 389,\n          columnNumber: 11\n        }, this)]\n      }, void 0, true, {\n        fileName: _jsxFileName,\n        lineNumber: 383,\n        columnNumber: 9\n      }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n        className: \"admin-actions\",\n        children: [/*#__PURE__*/_jsxDEV(\"button\", {\n          className: \"btn\",\n          onClick: () => setView(\"dashboard\"),\n          children: \"\\u2B05\\uFE0F Back\"\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 408,\n          columnNumber: 11\n        }, this), /*#__PURE__*/_jsxDEV(\"button\", {\n          className: \"logout-btn\",\n          onClick: onLogout,\n          children: \"Logout\"\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 409,\n          columnNumber: 11\n        }, this)]\n      }, void 0, true, {\n        fileName: _jsxFileName,\n        lineNumber: 407,\n        columnNumber: 9\n      }, this)]\n    }, void 0, true, {\n      fileName: _jsxFileName,\n      lineNumber: 381,\n      columnNumber: 7\n    }, this);\n  }\n\n  // ---------- Manage Monthly Users view (ONLY approved users are shown to be toggled) ----------\n  if (view === \"monthly\") {\n    return /*#__PURE__*/_jsxDEV(\"div\", {\n      className: \"admin-container\",\n      children: [/*#__PURE__*/_jsxDEV(\"h2\", {\n        className: \"title\",\n        children: [\"\\uD83D\\uDC65 Manage Monthly Users (\", currentKey, \")\"]\n      }, void 0, true, {\n        fileName: _jsxFileName,\n        lineNumber: 419,\n        columnNumber: 9\n      }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n        className: \"report-filters\",\n        style: {\n          justifyContent: \"flex-start\",\n          gap: 12\n        },\n        children: [/*#__PURE__*/_jsxDEV(\"label\", {\n          children: [\"Month:\", /*#__PURE__*/_jsxDEV(\"select\", {\n            value: month,\n            onChange: e => setMonth(Number(e.target.value)),\n            children: [\"January\", \"February\", \"March\", \"April\", \"May\", \"June\", \"July\", \"August\", \"September\", \"October\", \"November\", \"December\"].map((m, i) => /*#__PURE__*/_jsxDEV(\"option\", {\n              value: i + 1,\n              children: m\n            }, i, false, {\n              fileName: _jsxFileName,\n              lineNumber: 429,\n              columnNumber: 17\n            }, this))\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 424,\n            columnNumber: 13\n          }, this)]\n        }, void 0, true, {\n          fileName: _jsxFileName,\n          lineNumber: 422,\n          columnNumber: 11\n        }, this), /*#__PURE__*/_jsxDEV(\"label\", {\n          children: [\"Year:\", /*#__PURE__*/_jsxDEV(\"select\", {\n            value: year,\n            onChange: e => setYear(Number(e.target.value)),\n            children: Array.from({\n              length: 6\n            }, (_, i) => 2023 + i).map(y => /*#__PURE__*/_jsxDEV(\"option\", {\n              value: y,\n              children: y\n            }, y, false, {\n              fileName: _jsxFileName,\n              lineNumber: 438,\n              columnNumber: 17\n            }, this))\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 436,\n            columnNumber: 13\n          }, this)]\n        }, void 0, true, {\n          fileName: _jsxFileName,\n          lineNumber: 434,\n          columnNumber: 11\n        }, this)]\n      }, void 0, true, {\n        fileName: _jsxFileName,\n        lineNumber: 421,\n        columnNumber: 9\n      }, this), /*#__PURE__*/_jsxDEV(\"table\", {\n        className: \"meal-table\",\n        style: {\n          marginTop: 14\n        },\n        children: [/*#__PURE__*/_jsxDEV(\"thead\", {\n          children: /*#__PURE__*/_jsxDEV(\"tr\", {\n            children: [/*#__PURE__*/_jsxDEV(\"th\", {\n              children: \"Name\"\n            }, void 0, false, {\n              fileName: _jsxFileName,\n              lineNumber: 446,\n              columnNumber: 17\n            }, this), /*#__PURE__*/_jsxDEV(\"th\", {\n              children: \"Email\"\n            }, void 0, false, {\n              fileName: _jsxFileName,\n              lineNumber: 446,\n              columnNumber: 30\n            }, this), /*#__PURE__*/_jsxDEV(\"th\", {\n              children: \"Include for month?\"\n            }, void 0, false, {\n              fileName: _jsxFileName,\n              lineNumber: 446,\n              columnNumber: 44\n            }, this)]\n          }, void 0, true, {\n            fileName: _jsxFileName,\n            lineNumber: 446,\n            columnNumber: 13\n          }, this)\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 445,\n          columnNumber: 11\n        }, this), /*#__PURE__*/_jsxDEV(\"tbody\", {\n          children: allUsers.filter(u => u.status === \"approved\").map(user => /*#__PURE__*/_jsxDEV(\"tr\", {\n            children: [/*#__PURE__*/_jsxDEV(\"td\", {\n              children: user.name\n            }, void 0, false, {\n              fileName: _jsxFileName,\n              lineNumber: 451,\n              columnNumber: 17\n            }, this), /*#__PURE__*/_jsxDEV(\"td\", {\n              children: user.email\n            }, void 0, false, {\n              fileName: _jsxFileName,\n              lineNumber: 452,\n              columnNumber: 17\n            }, this), /*#__PURE__*/_jsxDEV(\"td\", {\n              children: /*#__PURE__*/_jsxDEV(\"label\", {\n                style: {\n                  display: \"inline-flex\",\n                  alignItems: \"center\",\n                  gap: 8\n                },\n                children: [/*#__PURE__*/_jsxDEV(\"input\", {\n                  type: \"checkbox\",\n                  checked: monthlyUsers.includes(user.email),\n                  onChange: () => toggleUserForMonth(user.email)\n                }, void 0, false, {\n                  fileName: _jsxFileName,\n                  lineNumber: 455,\n                  columnNumber: 21\n                }, this), /*#__PURE__*/_jsxDEV(\"span\", {\n                  className: \"small-muted\",\n                  children: monthlyUsers.includes(user.email) ? \"Included\" : \"Not included\"\n                }, void 0, false, {\n                  fileName: _jsxFileName,\n                  lineNumber: 460,\n                  columnNumber: 21\n                }, this)]\n              }, void 0, true, {\n                fileName: _jsxFileName,\n                lineNumber: 454,\n                columnNumber: 19\n              }, this)\n            }, void 0, false, {\n              fileName: _jsxFileName,\n              lineNumber: 453,\n              columnNumber: 17\n            }, this)]\n          }, user.email, true, {\n            fileName: _jsxFileName,\n            lineNumber: 450,\n            columnNumber: 15\n          }, this))\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 448,\n          columnNumber: 11\n        }, this)]\n      }, void 0, true, {\n        fileName: _jsxFileName,\n        lineNumber: 444,\n        columnNumber: 9\n      }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n        className: \"admin-actions\",\n        children: [/*#__PURE__*/_jsxDEV(\"button\", {\n          className: \"btn export-btn\",\n          onClick: downloadMonthlyUsers,\n          children: \"\\u2B07\\uFE0F Download Monthly Users\"\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 469,\n          columnNumber: 11\n        }, this), /*#__PURE__*/_jsxDEV(\"button\", {\n          className: \"btn\",\n          onClick: () => setView(\"dashboard\"),\n          children: \"\\u2B05\\uFE0F Back\"\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 470,\n          columnNumber: 11\n        }, this)]\n      }, void 0, true, {\n        fileName: _jsxFileName,\n        lineNumber: 468,\n        columnNumber: 9\n      }, this)]\n    }, void 0, true, {\n      fileName: _jsxFileName,\n      lineNumber: 418,\n      columnNumber: 7\n    }, this);\n  }\n\n  // ---------- Points view ----------\n  if (view === \"points\") {\n    const daysInMonth = new Date(year, month, 0).getDate();\n    return /*#__PURE__*/_jsxDEV(\"div\", {\n      className: \"admin-container\",\n      children: [/*#__PURE__*/_jsxDEV(\"h2\", {\n        className: \"title\",\n        children: [\"\\uD83D\\uDCD1 Generate Points Report (\", currentKey, \")\"]\n      }, void 0, true, {\n        fileName: _jsxFileName,\n        lineNumber: 482,\n        columnNumber: 9\n      }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n        className: \"report-filters\",\n        children: [/*#__PURE__*/_jsxDEV(\"label\", {\n          children: [\"Month:\", /*#__PURE__*/_jsxDEV(\"select\", {\n            value: month,\n            onChange: e => setMonth(Number(e.target.value)),\n            children: [\"January\", \"February\", \"March\", \"April\", \"May\", \"June\", \"July\", \"August\", \"September\", \"October\", \"November\", \"December\"].map((m, i) => /*#__PURE__*/_jsxDEV(\"option\", {\n              value: i + 1,\n              children: m\n            }, i, false, {\n              fileName: _jsxFileName,\n              lineNumber: 492,\n              columnNumber: 17\n            }, this))\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 487,\n            columnNumber: 13\n          }, this)]\n        }, void 0, true, {\n          fileName: _jsxFileName,\n          lineNumber: 485,\n          columnNumber: 11\n        }, this), /*#__PURE__*/_jsxDEV(\"label\", {\n          children: [\"Year:\", /*#__PURE__*/_jsxDEV(\"select\", {\n            value: year,\n            onChange: e => setYear(Number(e.target.value)),\n            children: Array.from({\n              length: 6\n            }, (_, i) => 2023 + i).map(y => /*#__PURE__*/_jsxDEV(\"option\", {\n              value: y,\n              children: y\n            }, y, false, {\n              fileName: _jsxFileName,\n              lineNumber: 501,\n              columnNumber: 17\n            }, this))\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 499,\n            columnNumber: 13\n          }, this)]\n        }, void 0, true, {\n          fileName: _jsxFileName,\n          lineNumber: 497,\n          columnNumber: 11\n        }, this), /*#__PURE__*/_jsxDEV(\"label\", {\n          children: [\"From:\", /*#__PURE__*/_jsxDEV(\"select\", {\n            value: fromDay,\n            onChange: e => setFromDay(Number(e.target.value)),\n            children: Array.from({\n              length: daysInMonth\n            }, (_, i) => i + 1).map(d => /*#__PURE__*/_jsxDEV(\"option\", {\n              value: d,\n              children: d\n            }, d, false, {\n              fileName: _jsxFileName,\n              lineNumber: 510,\n              columnNumber: 17\n            }, this))\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 508,\n            columnNumber: 13\n          }, this)]\n        }, void 0, true, {\n          fileName: _jsxFileName,\n          lineNumber: 506,\n          columnNumber: 11\n        }, this), /*#__PURE__*/_jsxDEV(\"label\", {\n          children: [\"To:\", /*#__PURE__*/_jsxDEV(\"select\", {\n            value: toDay,\n            onChange: e => setToDay(Number(e.target.value)),\n            children: Array.from({\n              length: daysInMonth\n            }, (_, i) => i + 1).map(d => /*#__PURE__*/_jsxDEV(\"option\", {\n              value: d,\n              children: d\n            }, d, false, {\n              fileName: _jsxFileName,\n              lineNumber: 519,\n              columnNumber: 17\n            }, this))\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 517,\n            columnNumber: 13\n          }, this)]\n        }, void 0, true, {\n          fileName: _jsxFileName,\n          lineNumber: 515,\n          columnNumber: 11\n        }, this), /*#__PURE__*/_jsxDEV(\"button\", {\n          className: \"btn generate-btn\",\n          onClick: () => {\n            let fDay = fromDay;\n            let tDay = toDay;\n            if (fromDay > toDay) {\n              fDay = toDay;\n              tDay = fromDay;\n              setFromDay(fDay);\n              setToDay(tDay);\n            }\n            const f = `${year}-${String(month).padStart(2, \"0\")}-${String(fDay).padStart(2, \"0\")}`;\n            const t = `${year}-${String(month).padStart(2, \"0\")}-${String(tDay).padStart(2, \"0\")}`;\n            generateReport(f, t);\n          },\n          children: \"Generate\"\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 524,\n          columnNumber: 11\n        }, this)]\n      }, void 0, true, {\n        fileName: _jsxFileName,\n        lineNumber: 484,\n        columnNumber: 9\n      }, this), generated && /*#__PURE__*/_jsxDEV(_Fragment, {\n        children: [/*#__PURE__*/_jsxDEV(\"table\", {\n          className: \"meal-table\",\n          children: [/*#__PURE__*/_jsxDEV(\"thead\", {\n            children: /*#__PURE__*/_jsxDEV(\"tr\", {\n              children: [/*#__PURE__*/_jsxDEV(\"th\", {\n                children: \"Name\"\n              }, void 0, false, {\n                fileName: _jsxFileName,\n                lineNumber: 548,\n                columnNumber: 21\n              }, this), /*#__PURE__*/_jsxDEV(\"th\", {\n                children: \"Total Points\"\n              }, void 0, false, {\n                fileName: _jsxFileName,\n                lineNumber: 548,\n                columnNumber: 34\n              }, this)]\n            }, void 0, true, {\n              fileName: _jsxFileName,\n              lineNumber: 548,\n              columnNumber: 17\n            }, this)\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 547,\n            columnNumber: 15\n          }, this), /*#__PURE__*/_jsxDEV(\"tbody\", {\n            children: Object.entries(userPoints).map(([name, points]) => /*#__PURE__*/_jsxDEV(\"tr\", {\n              children: [/*#__PURE__*/_jsxDEV(\"td\", {\n                children: name\n              }, void 0, false, {\n                fileName: _jsxFileName,\n                lineNumber: 552,\n                columnNumber: 34\n              }, this), /*#__PURE__*/_jsxDEV(\"td\", {\n                children: points\n              }, void 0, false, {\n                fileName: _jsxFileName,\n                lineNumber: 552,\n                columnNumber: 49\n              }, this)]\n            }, name, true, {\n              fileName: _jsxFileName,\n              lineNumber: 552,\n              columnNumber: 19\n            }, this))\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 550,\n            columnNumber: 15\n          }, this)]\n        }, void 0, true, {\n          fileName: _jsxFileName,\n          lineNumber: 546,\n          columnNumber: 13\n        }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n          style: {\n            display: \"flex\",\n            gap: 8,\n            alignItems: \"center\",\n            marginTop: 10\n          },\n          children: [/*#__PURE__*/_jsxDEV(\"button\", {\n            className: \"btn export-btn\",\n            onClick: exportCSV,\n            children: \"\\u2B07\\uFE0F Download Range CSV\"\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 558,\n            columnNumber: 15\n          }, this), /*#__PURE__*/_jsxDEV(\"button\", {\n            className: \"btn export-btn\",\n            onClick: downloadMonthlyUsers,\n            children: \"\\u2B07\\uFE0F Download Monthly Users\"\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 559,\n            columnNumber: 15\n          }, this)]\n        }, void 0, true, {\n          fileName: _jsxFileName,\n          lineNumber: 557,\n          columnNumber: 13\n        }, this)]\n      }, void 0, true), /*#__PURE__*/_jsxDEV(\"div\", {\n        style: {\n          marginTop: 18,\n          borderTop: \"1px solid #ddd\",\n          paddingTop: 12\n        },\n        children: [/*#__PURE__*/_jsxDEV(\"h3\", {\n          children: \"\\uD83D\\uDCC5 Export Single-Day Markings\"\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 565,\n          columnNumber: 11\n        }, this), /*#__PURE__*/_jsxDEV(\"label\", {\n          className: \"single-day-label\",\n          children: [\"Day:\", /*#__PURE__*/_jsxDEV(\"select\", {\n            className: \"single-day-date\",\n            value: dailyDay,\n            onChange: e => setDailyDay(Number(e.target.value)),\n            children: Array.from({\n              length: daysInMonth\n            }, (_, i) => i + 1).map(d => /*#__PURE__*/_jsxDEV(\"option\", {\n              value: d,\n              children: d\n            }, d, false, {\n              fileName: _jsxFileName,\n              lineNumber: 570,\n              columnNumber: 17\n            }, this))\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 568,\n            columnNumber: 13\n          }, this)]\n        }, void 0, true, {\n          fileName: _jsxFileName,\n          lineNumber: 566,\n          columnNumber: 11\n        }, this), /*#__PURE__*/_jsxDEV(\"button\", {\n          className: \"btn export-btn\",\n          onClick: exportDailyMarkingCSV,\n          style: {\n            marginLeft: 10\n          },\n          children: \"\\u2B07\\uFE0F Download todays Marking\"\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 574,\n          columnNumber: 11\n        }, this)]\n      }, void 0, true, {\n        fileName: _jsxFileName,\n        lineNumber: 564,\n        columnNumber: 9\n      }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n        className: \"admin-actions\",\n        style: {\n          marginTop: 14\n        },\n        children: /*#__PURE__*/_jsxDEV(\"button\", {\n          className: \"btn\",\n          onClick: () => setView(\"dashboard\"),\n          children: \"\\u2B05\\uFE0F Back\"\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 580,\n          columnNumber: 11\n        }, this)\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 579,\n        columnNumber: 9\n      }, this)]\n    }, void 0, true, {\n      fileName: _jsxFileName,\n      lineNumber: 481,\n      columnNumber: 7\n    }, this);\n  }\n\n  // ---------- Meals page ----------\n  if (view === \"meals\") {\n    return /*#__PURE__*/_jsxDEV(\"div\", {\n      className: \"admin-container\",\n      children: [/*#__PURE__*/_jsxDEV(\"h2\", {\n        className: \"title\",\n        children: \"\\uD83E\\uDD58 Meal Counts (Next 8 Days)\"\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 592,\n        columnNumber: 9\n      }, this), /*#__PURE__*/_jsxDEV(\"table\", {\n        className: \"meal-table\",\n        children: [/*#__PURE__*/_jsxDEV(\"thead\", {\n          children: /*#__PURE__*/_jsxDEV(\"tr\", {\n            children: [/*#__PURE__*/_jsxDEV(\"th\", {\n              children: \"Date\"\n            }, void 0, false, {\n              fileName: _jsxFileName,\n              lineNumber: 595,\n              columnNumber: 17\n            }, this), /*#__PURE__*/_jsxDEV(\"th\", {\n              children: \"Breakfast\"\n            }, void 0, false, {\n              fileName: _jsxFileName,\n              lineNumber: 595,\n              columnNumber: 30\n            }, this), /*#__PURE__*/_jsxDEV(\"th\", {\n              children: \"Lunch\"\n            }, void 0, false, {\n              fileName: _jsxFileName,\n              lineNumber: 595,\n              columnNumber: 48\n            }, this), /*#__PURE__*/_jsxDEV(\"th\", {\n              children: \"Supper\"\n            }, void 0, false, {\n              fileName: _jsxFileName,\n              lineNumber: 595,\n              columnNumber: 62\n            }, this)]\n          }, void 0, true, {\n            fileName: _jsxFileName,\n            lineNumber: 595,\n            columnNumber: 13\n          }, this)\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 594,\n          columnNumber: 11\n        }, this), /*#__PURE__*/_jsxDEV(\"tbody\", {\n          children: Object.entries(mealCounts).map(([day, meals]) => /*#__PURE__*/_jsxDEV(\"tr\", {\n            children: [/*#__PURE__*/_jsxDEV(\"td\", {\n              className: \"date-col\",\n              children: day\n            }, void 0, false, {\n              fileName: _jsxFileName,\n              lineNumber: 600,\n              columnNumber: 17\n            }, this), /*#__PURE__*/_jsxDEV(\"td\", {\n              className: day === todayStr ? \"today-col\" : \"\",\n              children: meals.breakfast\n            }, void 0, false, {\n              fileName: _jsxFileName,\n              lineNumber: 601,\n              columnNumber: 17\n            }, this), /*#__PURE__*/_jsxDEV(\"td\", {\n              className: day === todayStr ? \"today-col\" : \"\",\n              children: meals.lunch\n            }, void 0, false, {\n              fileName: _jsxFileName,\n              lineNumber: 602,\n              columnNumber: 17\n            }, this), /*#__PURE__*/_jsxDEV(\"td\", {\n              className: day === todayStr ? \"today-col\" : \"\",\n              children: meals.supper\n            }, void 0, false, {\n              fileName: _jsxFileName,\n              lineNumber: 603,\n              columnNumber: 17\n            }, this)]\n          }, day, true, {\n            fileName: _jsxFileName,\n            lineNumber: 599,\n            columnNumber: 15\n          }, this))\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 597,\n          columnNumber: 11\n        }, this)]\n      }, void 0, true, {\n        fileName: _jsxFileName,\n        lineNumber: 593,\n        columnNumber: 9\n      }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n        className: \"admin-actions\",\n        children: /*#__PURE__*/_jsxDEV(\"button\", {\n          className: \"btn\",\n          onClick: () => setView(\"dashboard\"),\n          children: \"\\u2B05\\uFE0F Back\"\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 610,\n          columnNumber: 11\n        }, this)\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 609,\n        columnNumber: 9\n      }, this)]\n    }, void 0, true, {\n      fileName: _jsxFileName,\n      lineNumber: 591,\n      columnNumber: 7\n    }, this);\n  }\n\n  // ---------- Dashboard ----------\n  const todayMeals = mealCounts[todayStr] || {\n    breakfast: 0,\n    lunch: 0,\n    supper: 0\n  };\n  return /*#__PURE__*/_jsxDEV(\"div\", {\n    className: \"admin-container\",\n    children: [/*#__PURE__*/_jsxDEV(\"h2\", {\n      className: \"title\",\n      children: \"\\uD83D\\uDCCA Admin Dashboard\"\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 621,\n      columnNumber: 7\n    }, this), /*#__PURE__*/_jsxDEV(\"h3\", {\n      children: \"\\uD83C\\uDF7D\\uFE0F Today\\u2019s Meal Count\"\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 623,\n      columnNumber: 7\n    }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n      className: \"today-meals\",\n      children: [/*#__PURE__*/_jsxDEV(\"p\", {\n        children: [\"\\uD83C\\uDF73 Breakfast: \", /*#__PURE__*/_jsxDEV(\"strong\", {\n          children: todayMeals.breakfast\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 625,\n          columnNumber: 26\n        }, this)]\n      }, void 0, true, {\n        fileName: _jsxFileName,\n        lineNumber: 625,\n        columnNumber: 9\n      }, this), /*#__PURE__*/_jsxDEV(\"p\", {\n        children: [\"\\uD83E\\uDD57 Lunch: \", /*#__PURE__*/_jsxDEV(\"strong\", {\n          children: todayMeals.lunch\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 626,\n          columnNumber: 22\n        }, this)]\n      }, void 0, true, {\n        fileName: _jsxFileName,\n        lineNumber: 626,\n        columnNumber: 9\n      }, this), /*#__PURE__*/_jsxDEV(\"p\", {\n        children: [\"\\uD83C\\uDF5B Supper: \", /*#__PURE__*/_jsxDEV(\"strong\", {\n          children: todayMeals.supper\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 627,\n          columnNumber: 23\n        }, this)]\n      }, void 0, true, {\n        fileName: _jsxFileName,\n        lineNumber: 627,\n        columnNumber: 9\n      }, this)]\n    }, void 0, true, {\n      fileName: _jsxFileName,\n      lineNumber: 624,\n      columnNumber: 7\n    }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n      className: \"admin-actions\",\n      children: [/*#__PURE__*/_jsxDEV(\"button\", {\n        className: \"btn points-btn\",\n        onClick: goToPointSystem,\n        children: \"\\u2699\\uFE0F Point System\"\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 631,\n        columnNumber: 9\n      }, this), /*#__PURE__*/_jsxDEV(\"button\", {\n        className: \"btn points-btn\",\n        onClick: () => setView(\"points\"),\n        children: \"\\uD83D\\uDCD1 Points Report\"\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 632,\n        columnNumber: 9\n      }, this), /*#__PURE__*/_jsxDEV(\"button\", {\n        className: \"btn points-btn\",\n        onClick: () => setView(\"requests\"),\n        children: \"\\uD83D\\uDC65 User Requests\"\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 633,\n        columnNumber: 9\n      }, this), /*#__PURE__*/_jsxDEV(\"button\", {\n        className: \"btn points-btn\",\n        onClick: () => setView(\"monthly\"),\n        children: \"\\uD83D\\uDC64 Manage Monthly Users\"\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 634,\n        columnNumber: 9\n      }, this), /*#__PURE__*/_jsxDEV(\"button\", {\n        className: \"btn points-btn\",\n        onClick: () => setView(\"meals\"),\n        children: \"\\uD83E\\uDD58 Meal Counts\"\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 635,\n        columnNumber: 9\n      }, this), /*#__PURE__*/_jsxDEV(\"button\", {\n        className: \"logout-btn\",\n        onClick: onLogout,\n        children: \"Logout\"\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 636,\n        columnNumber: 9\n      }, this)]\n    }, void 0, true, {\n      fileName: _jsxFileName,\n      lineNumber: 630,\n      columnNumber: 7\n    }, this)]\n  }, void 0, true, {\n    fileName: _jsxFileName,\n    lineNumber: 620,\n    columnNumber: 5\n  }, this);\n}\n_s(AdminPage, \"0ZwQjK9iqUAn9w33zp3HhTSCCOk=\");\n_c = AdminPage;\nexport default AdminPage;\nvar _c;\n$RefreshReg$(_c, \"AdminPage\");","map":{"version":3,"names":["React","useEffect","useState","db","collection","getDocs","doc","getDoc","setDoc","updateDoc","query","where","jsxDEV","_jsxDEV","Fragment","_Fragment","AdminPage","onLogout","goToPointSystem","_s","mealCounts","setMealCounts","userPoints","setUserPoints","userMarks","setUserMarks","loading","setLoading","fromDate","setFromDate","toDate","setToDate","generated","setGenerated","allUsers","setAllUsers","view","setView","month","setMonth","Date","getMonth","year","setYear","getFullYear","fromDay","setFromDay","toDay","setToDay","dailyDay","setDailyDay","getDate","defaultSystem","X","B","L","S","pointSystem","setPointSystem","generatedRange","setGeneratedRange","from","to","todayStr","toISOString","split","monthlyUsers","setMonthlyUsers","currentKey","String","padStart","exceptions","setExceptions","exceptionUser","setExceptionUser","exceptionFrom","setExceptionFrom","exceptionTo","setExceptionTo","fetchAll","settingsRef","settingsSnap","exists","data","usersRef","querySnapshot","all","counts","today","nextDays","i","d","setDate","dateStr","push","breakfast","lunch","supper","forEach","docSnap","userMeals","meals","day","meal","err","console","error","loadMonthlyUsers","ref","snap","users","updateUserStatus","email","newStatus","q","snapshot","empty","alert","updates","id","status","Promise","prev","map","u","toggleUserForMonth","user","find","includes","filter","downloadMonthlyUsers","rows","csvContent","r","join","blob","Blob","type","url","URL","createObjectURL","a","document","createElement","href","setAttribute","body","appendChild","click","removeChild","buildDaysArray","arr","s","e","getTime","generateReport","f","t","length","points","markings","days","daysToCalculate","userException","ex","_pointSystem$key","firstMealDate","userMarkings","key","totalPoints","exportCSV","header","Object","entries","name","pts","marks","row","exportDailyMarkingCSV","mon","selectedDate","_user$meals","displayName","className","children","fileName","_jsxFileName","lineNumber","columnNumber","branch","phone","mea","onClick","style","justifyContent","gap","value","onChange","Number","target","m","Array","_","y","marginTop","display","alignItems","checked","daysInMonth","fDay","tDay","borderTop","paddingTop","marginLeft","todayMeals","_c","$RefreshReg$"],"sources":["C:/Users/mohdn/OneDrive/Desktop/mess-app-starter/src/AdminPage.js"],"sourcesContent":["// AdminPage.js\r\nimport React, { useEffect, useState } from \"react\";\r\nimport { db } from \"./firebase\";\r\nimport {\r\n  collection,\r\n  getDocs,\r\n  doc,\r\n  getDoc,\r\n  setDoc,\r\n  updateDoc,\r\n  query,\r\n  where,\r\n} from \"firebase/firestore\";\r\nimport \"./AdminPage.css\";\r\n\r\nfunction AdminPage({ onLogout, goToPointSystem }) {\r\n  const [mealCounts, setMealCounts] = useState({});\r\n  const [userPoints, setUserPoints] = useState({});\r\n  const [userMarks, setUserMarks] = useState({});\r\n  const [loading, setLoading] = useState(true);\r\n\r\n  const [fromDate, setFromDate] = useState(\"\");\r\n  const [toDate, setToDate] = useState(\"\");\r\n  const [generated, setGenerated] = useState(false);\r\n\r\n  const [allUsers, setAllUsers] = useState([]);\r\n  const [view, setView] = useState(\"dashboard\"); // dashboard | requests | points | meals | monthly\r\n\r\n  const [month, setMonth] = useState(new Date().getMonth() + 1);\r\n  const [year, setYear] = useState(new Date().getFullYear());\r\n  const [fromDay, setFromDay] = useState(1);\r\n  const [toDay, setToDay] = useState(1);\r\n\r\n  const [dailyDay, setDailyDay] = useState(new Date().getDate());\r\n\r\n  const defaultSystem = {\r\n    X: 1,\r\n    \"0\": 0,\r\n    B: 0.25,\r\n    L: 0.35,\r\n    S: 0.45,\r\n    \"B/L\": 0.65,\r\n    \"B/S\": 0.75,\r\n    \"L/S\": 0.85,\r\n  };\r\n  const [pointSystem, setPointSystem] = useState(defaultSystem);\r\n\r\n  const [generatedRange, setGeneratedRange] = useState({ from: \"\", to: \"\" });\r\n\r\n  const todayStr = new Date().toISOString().split(\"T\")[0];\r\n\r\n  // --- monthly users state ---\r\n  const [monthlyUsers, setMonthlyUsers] = useState([]); // array of emails\r\n  const currentKey = `${year}-${String(month).padStart(2, \"0\")}`;\r\n  const [exceptions, setExceptions] = useState([]); // [{email, from, to}]\r\nconst [exceptionUser, setExceptionUser] = useState(\"\");\r\nconst [exceptionFrom, setExceptionFrom] = useState(\"\");\r\nconst [exceptionTo, setExceptionTo] = useState(\"\");\r\n\r\n\r\n  // fetch settings + users + meal counts\r\n  useEffect(() => {\r\n    const fetchAll = async () => {\r\n      try {\r\n        // load point system settings (if exists)\r\n        const settingsRef = doc(db, \"settings\", \"points\");\r\n        const settingsSnap = await getDoc(settingsRef);\r\n        if (settingsSnap.exists()) {\r\n          setPointSystem(settingsSnap.data());\r\n        } else {\r\n          // create default if missing\r\n          await setDoc(settingsRef, defaultSystem);\r\n        }\r\n\r\n        // load users\r\n        const usersRef = collection(db, \"users\");\r\n        const querySnapshot = await getDocs(usersRef);\r\n\r\n        const all = [];\r\n        // meal counts for next 8 days\r\n        const counts = {};\r\n        const today = new Date();\r\n\r\n        const nextDays = [];\r\n        for (let i = 0; i < 8; i++) {\r\n          const d = new Date(today);\r\n          d.setDate(today.getDate() + i);\r\n          const dateStr = d.toISOString().split(\"T\")[0];\r\n          nextDays.push(dateStr);\r\n          counts[dateStr] = { breakfast: 0, lunch: 0, supper: 0 };\r\n        }\r\n\r\n        querySnapshot.forEach((docSnap) => {\r\n          const data = docSnap.data();\r\n          // Save full doc data (note: we keep doc id unavailable here; updates use query)\r\n          all.push(data);\r\n\r\n          const userMeals = data.meals || {};\r\n          nextDays.forEach((day) => {\r\n            const meals = userMeals[day];\r\n            if (meals) {\r\n              [\"breakfast\", \"lunch\", \"supper\"].forEach((meal) => {\r\n                if (meals[meal]) counts[day][meal] += 1;\r\n              });\r\n            } else if (day > todayStr) {\r\n              // future days default to assuming they will take meal (legacy behavior)\r\n              counts[day].breakfast += 1;\r\n              counts[day].lunch += 1;\r\n              counts[day].supper += 1;\r\n            }\r\n          });\r\n        });\r\n\r\n        setAllUsers(all);\r\n        setMealCounts(counts);\r\n      } catch (err) {\r\n        console.error(\"Admin data error:\", err);\r\n      } finally {\r\n        setLoading(false);\r\n      }\r\n    };\r\n\r\n    fetchAll();\r\n  }, []); // run once\r\n\r\n  // load monthly users whenever currentKey changes\r\n  useEffect(() => {\r\n    const loadMonthlyUsers = async () => {\r\n      try {\r\n        const ref = doc(db, \"monthlyUsers\", currentKey);\r\n        const snap = await getDoc(ref);\r\n        if (snap.exists()) setMonthlyUsers(snap.data().users || []);\r\n        else setMonthlyUsers([]);\r\n      } catch (err) {\r\n        console.error(\"Error loading monthly users:\", err);\r\n        setMonthlyUsers([]);\r\n      }\r\n    };\r\n    loadMonthlyUsers();\r\n  }, [currentKey]);\r\n\r\n  // --- update user status (approve/reject) ---\r\n  // uses query to find the user doc(s) with matching email and updates them\r\n  const updateUserStatus = async (email, newStatus) => {\r\n    try {\r\n      const usersRef = collection(db, \"users\");\r\n      const q = query(usersRef, where(\"email\", \"==\", email));\r\n      const snapshot = await getDocs(q);\r\n\r\n      if (snapshot.empty) {\r\n        alert(`⚠️ User with email ${email} not found.`);\r\n        return;\r\n      }\r\n\r\n      const updates = [];\r\n      snapshot.forEach((docSnap) => {\r\n        updates.push(updateDoc(doc(db, \"users\", docSnap.id), { status: newStatus }));\r\n      });\r\n      await Promise.all(updates);\r\n\r\n      // update local list\r\n      setAllUsers((prev) =>\r\n        prev.map((u) => (u.email === email ? { ...u, status: newStatus } : u))\r\n      );\r\n\r\n      alert(`✅ User ${email} marked as ${newStatus}`);\r\n    } catch (err) {\r\n      console.error(\"Error updating status:\", err);\r\n      alert(\"⚠️ Error updating user status. See console.\");\r\n    }\r\n  };\r\n\r\n  // --- Add or toggle an approved user for the current month (manage monthly list) ---\r\n  const toggleUserForMonth = async (email) => {\r\n    try {\r\n      // ensure only approved users can be toggled (defensive)\r\n      const user = allUsers.find((u) => u.email === email);\r\n      if (!user || (user.status && user.status !== \"approved\")) {\r\n        alert(\"⚠️ Only approved users can be added to the monthly list.\");\r\n        return;\r\n      }\r\n\r\n      const ref = doc(db, \"monthlyUsers\", currentKey);\r\n      const snap = await getDoc(ref);\r\n      let users = snap.exists() ? snap.data().users || [] : [];\r\n\r\n      if (users.includes(email)) {\r\n        users = users.filter((u) => u !== email);\r\n      } else {\r\n        users.push(email);\r\n      }\r\n\r\n      await setDoc(ref, { users });\r\n      setMonthlyUsers(users);\r\n    } catch (err) {\r\n      console.error(\"Error updating monthly users:\", err);\r\n      alert(\"⚠️ Could not update monthly users. See console.\");\r\n    }\r\n  };\r\n\r\n  // --- Download monthly users as CSV ---\r\n  const downloadMonthlyUsers = async () => {\r\n    try {\r\n      const ref = doc(db, \"monthlyUsers\", currentKey);\r\n      const snap = await getDoc(ref);\r\n      if (!snap.exists()) {\r\n        alert(\"⚠️ No users found for this month\");\r\n        return;\r\n      }\r\n      const users = snap.data().users || [];\r\n      const rows = [[\"Email\"]];\r\n      users.forEach((u) => rows.push([u]));\r\n      const csvContent = rows.map((r) => r.join(\",\")).join(\"\\n\");\r\n      const blob = new Blob([csvContent], { type: \"text/csv;charset=utf-8;\" });\r\n      const url = URL.createObjectURL(blob);\r\n      const a = document.createElement(\"a\");\r\n      a.href = url;\r\n      a.setAttribute(\"download\", `monthly_users_${currentKey}.csv`);\r\n      document.body.appendChild(a);\r\n      a.click();\r\n      document.body.removeChild(a);\r\n    } catch (err) {\r\n      console.error(\"Error downloading monthly users:\", err);\r\n      alert(\"⚠️ Could not download monthly users. See console.\");\r\n    }\r\n  };\r\n\r\n  // --- helpers ---\r\n  const buildDaysArray = (from, to) => {\r\n    const arr = [];\r\n    const s = new Date(from);\r\n    const e = new Date(to);\r\n    for (let d = new Date(s.getTime()); d.getTime() <= e.getTime(); d.setDate(d.getDate() + 1)) {\r\n      arr.push(d.toISOString().split(\"T\")[0]);\r\n    }\r\n    return arr;\r\n  };\r\n\r\n  // --- Generate report: only users present in monthlyUsers for currentKey ---\r\n  const generateReport = (f, t) => {\r\n    const from = f || fromDate;\r\n    const to = t || toDate;\r\n\r\n    if (!from || !to) {\r\n      alert(\"⚠️ Please select both From and To dates!\");\r\n      return;\r\n    }\r\n\r\n    if (!monthlyUsers || monthlyUsers.length === 0) {\r\n      alert(\"⚠️ No users added for this month. Use Manage Monthly Users to add approved users.\");\r\n      return;\r\n    }\r\n\r\n    const points = {};\r\n    const markings = {};\r\n    const days = buildDaysArray(from, to);\r\n\r\n    let daysToCalculate = days;\r\n\r\n// check if user has an exception\r\nconst userException = exceptions.find((ex) => ex.email === user.email);\r\nif (userException) {\r\n  daysToCalculate = buildDaysArray(userException.from, userException.to);\r\n}\r\n\r\ndaysToCalculate.forEach((day) => {\r\n  let meals = userMeals[day];\r\n  if (!meals) {\r\n    if (day > todayStr || day >= firstMealDate) {\r\n      meals = { breakfast: true, lunch: true, supper: true };\r\n    } else {\r\n      userMarkings[day] = \"0\";\r\n      return;\r\n    }\r\n  }\r\n  const arr = [];\r\n  if (meals.breakfast) arr.push(\"B\");\r\n  if (meals.lunch) arr.push(\"L\");\r\n  if (meals.supper) arr.push(\"S\");\r\n  let key = arr.length === 3 ? \"X\" : arr.length === 0 ? \"0\" : arr.join(\"/\");\r\n  totalPoints += pointSystem[key] ?? 0;\r\n  userMarkings[day] = key;\r\n});\r\n\r\n    setUserPoints(points);\r\n    setUserMarks(markings);\r\n    setGenerated(true);\r\n    setFromDate(from);\r\n    setToDate(to);\r\n    setGeneratedRange({ from, to });\r\n  };\r\n\r\n  // --- Export CSV (range) ---\r\n  const exportCSV = () => {\r\n    const from = generatedRange.from || fromDate;\r\n    const to = generatedRange.to || toDate;\r\n\r\n    if (!from || !to) {\r\n      alert(\"⚠️ Please generate a report first (use Generate).\");\r\n      return;\r\n    }\r\n\r\n    const days = buildDaysArray(from, to);\r\n    const header = [\"Name\", ...days, \"Total Points\"];\r\n    const rows = [header];\r\n\r\n    Object.entries(userPoints).forEach(([name, pts]) => {\r\n      const marks = userMarks[name] || {};\r\n      const row = [name];\r\n      days.forEach((day) => {\r\n        row.push(marks[day] || \"0\");\r\n      });\r\n      row.push(pts);\r\n      rows.push(row);\r\n    });\r\n\r\n    const csvContent = rows.map((r) => r.join(\",\")).join(\"\\n\");\r\n    const blob = new Blob([csvContent], { type: \"text/csv;charset=utf-8;\" });\r\n\r\n    const url = URL.createObjectURL(blob);\r\n    const a = document.createElement(\"a\");\r\n    a.href = url;\r\n    a.setAttribute(\"download\", `points_${from}_to_${to}.csv`);\r\n    document.body.appendChild(a);\r\n    a.click();\r\n    document.body.removeChild(a);\r\n  };\r\n\r\n  // --- Export single-day marking CSV (only monthly users)\r\n  const exportDailyMarkingCSV = () => {\r\n    const day = String(dailyDay).padStart(2, \"0\");\r\n    const mon = String(month).padStart(2, \"0\");\r\n    const selectedDate = `${year}-${mon}-${day}`;\r\n\r\n    const rows = [[\"Name\", \"Marking\"]];\r\n\r\n    allUsers.forEach((user) => {\r\n      // only include monthly users\r\n      if (!monthlyUsers.includes(user.email)) return;\r\n\r\n      const displayName = user.name || user.email || \"Unknown\";\r\n      const meals = user.meals?.[selectedDate];\r\n\r\n      let key;\r\n      if (!meals) {\r\n        if (selectedDate > todayStr) {\r\n          key = \"X\";\r\n        } else {\r\n          key = \"0\";\r\n        }\r\n      } else {\r\n        const arr = [];\r\n        if (meals.breakfast) arr.push(\"B\");\r\n        if (meals.lunch) arr.push(\"L\");\r\n        if (meals.supper) arr.push(\"S\");\r\n        if (arr.length === 3) key = \"X\";\r\n        else if (arr.length === 0) key = \"0\";\r\n        else key = arr.join(\"/\");\r\n      }\r\n\r\n      rows.push([displayName, key]);\r\n    });\r\n\r\n    const csvContent = rows.map((r) => r.join(\",\")).join(\"\\n\");\r\n    const blob = new Blob([csvContent], { type: \"text/csv;charset=utf-8;\" });\r\n\r\n    const url = URL.createObjectURL(blob);\r\n    const a = document.createElement(\"a\");\r\n    a.href = url;\r\n    a.setAttribute(\"download\", `daily_marking_${selectedDate}.csv`);\r\n    document.body.appendChild(a);\r\n    a.click();\r\n    document.body.removeChild(a);\r\n  };\r\n\r\n  if (loading) return <h2 className=\"loading\">Loading data...</h2>;\r\n\r\n  // ---------- Requests view (pending users awaiting approval) ----------\r\n  if (view === \"requests\") {\r\n    return (\r\n      <div className=\"admin-container\">\r\n        <h2 className=\"title\">🆕 Pending User Requests</h2>\r\n        <table className=\"meal-table\">\r\n          <thead>\r\n            <tr>\r\n              <th>Name</th><th>Email</th><th>Year</th><th>Branch</th><th>Phone</th><th>Hostel</th><th>Actions</th>\r\n            </tr>\r\n          </thead>\r\n          <tbody>\r\n            {allUsers.filter((u) => u.status === \"pending\").map((user) => (\r\n              <tr key={user.email}>\r\n                <td>{user.name}</td>\r\n                <td>{user.email}</td>\r\n                <td>{user.year}</td>\r\n                <td>{user.branch}</td>\r\n                <td>{user.phone}</td>\r\n                <td>{user.mea}</td>\r\n                <td>\r\n                  <button className=\"btn approve-btn\" onClick={() => updateUserStatus(user.email, \"approved\")}>✅ Approve</button>\r\n                  <button className=\"btn reject-btn\" onClick={() => updateUserStatus(user.email, \"rejected\")}>❌ Reject</button>\r\n                </td>\r\n              </tr>\r\n            ))}\r\n          </tbody>\r\n        </table>\r\n\r\n        <div className=\"admin-actions\">\r\n          <button className=\"btn\" onClick={() => setView(\"dashboard\")}>⬅️ Back</button>\r\n          <button className=\"logout-btn\" onClick={onLogout}>Logout</button>\r\n        </div>\r\n      </div>\r\n    );\r\n  }\r\n\r\n  // ---------- Manage Monthly Users view (ONLY approved users are shown to be toggled) ----------\r\n  if (view === \"monthly\") {\r\n    return (\r\n      <div className=\"admin-container\">\r\n        <h2 className=\"title\">👥 Manage Monthly Users ({currentKey})</h2>\r\n\r\n        <div className=\"report-filters\" style={{ justifyContent: \"flex-start\", gap: 12 }}>\r\n          <label>\r\n            Month:\r\n            <select value={month} onChange={(e) => setMonth(Number(e.target.value))}>\r\n              {[\r\n                \"January\",\"February\",\"March\",\"April\",\"May\",\"June\",\r\n                \"July\",\"August\",\"September\",\"October\",\"November\",\"December\"\r\n              ].map((m, i) => (\r\n                <option key={i} value={i + 1}>{m}</option>\r\n              ))}\r\n            </select>\r\n          </label>\r\n\r\n          <label>\r\n            Year:\r\n            <select value={year} onChange={(e) => setYear(Number(e.target.value))}>\r\n              {Array.from({ length: 6 }, (_, i) => 2023 + i).map((y) => (\r\n                <option key={y} value={y}>{y}</option>\r\n              ))}\r\n            </select>\r\n          </label>\r\n        </div>\r\n\r\n        <table className=\"meal-table\" style={{ marginTop: 14 }}>\r\n          <thead>\r\n            <tr><th>Name</th><th>Email</th><th>Include for month?</th></tr>\r\n          </thead>\r\n          <tbody>\r\n            {allUsers.filter((u) => u.status === \"approved\").map((user) => (\r\n              <tr key={user.email}>\r\n                <td>{user.name}</td>\r\n                <td>{user.email}</td>\r\n                <td>\r\n                  <label style={{ display: \"inline-flex\", alignItems: \"center\", gap: 8 }}>\r\n                    <input\r\n                      type=\"checkbox\"\r\n                      checked={monthlyUsers.includes(user.email)}\r\n                      onChange={() => toggleUserForMonth(user.email)}\r\n                    />\r\n                    <span className=\"small-muted\">{monthlyUsers.includes(user.email) ? \"Included\" : \"Not included\"}</span>\r\n                  </label>\r\n                </td>\r\n              </tr>\r\n            ))}\r\n          </tbody>\r\n        </table>\r\n\r\n        <div className=\"admin-actions\">\r\n          <button className=\"btn export-btn\" onClick={downloadMonthlyUsers}>⬇️ Download Monthly Users</button>\r\n          <button className=\"btn\" onClick={() => setView(\"dashboard\")}>⬅️ Back</button>\r\n        </div>\r\n      </div>\r\n    );\r\n  }\r\n\r\n  // ---------- Points view ----------\r\n  if (view === \"points\") {\r\n    const daysInMonth = new Date(year, month, 0).getDate();\r\n\r\n    return (\r\n      <div className=\"admin-container\">\r\n        <h2 className=\"title\">📑 Generate Points Report ({currentKey})</h2>\r\n\r\n        <div className=\"report-filters\">\r\n          <label>\r\n            Month:\r\n            <select value={month} onChange={(e) => setMonth(Number(e.target.value))}>\r\n              {[\r\n                \"January\",\"February\",\"March\",\"April\",\"May\",\"June\",\r\n                \"July\",\"August\",\"September\",\"October\",\"November\",\"December\"\r\n              ].map((m, i) => (\r\n                <option key={i} value={i + 1}>{m}</option>\r\n              ))}\r\n            </select>\r\n          </label>\r\n\r\n          <label>\r\n            Year:\r\n            <select value={year} onChange={(e) => setYear(Number(e.target.value))}>\r\n              {Array.from({ length: 6 }, (_, i) => 2023 + i).map((y) => (\r\n                <option key={y} value={y}>{y}</option>\r\n              ))}\r\n            </select>\r\n          </label>\r\n\r\n          <label>\r\n            From:\r\n            <select value={fromDay} onChange={(e) => setFromDay(Number(e.target.value))}>\r\n              {Array.from({ length: daysInMonth }, (_, i) => i + 1).map((d) => (\r\n                <option key={d} value={d}>{d}</option>\r\n              ))}\r\n            </select>\r\n          </label>\r\n\r\n          <label>\r\n            To:\r\n            <select value={toDay} onChange={(e) => setToDay(Number(e.target.value))}>\r\n              {Array.from({ length: daysInMonth }, (_, i) => i + 1).map((d) => (\r\n                <option key={d} value={d}>{d}</option>\r\n              ))}\r\n            </select>\r\n          </label>\r\n\r\n          <button\r\n            className=\"btn generate-btn\"\r\n            onClick={() => {\r\n              let fDay = fromDay;\r\n              let tDay = toDay;\r\n              if (fromDay > toDay) {\r\n                fDay = toDay;\r\n                tDay = fromDay;\r\n                setFromDay(fDay);\r\n                setToDay(tDay);\r\n              }\r\n              const f = `${year}-${String(month).padStart(2, \"0\")}-${String(fDay).padStart(2, \"0\")}`;\r\n              const t = `${year}-${String(month).padStart(2, \"0\")}-${String(tDay).padStart(2, \"0\")}`;\r\n              generateReport(f, t);\r\n            }}\r\n          >\r\n            Generate\r\n          </button>\r\n        </div>\r\n\r\n        {generated && (\r\n          <>\r\n            <table className=\"meal-table\">\r\n              <thead>\r\n                <tr><th>Name</th><th>Total Points</th></tr>\r\n              </thead>\r\n              <tbody>\r\n                {Object.entries(userPoints).map(([name, points]) => (\r\n                  <tr key={name}><td>{name}</td><td>{points}</td></tr>\r\n                ))}\r\n              </tbody>\r\n            </table>\r\n\r\n            <div style={{ display: \"flex\", gap: 8, alignItems: \"center\", marginTop: 10 }}>\r\n              <button className=\"btn export-btn\" onClick={exportCSV}>⬇️ Download Range CSV</button>\r\n              <button className=\"btn export-btn\" onClick={downloadMonthlyUsers}>⬇️ Download Monthly Users</button>\r\n            </div>\r\n          </>\r\n        )}\r\n\r\n        <div style={{ marginTop: 18, borderTop: \"1px solid #ddd\", paddingTop: 12 }}>\r\n          <h3>📅 Export Single-Day Markings</h3>\r\n          <label className=\"single-day-label\">\r\n            Day:\r\n            <select className=\"single-day-date\" value={dailyDay} onChange={(e) => setDailyDay(Number(e.target.value))}>\r\n              {Array.from({ length: daysInMonth }, (_, i) => i + 1).map((d) => (\r\n                <option key={d} value={d}>{d}</option>\r\n              ))}\r\n            </select>\r\n          </label>\r\n          <button className=\"btn export-btn\" onClick={exportDailyMarkingCSV} style={{ marginLeft: 10 }}>\r\n            ⬇️ Download todays Marking\r\n          </button>\r\n        </div>\r\n\r\n        <div className=\"admin-actions\" style={{ marginTop: 14 }}>\r\n          <button className=\"btn\" onClick={() => setView(\"dashboard\")}>⬅️ Back</button>\r\n        </div>\r\n        \r\n      </div>\r\n    );\r\n    \r\n  }\r\n\r\n  // ---------- Meals page ----------\r\n  if (view === \"meals\") {\r\n    return (\r\n      <div className=\"admin-container\">\r\n        <h2 className=\"title\">🥘 Meal Counts (Next 8 Days)</h2>\r\n        <table className=\"meal-table\">\r\n          <thead>\r\n            <tr><th>Date</th><th>Breakfast</th><th>Lunch</th><th>Supper</th></tr>\r\n          </thead>\r\n          <tbody>\r\n            {Object.entries(mealCounts).map(([day, meals]) => (\r\n              <tr key={day}>\r\n                <td className=\"date-col\">{day}</td>\r\n                <td className={day === todayStr ? \"today-col\" : \"\"}>{meals.breakfast}</td>\r\n                <td className={day === todayStr ? \"today-col\" : \"\"}>{meals.lunch}</td>\r\n                <td className={day === todayStr ? \"today-col\" : \"\"}>{meals.supper}</td>\r\n              </tr>\r\n            ))}\r\n          </tbody>\r\n        </table>\r\n\r\n        <div className=\"admin-actions\">\r\n          <button className=\"btn\" onClick={() => setView(\"dashboard\")}>⬅️ Back</button>\r\n        </div>\r\n      </div>\r\n    );\r\n  }\r\n\r\n  // ---------- Dashboard ----------\r\n  const todayMeals = mealCounts[todayStr] || { breakfast: 0, lunch: 0, supper: 0 };\r\n\r\n  return (\r\n    <div className=\"admin-container\">\r\n      <h2 className=\"title\">📊 Admin Dashboard</h2>\r\n\r\n      <h3>🍽️ Today’s Meal Count</h3>\r\n      <div className=\"today-meals\">\r\n        <p>🍳 Breakfast: <strong>{todayMeals.breakfast}</strong></p>\r\n        <p>🥗 Lunch: <strong>{todayMeals.lunch}</strong></p>\r\n        <p>🍛 Supper: <strong>{todayMeals.supper}</strong></p>\r\n      </div>\r\n\r\n      <div className=\"admin-actions\">\r\n        <button className=\"btn points-btn\" onClick={goToPointSystem}>⚙️ Point System</button>\r\n        <button className=\"btn points-btn\" onClick={() => setView(\"points\")}>📑 Points Report</button>\r\n        <button className=\"btn points-btn\" onClick={() => setView(\"requests\")}>👥 User Requests</button>\r\n        <button className=\"btn points-btn\" onClick={() => setView(\"monthly\")}>👤 Manage Monthly Users</button>\r\n        <button className=\"btn points-btn\" onClick={() => setView(\"meals\")}>🥘 Meal Counts</button>\r\n        <button className=\"logout-btn\" onClick={onLogout}>Logout</button>\r\n      </div>\r\n    </div>\r\n  );\r\n}\r\n\r\nexport default AdminPage;\r\n"],"mappings":"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","ignoreList":[]},"metadata":{},"sourceType":"module","externalDependencies":[]}